import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
import copy
import glob
from dataclasses import dataclass
from functools import lru_cache
from pathlib import Path

os.environ["PYTORCH_CUDA_ALLOC_CONF"] = "expandable_segments:True"
import torch
torch.empty(1, device="cuda", requires_grad=True).backward() # prevents a bug on some systems
from torch import Tensor, nn
import torch.nn.functional as F
import torch.distributed as dist
# use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention
#torch._inductor.config.coordinate_descent_tuning = True # we have banned this flag for new records because it causes compilation to take 30min

# -----------------------------------------------------------------------------
# Custom operators: FP8 matmul by @YouJiacheng

@torch.library.custom_op("nanogpt::mm", mutates_args=())
def mm_op(x: Tensor, w: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor, Tensor]:
    @torch.compile
    def impl(x: Tensor, w: Tensor):
        assert x.is_contiguous() and w.is_contiguous()
        x_f8 = x.div(x_s).to(torch.float8_e4m3fn)
        w_f8 = w.div(w_s).to(torch.float8_e4m3fn)
        out = torch._scaled_mm(
            x_f8,
            w_f8.T,
            out_dtype=torch.bfloat16,
            scale_a=x.new_tensor(x_s, dtype=torch.float32),
            scale_b=x.new_tensor(w_s, dtype=torch.float32),
            use_fast_accum=True,
        )
        return out, x_f8, w_f8

    return impl(x, w)

@mm_op.register_fake
def _(x: Tensor, w: Tensor, *_):
    assert x.ndim == w.ndim == 2
    assert x.shape[1] == w.shape[1]
    assert x.device == w.device
    assert x.is_contiguous() and w.is_contiguous()
    return x @ w.T, x.to(torch.float8_e4m3fn), w.to(torch.float8_e4m3fn)

@torch.library.custom_op("nanogpt::mm_backward", mutates_args=())
def mm_backward_op(g: Tensor, x_f8: Tensor, w_f8: Tensor, x_s: float, w_s: float, grad_s: float) -> tuple[Tensor, Tensor]:
    @torch.compile
    def impl(grad: Tensor, x_f8: Tensor, w_f8: Tensor):
        assert grad.is_contiguous()
        x_inv_s = grad.new_tensor(x_s, dtype=torch.float32)
        w_inv_s = grad.new_tensor(w_s, dtype=torch.float32)
        grad_inv_s = grad.new_tensor(grad_s, dtype=torch.float32)
        grad_f8 = grad.div(grad_s).to(torch.float8_e5m2)
        grad_x = torch._scaled_mm(
            grad_f8,
            w_f8.T.contiguous().T,
            out_dtype=torch.bfloat16,
            scale_a=grad_inv_s,
            scale_b=w_inv_s,
            use_fast_accum=False,
        )
        # faster than grad_f8_t @ x_f8, for (d_out, d_in) == (50304, 768)
        grad_w = torch._scaled_mm(
            x_f8.T.contiguous(),
            grad_f8.T.contiguous().T,
            out_dtype=torch.float32,
            scale_a=x_inv_s,
            scale_b=grad_inv_s,
            use_fast_accum=False,
        ).T
        return grad_x, grad_w

    return impl(g, x_f8, w_f8)

@mm_backward_op.register_fake
def _(g: Tensor, x_f8: Tensor, w_f8: Tensor, *_):
    return x_f8.to(torch.bfloat16), w_f8.T.contiguous().T.to(torch.float32)

def backward(ctx, grad_out: Tensor, *_):
    x_f8, w_f8 = ctx.saved_tensors
    x_s, w_s, grad_s = ctx.scales
    grad_x, grad_w = torch.ops.nanogpt.mm_backward(
        grad_out, x_f8, w_f8, x_s, w_s, grad_s
    )
    return grad_x, grad_w, None, None, None

def setup_context(ctx: torch.autograd.function.FunctionCtx, inputs, output):
    *_, x_s, w_s, grad_s = inputs
    _, x_f8, w_f8 = output
    ctx.save_for_backward(x_f8, w_f8)
    ctx.scales = x_s, w_s, grad_s
    ctx.set_materialize_grads(False)

mm_op.register_autograd(backward, setup_context=setup_context)

# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the model

def norm(x: Tensor):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):
    def __init__(self, in_features: int, out_features: int, use_fp8=False, x_s=1.0, w_s=1.0, grad_s=1.0):
        super().__init__(in_features, out_features, bias=False)
        self.use_fp8 = use_fp8
        self.x_s = x_s
        self.w_s = w_s
        self.grad_s = grad_s

    def reset_parameters(self) -> None:
        std = 0.5 * (self.in_features ** -0.5) # 0.5 is a bit better than the default 1/sqrt(3)
        bound = (3 ** 0.5) * std
        with torch.no_grad():
            self.weight.uniform_(-bound, bound)

    def forward(self, x: Tensor):
        if self.use_fp8 and self.training:
            _x = x.flatten(0, -2)
            out: Tensor = torch.ops.nanogpt.mm(_x, self.weight, x_s=self.x_s, w_s=self.w_s, grad_s=self.grad_s)[0]
            return out.reshape(*x.shape[:-1], -1)
        else:
            return F.linear(x, self.weight.type_as(x))

class Rotary(nn.Module):
    def __init__(self, dim: int, max_seq_len: int):
        super().__init__()
        # half-truncate RoPE by @YouJiacheng (w/ base freq tuning)
        angular_freq = (1 / 1024) ** torch.linspace(0, 1, steps=dim//4, dtype=torch.float32)
        angular_freq = torch.cat([angular_freq, angular_freq.new_zeros(dim//4)])
        t = torch.arange(max_seq_len, dtype=torch.float32)
        theta = torch.einsum("i,j -> ij", t, angular_freq)
        self.cos = nn.Buffer(theta.cos(), persistent=False)
        self.sin = nn.Buffer(theta.sin(), persistent=False)

    def forward(self, x_BTHD: Tensor):
        assert self.cos.size(0) >= x_BTHD.size(-3)
        cos, sin = self.cos[None, :x_BTHD.size(-3), None, :], self.sin[None, :x_BTHD.size(-3), None, :]
        x1, x2 = x_BTHD.to(dtype=torch.float32).chunk(2, dim=-1)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x_BTHD)

class CausalSelfAttention(nn.Module):
    def __init__(self, dim: int, num_heads: int, max_seq_len: int, head_dim=128):
        super().__init__()
        self.num_heads = num_heads
        self.head_dim = head_dim
        hdim = num_heads * head_dim
        std = 0.5 * (dim ** -0.5)
        bound = (3 ** 0.5) * std # improved init scale by @YouJiacheng
        # merged QKV weights: suggested by many, implemented by @fernbear.bsky.social, and further improved by @YouJiacheng
        # https://x.com/hi_tysam/status/1879699187107033311
        self.qkv_w = nn.Parameter(torch.empty(3, hdim, dim).uniform_(-bound, bound))
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5]))
        self.rotary = Rotary(head_dim, max_seq_len)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977

    def forward(self, x: Tensor, ve: Tensor | None, block_mask: BlockMask):
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q, k, v = F.linear(x, self.qkv_w.flatten(end_dim=1).type_as(x)).view(B, T, 3 * self.num_heads, self.head_dim).chunk(3, dim=-2)
        q, k = norm(q), norm(k) # QK norm @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        if ve is not None:
            v = self.lambdas[0] * v + self.lambdas[1] * ve.view_as(v) # @KoszarskyB & @Grad62304977
        else: # skip mid-layers token value embeddings by @YouJiacheng
            v = self.lambdas[0] * v
        # scale the attention logits by given constant, instead of the default head_dim**-0.5, by @leloykun
        # inspired by learnable scalars used by @brendanh0gan https://x.com/hi_tysam/status/1879693583898591283
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask, scale=0.12).transpose(1, 2)
        y = y.contiguous().view(B, T, self.num_heads * self.head_dim) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):
    def __init__(self, dim: int):
        super().__init__()
        hdim = 4 * dim
        self.c_fc = CastedLinear(dim, hdim)
        self.c_proj = CastedLinear(hdim, dim)
        self.c_proj.weight.detach().zero_() # zero init suggested by @Grad62304977

    def forward(self, x: Tensor):
        x = self.c_fc(x)
        x = F.relu(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):
    def __init__(self, dim: int, num_heads: int, max_seq_len: int, layer_idx: int):
        super().__init__()
        # skip attention of blocks.7 (the 8th layer) by @YouJiacheng
        self.attn = CausalSelfAttention(dim, num_heads, max_seq_len) if layer_idx != 7 else None
        self.mlp = MLP(dim)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: Tensor, ve: Tensor | None, x0: Tensor, block_mask: BlockMask):
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        if self.attn is not None:
            x = x + self.attn(norm(x), ve, block_mask)
        x = x + self.mlp(norm(x))
        return x

# -----------------------------------------------------------------------------
# custom buckets for efficient allreduce
def initialize_buckets(parameters, bucket_size_bytes):
    buckets, current_bucket, current_size = [], [], 0
    for param in parameters:
        if param.requires_grad and param.grad is None:
            param.grad = torch.zeros_like(param)
        param_size = param.numel() * param.element_size()
        if current_size + param_size > bucket_size_bytes and current_bucket:
            buckets.append(current_bucket)
            current_bucket = []
            current_size = 0
        current_bucket.append(param)
        current_size += param_size
    if current_bucket:
        buckets.append(current_bucket)
    flat_buffers, bucket_info = [], []
    for bucket in buckets:
        grad_shapes = [param.grad.shape for param in bucket]
        total_elements = sum(param.grad.numel() for param in bucket)
        device, dtype = bucket[0].device, bucket[0].dtype
        flat_buffer = torch.zeros(total_elements, device=device, dtype=dtype)
        flat_buffers.append(flat_buffer)
        offsets, offset = [], 0
        for param in bucket:
            numel = param.grad.numel()
            offsets.append((offset, offset + numel))
            offset += numel
        bucket_info.append({'params': bucket,'shapes': grad_shapes,'offsets': offsets})
    return {'bucket_info': bucket_info, 'flat_buffers': flat_buffers}

def reduce_gradients(bucket_data):
    bucket_info, flat_buffers = bucket_data['bucket_info'], bucket_data['flat_buffers']
    handles = []
    for i, (info, flat_buffer) in enumerate(zip(bucket_info, flat_buffers)):
        for param_idx, param in enumerate(info['params']):
            if param.grad is not None:
                start, end = info['offsets'][param_idx]
                flat_buffer[start:end].copy_(param.grad.view(-1))
        handle = dist.all_reduce(flat_buffer, op=dist.ReduceOp.AVG, async_op=True)
        handles.append((handle, i))
    return handles


def unpack_gradients(bucket_data, handles):
    bucket_info, flat_buffers = bucket_data['bucket_info'], bucket_data['flat_buffers']
    for handle, bucket_idx in handles:
        handle.wait()
        info, flat_buffer = bucket_info[bucket_idx], flat_buffers[bucket_idx]
        for param_idx, param in enumerate(info['params']):
            if param.grad is not None:
                start, end = info['offsets'][param_idx]
                param.grad.copy_(flat_buffer[start:end].view(info['shapes'][param_idx]))

# -----------------------------------------------------------------------------
# The main model

def next_multiple_of_n(v: float | int, *, n: int):
    return next(x for x in range(n, int(v) + 1 + n, n) if x >= v)

class GPT(nn.Module):
    def __init__(self, vocab_size: int, num_layers: int, num_heads: int, model_dim: int, max_seq_len: int):
        super().__init__()
        self.embed = nn.Embedding(vocab_size, model_dim)
        # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual implementation following https://arxiv.org/abs/2410.17897
        # value embedding code simplification inspired by @ragulpr https://github.com/KellerJordan/modded-nanogpt/pull/78
        self.value_embeds = nn.ModuleList([nn.Embedding(vocab_size, model_dim) for _ in range(3)])
        self.blocks = nn.ModuleList([Block(model_dim, num_heads, max_seq_len, i) for i in range(num_layers)])
        # there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency.
        # suggested to me by @Grad62304977. this originates from Karpathy's experiments.
        self.lm_head = CastedLinear(model_dim, next_multiple_of_n(vocab_size, n=128),
                                    use_fp8=True, x_s=(model_dim**0.5)/448, w_s=24/448, grad_s=1/448)
        self.lm_head.weight.detach().zero_() # @Grad62304977
        # Add learnable skip connection weights for decoder layers
        assert num_layers % 2 == 0
        self.skip_weights = nn.Parameter(torch.ones(num_layers//2))

    def create_blockmasks(self, input_seq: Tensor, sliding_window_num_blocks: Tensor):
        BLOCK_SIZE = 128
        docs = (input_seq == 50256).cumsum(0)

        def document_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            return causal_mask & document_mask

        def dense_to_ordered(dense_blockmask: Tensor):
            num_blocks = dense_blockmask.sum(dim=-1, dtype=torch.int32)
            indices = dense_blockmask.argsort(dim=-1, descending=False, stable=True).flip(-1).to(torch.int32)
            return num_blocks[None, None].contiguous(), indices[None, None].contiguous()

        # manual block mask creation by @YouJiacheng
        assert len(input_seq) % BLOCK_SIZE == 0
        NUM_BLOCKS = len(input_seq) // BLOCK_SIZE
        block_idx = torch.arange(NUM_BLOCKS, dtype=torch.int32, device="cuda")
        causal_blockmask_any = block_idx[:, None] >= block_idx
        causal_blockmask_all = block_idx[:, None] > block_idx
        docs_low = docs.view(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.view(-1, BLOCK_SIZE)[:, -1].contiguous()
        document_blockmask_any = (docs_low[:, None] <= docs_high) & (docs_high[:, None] >= docs_low)
        document_blockmask_all = (docs_low[:, None] == docs_high) & (docs_high[:, None] == docs_low)
        blockmask_any = causal_blockmask_any & document_blockmask_any
        blockmask_all = causal_blockmask_all & document_blockmask_all
        partial_kv_num_blocks, partial_kv_indices = dense_to_ordered(blockmask_any & ~blockmask_all)
        full_kv_num_blocks, full_kv_indices = dense_to_ordered(blockmask_all)
        def build_bm(window_size_blocks: Tensor) -> BlockMask:
            return BlockMask.from_kv_blocks(
                torch.clamp_max(partial_kv_num_blocks, torch.clamp_min(window_size_blocks - full_kv_num_blocks, 1)),
                partial_kv_indices,
                torch.clamp_max(full_kv_num_blocks, window_size_blocks - 1),
                full_kv_indices,
                BLOCK_SIZE=BLOCK_SIZE,
                mask_mod=document_causal,
            )
        # Long-short SWA block masks by @leloykun & @YouJiacheng, adapated from suggestion by @Grad62304977, following Gemma 2 paper
        return build_bm(sliding_window_num_blocks), build_bm(sliding_window_num_blocks // 2)

    def forward(self, input_seq: Tensor, target_seq: Tensor, sliding_window_num_blocks: Tensor):
        assert input_seq.ndim == 1

        ve = [value_embed(input_seq) for value_embed in self.value_embeds]
        # 012 ... 012 structure on token value embeddings by @YouJiacheng, improved on @leloykun's U-net structure
        ve = [ve[0], ve[1], ve[2]] + [None] * (len(self.blocks) - 6) + [ve[0], ve[1], ve[2]]
        assert len(ve) == len(self.blocks)

        long_bm, short_bm = self.create_blockmasks(input_seq, sliding_window_num_blocks)
        block_masks = [long_bm, short_bm, short_bm, short_bm, long_bm, short_bm, short_bm, long_bm, short_bm, short_bm, short_bm, long_bm]
        assert len(block_masks) == len(self.blocks)

        x = x0 = norm(self.embed(input_seq)[None]) # use of norm here by @Grad62304977

        # U-net design by @brendanh0gan
        skip_connections = []
        n = len(self.skip_weights)
        for i in range(len(self.blocks)):
            if i >= n:
                x = x + self.skip_weights[i - n] * skip_connections.pop()
            x = self.blocks[i](x, ve[i], x0, block_masks[i])
            if i < n:
                skip_connections.append(x)

        x = norm(x)
        logits = self.lm_head(x).float()
        # @Grad62304977 added tanh softcapping following Gemma 2 paper, @KoszarskyB reduced it from 30 to 15, @YouJiacheng shifted it by +15 (2*sigmoid(2*x)=tanh(x)+1)
        logits = 30 * torch.sigmoid(logits / (7.5 * x.size(-1)**0.5))
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target_seq, reduction='sum' if self.training else 'mean')
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _load_data_shard(file: Path):
    header = torch.from_file(str(file), False, 256, dtype=torch.int32) # header is 256 int32
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    num_tokens = int(header[2]) # number of tokens (claimed)
    with file.open("rb", buffering=0) as f:
        tokens = torch.empty(num_tokens, dtype=torch.uint16, pin_memory=True) # avoid pin_memory copy by @YouJiacheng
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy()) # avoid bytes->array copy by @YouJiacheng
        assert nbytes == 2 * num_tokens, "number of tokens read does not match header"
    return tokens

def distributed_data_generator(filename_pattern: str, batch_size: int, rank : int, world_size : int):
    files = [Path(file) for file in sorted(glob.glob(filename_pattern))]
    assert batch_size % world_size == 0
    local_batch_size = batch_size // world_size
    file_iter = iter(files) # use itertools.cycle(files) instead if you want to do multi-epoch training
    tokens, pos = _load_data_shard(next(file_iter)), 0
    while True:
        if pos + batch_size + 1 >= len(tokens):
            tokens, pos = _load_data_shard(next(file_iter)), 0
        buf = tokens[pos + rank * local_batch_size:][:local_batch_size + 1]
        inputs = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # no sync on host side;
        targets = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # H2D in another stream isn't helpful.
        pos += batch_size
        yield inputs, targets

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data
    train_files = "data/fineweb10B/fineweb_train_*.bin" # input .bin to train on
    val_files = "data/fineweb10B/fineweb_val_*.bin" # input .bin to eval validation loss on
    val_tokens = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    train_seq_len = 48*1024 # FlexAttention sequence length
    val_seq_len = 4*64*1024 # FlexAttention sequence length for validation
    # optimization
    num_iterations = 1770 # number of iterations to run
    cooldown_frac = 0.4 # fraction of training spent cooling down the learning rate
    # architecture
    vocab_size = 50257
    # evaluation and logging
    val_loss_every = 125 # every how many steps to evaluate val loss? 0 for only at the end
    save_checkpoint = False
args = Hyperparameters()

# torchrun sets these env variables
rank = int(os.environ["RANK"])
world_size = int(os.environ["WORLD_SIZE"])
assert world_size == 8 # this code is designed for 8xH100
assert torch.cuda.is_available()
device = torch.device("cuda", int(os.environ["LOCAL_RANK"]))
torch.cuda.set_device(device)
dist.init_process_group(backend="nccl", device_id=device)
dist.barrier()
master_process = (rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = uuid.uuid4()
    os.makedirs("logs", exist_ok=True)
    logfile = f"logs/{run_id}.txt"
    print(logfile)
def print0(s, console=False):
    if master_process:
        with open(logfile, "a") as f:
            if console:
                print(s)
            print(s, file=f)

# begin by printing this file (the Python code)
print0(code)
print0("="*100)
# log information about the hardware/software environment this is running on
print0(f"Running Python {sys.version}")
print0(f"Running PyTorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}")
def nvidia_smi():
    import subprocess  # avoid top level import
    return subprocess.run(["nvidia-smi"], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True).stdout
print0(nvidia_smi())
print0("="*100)

########################################
#    Construct model and optimizer     #
########################################

model: nn.Module = GPT(vocab_size=args.vocab_size, num_layers=12, num_heads=6, model_dim=768,
                       max_seq_len=max(args.train_seq_len, args.val_seq_len)).cuda()
for m in model.modules():
    if isinstance(m, nn.Embedding):
        m.bfloat16()
for param in model.parameters():
    dist.broadcast(param.detach(), 0)

# collect the parameters to optimize
hidden_matrix_params = [p for n, p in model.blocks.named_parameters() if p.ndim >= 2 and "embed" not in n]
embed_params = [p for n, p in model.named_parameters() if "embed" in n]
scalar_params = [p for p in model.parameters() if p.ndim < 2]
head_params = [model.lm_head.weight]

# init the optimizer(s)
# small adam epsilon by @YouJiacheng. this is an alternate method of fixing the world_size dependence
# discovered by @fernbear.bsky.social https://x.com/hi_tysam/status/1879692937589875094
from muon import MuonWithAuxAdam
adam_groups = [dict(params=head_params, lr=0.22), dict(params=embed_params, lr=0.6), dict(params=scalar_params, lr=0.04)]
adam_groups = [dict(**g, betas=(0.8, 0.95), eps=1e-10, use_muon=False) for g in adam_groups]
muon_group = dict(params=hidden_matrix_params, lr=0.05, momentum=0.95, use_muon=True)
param_groups = [*adam_groups, muon_group]
optimizer = MuonWithAuxAdam(param_groups)
for group in optimizer.param_groups:
    group["initial_lr"] = group["lr"]

# init the gradient buckets
gradient_buckets = initialize_buckets(model.parameters(), 64.0 * 1024**2) # 128MB buckets

# learning rate schedule: stable then decay
def get_lr(step: int):
    x = step / args.num_iterations # progress in training
    assert 0 <= x < 1
    if x < 1 - args.cooldown_frac:
        return 1.0
    else:
        w = (1 - x) / args.cooldown_frac
        return w * 1.0 + (1 - w) * 0.1

# attention window size schedule: linearly increase
@lru_cache(1)
def get_window_size_blocks_helper(window_size: int):
    return torch.tensor(window_size // 128, dtype=torch.int32, pin_memory=True).cuda(non_blocking=True)
def get_window_size_blocks(step: int):
    x = step / args.num_iterations # progress in training
    assert 0 <= x <= 1
    # Linearly increase the block-wise sliding window size over training 128 -> 1792
    # increase by @fernbear.bsky.social; block-wise by @YouJiacheng
    window_size = next_multiple_of_n(1728 * x, n=128)
    return get_window_size_blocks_helper(window_size)

model: nn.Module = torch.compile(model, dynamic=False)

########################################
#            Warmup kernels            #
########################################

# Warmup the training kernels, then re-initialize the state so we aren't cheating
warmup_steps = 10
initial_state = dict(model=copy.deepcopy(model.state_dict()),
                     optimizer=copy.deepcopy(optimizer.state_dict())) # save the initial state
for _ in range(warmup_steps):
    inputs = targets = torch.randint(0, args.vocab_size, size=(args.train_seq_len,), device="cuda")
    model(inputs.to(torch.int32), targets, get_window_size_blocks(0)).backward()
    for param in model.parameters():
        dist.all_reduce(param.grad, op=dist.ReduceOp.AVG)
    optimizer.step()
    model.zero_grad(set_to_none=True)
model.load_state_dict(initial_state["model"])
optimizer.load_state_dict(initial_state["optimizer"])
del initial_state

########################################
#        Training and validation       #
########################################

train_loader = distributed_data_generator(args.train_files, world_size * args.train_seq_len, rank, world_size)
training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
train_steps = args.num_iterations
for step in range(train_steps + 1):
    last_step = (step == train_steps)

    # --------------- VALIDATION SECTION -----------------
    if last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        model.eval()
        val_batch_size = world_size * args.val_seq_len
        assert args.val_tokens % val_batch_size == 0
        val_steps = args.val_tokens // val_batch_size
        val_loader = distributed_data_generator(args.val_files, val_batch_size, rank, world_size)
        val_loss = 0
        with torch.no_grad():
            for _ in range(val_steps):
                inputs, targets = next(val_loader)
                val_loss += model(inputs, targets, get_window_size_blocks(step))
        val_loss /= val_steps
        del val_loader
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        print0(f"step:{step}/{train_steps} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/max(step, 1):.2f}ms", console=True)
        model.train()
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if last_step:
        if master_process and args.save_checkpoint:
            log = dict(step=step, code=code, model=model.state_dict(), optimizer=optimizer.state_dict())
            os.makedirs(f"logs/{run_id}", exist_ok=True)
            torch.save(log, f"logs/{run_id}/state_step{step:06d}.pt")
        # the last step only has the validation loop, so break to avoid training
        break

    # --------------- TRAINING SECTION -----------------
    inputs, targets = next(train_loader)
    model(inputs, targets, get_window_size_blocks(step)).backward()
    #for param in model.parameters():
    #    dist.all_reduce(param.grad, op=dist.ReduceOp.AVG)
    handles = reduce_gradients(gradient_buckets) # does the same thing as commented two lines above, but faster
    # set optimization hyperparameters
    for group in optimizer.param_groups:
        group["lr"] = group["initial_lr"] * get_lr(step)
    for group in optimizer.param_groups:
        if group["use_muon"]:
            frac = min(step / 300, 1) # momentum warmup for muon
            group["momentum"] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizer
    unpack_gradients(gradient_buckets, handles)
    optimizer.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # logging
    approx_training_time_ms = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{train_steps} train_time:{approx_training_time_ms:.0f}ms step_avg:{approx_training_time_ms/(step + 1):.2f}ms", console=True)

print0(f"peak memory allocated: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB "
       f"reserved: {torch.cuda.max_memory_reserved() // 1024 // 1024} MiB", console=True)
dist.destroy_process_group()

====================================================================================================
Running Python 3.12.7 (main, May 24 2025, 20:59:58) [GCC 13.2.0]
Running PyTorch 2.8.0.dev20250524+cu126 compiled for CUDA 12.6
Sun May 25 20:54:03 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 570.124.06             Driver Version: 570.124.06     CUDA Version: 12.8     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA H100 80GB HBM3          On  |   00000000:61:00.0 Off |                    0 |
| N/A   37C    P0            148W /  700W |    5856MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  |   00000000:62:00.0 Off |                    0 |
| N/A   41C    P0            130W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  |   00000000:63:00.0 Off |                    0 |
| N/A   42C    P0            133W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  |   00000000:64:00.0 Off |                    0 |
| N/A   32C    P0            117W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  |   00000000:6A:00.0 Off |                    0 |
| N/A   33C    P0            124W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  |   00000000:6B:00.0 Off |                    0 |
| N/A   42C    P0            126W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  |   00000000:6C:00.0 Off |                    0 |
| N/A   41C    P0            126W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  |   00000000:6D:00.0 Off |                    0 |
| N/A   33C    P0            124W /  700W |    1518MiB /  81559MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|    0   N/A  N/A           30168      C   /usr/local/bin/python                  1508MiB |
|    0   N/A  N/A           30169      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30170      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30171      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30172      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30173      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30174      C   /usr/local/bin/python                   614MiB |
|    0   N/A  N/A           30175      C   /usr/local/bin/python                   614MiB |
|    1   N/A  N/A           30169      C   /usr/local/bin/python                  1508MiB |
|    2   N/A  N/A           30170      C   /usr/local/bin/python                  1508MiB |
|    3   N/A  N/A           30171      C   /usr/local/bin/python                  1508MiB |
|    4   N/A  N/A           30172      C   /usr/local/bin/python                  1508MiB |
|    5   N/A  N/A           30173      C   /usr/local/bin/python                  1508MiB |
|    6   N/A  N/A           30174      C   /usr/local/bin/python                  1508MiB |
|    7   N/A  N/A           30175      C   /usr/local/bin/python                  1508MiB |
+-----------------------------------------------------------------------------------------+

====================================================================================================
step:0/1770 val_loss:10.8258 train_time:0ms step_avg:0.03ms
step:1/1770 train_time:124ms step_avg:124.26ms
step:2/1770 train_time:214ms step_avg:106.94ms
step:3/1770 train_time:310ms step_avg:103.39ms
step:4/1770 train_time:408ms step_avg:102.04ms
step:5/1770 train_time:506ms step_avg:101.12ms
step:6/1770 train_time:604ms step_avg:100.64ms
step:7/1770 train_time:702ms step_avg:100.34ms
step:8/1770 train_time:801ms step_avg:100.14ms
step:9/1770 train_time:899ms step_avg:99.87ms
step:10/1770 train_time:997ms step_avg:99.72ms
step:11/1770 train_time:1096ms step_avg:99.64ms
step:12/1770 train_time:1195ms step_avg:99.60ms
step:13/1770 train_time:1295ms step_avg:99.64ms
step:14/1770 train_time:1395ms step_avg:99.66ms
step:15/1770 train_time:1494ms step_avg:99.61ms
step:16/1770 train_time:1593ms step_avg:99.56ms
step:17/1770 train_time:1692ms step_avg:99.52ms
step:18/1770 train_time:1790ms step_avg:99.45ms
step:19/1770 train_time:1888ms step_avg:99.39ms
step:20/1770 train_time:1987ms step_avg:99.36ms
step:21/1770 train_time:2086ms step_avg:99.32ms
step:22/1770 train_time:2183ms step_avg:99.25ms
step:23/1770 train_time:2283ms step_avg:99.24ms
step:24/1770 train_time:2381ms step_avg:99.19ms
step:25/1770 train_time:2479ms step_avg:99.15ms
step:26/1770 train_time:2577ms step_avg:99.12ms
step:27/1770 train_time:2677ms step_avg:99.13ms
step:28/1770 train_time:2776ms step_avg:99.13ms
step:29/1770 train_time:2874ms step_avg:99.11ms
step:30/1770 train_time:2972ms step_avg:99.07ms
step:31/1770 train_time:3070ms step_avg:99.04ms
step:32/1770 train_time:3168ms step_avg:99.01ms
step:33/1770 train_time:3267ms step_avg:98.99ms
step:34/1770 train_time:3364ms step_avg:98.95ms
step:35/1770 train_time:3463ms step_avg:98.94ms
step:36/1770 train_time:3561ms step_avg:98.92ms
step:37/1770 train_time:3660ms step_avg:98.91ms
step:38/1770 train_time:3758ms step_avg:98.89ms
step:39/1770 train_time:3856ms step_avg:98.87ms
step:40/1770 train_time:3956ms step_avg:98.89ms
step:41/1770 train_time:4054ms step_avg:98.89ms
step:42/1770 train_time:4153ms step_avg:98.87ms
step:43/1770 train_time:4252ms step_avg:98.89ms
step:44/1770 train_time:4351ms step_avg:98.88ms
step:45/1770 train_time:4449ms step_avg:98.87ms
step:46/1770 train_time:4548ms step_avg:98.86ms
step:47/1770 train_time:4647ms step_avg:98.87ms
step:48/1770 train_time:4745ms step_avg:98.85ms
step:49/1770 train_time:4844ms step_avg:98.85ms
step:50/1770 train_time:4942ms step_avg:98.85ms
step:51/1770 train_time:5042ms step_avg:98.86ms
step:52/1770 train_time:5141ms step_avg:98.86ms
step:53/1770 train_time:5240ms step_avg:98.86ms
step:54/1770 train_time:5339ms step_avg:98.86ms
step:55/1770 train_time:5437ms step_avg:98.86ms
step:56/1770 train_time:5536ms step_avg:98.85ms
step:57/1770 train_time:5633ms step_avg:98.83ms
step:58/1770 train_time:5731ms step_avg:98.82ms
step:59/1770 train_time:5830ms step_avg:98.81ms
step:60/1770 train_time:5929ms step_avg:98.82ms
step:61/1770 train_time:6027ms step_avg:98.81ms
step:62/1770 train_time:6125ms step_avg:98.79ms
step:63/1770 train_time:6223ms step_avg:98.78ms
step:64/1770 train_time:6322ms step_avg:98.78ms
step:65/1770 train_time:6421ms step_avg:98.78ms
step:66/1770 train_time:6519ms step_avg:98.78ms
step:67/1770 train_time:6618ms step_avg:98.78ms
step:68/1770 train_time:6716ms step_avg:98.77ms
step:69/1770 train_time:6815ms step_avg:98.77ms
step:70/1770 train_time:6914ms step_avg:98.77ms
step:71/1770 train_time:7012ms step_avg:98.76ms
step:72/1770 train_time:7110ms step_avg:98.75ms
step:73/1770 train_time:7209ms step_avg:98.75ms
step:74/1770 train_time:7307ms step_avg:98.74ms
step:75/1770 train_time:7404ms step_avg:98.72ms
step:76/1770 train_time:7502ms step_avg:98.71ms
step:77/1770 train_time:7601ms step_avg:98.71ms
step:78/1770 train_time:7699ms step_avg:98.71ms
step:79/1770 train_time:7797ms step_avg:98.70ms
step:80/1770 train_time:7898ms step_avg:98.72ms
step:81/1770 train_time:7997ms step_avg:98.72ms
step:82/1770 train_time:8095ms step_avg:98.72ms
step:83/1770 train_time:8193ms step_avg:98.71ms
step:84/1770 train_time:8291ms step_avg:98.71ms
step:85/1770 train_time:8390ms step_avg:98.71ms
step:86/1770 train_time:8489ms step_avg:98.71ms
step:87/1770 train_time:8587ms step_avg:98.70ms
step:88/1770 train_time:8686ms step_avg:98.70ms
step:89/1770 train_time:8784ms step_avg:98.70ms
step:90/1770 train_time:8883ms step_avg:98.70ms
step:91/1770 train_time:8982ms step_avg:98.70ms
step:92/1770 train_time:9080ms step_avg:98.69ms
step:93/1770 train_time:9178ms step_avg:98.69ms
step:94/1770 train_time:9278ms step_avg:98.70ms
step:95/1770 train_time:9375ms step_avg:98.69ms
step:96/1770 train_time:9474ms step_avg:98.68ms
step:97/1770 train_time:9572ms step_avg:98.68ms
step:98/1770 train_time:9670ms step_avg:98.68ms
step:99/1770 train_time:9769ms step_avg:98.68ms
step:100/1770 train_time:9868ms step_avg:98.68ms
step:101/1770 train_time:9966ms step_avg:98.68ms
step:102/1770 train_time:10065ms step_avg:98.68ms
step:103/1770 train_time:10163ms step_avg:98.67ms
step:104/1770 train_time:10262ms step_avg:98.67ms
step:105/1770 train_time:10361ms step_avg:98.68ms
step:106/1770 train_time:10460ms step_avg:98.68ms
step:107/1770 train_time:10559ms step_avg:98.68ms
step:108/1770 train_time:10658ms step_avg:98.68ms
step:109/1770 train_time:10756ms step_avg:98.68ms
step:110/1770 train_time:10855ms step_avg:98.69ms
step:111/1770 train_time:10954ms step_avg:98.68ms
step:112/1770 train_time:11053ms step_avg:98.68ms
step:113/1770 train_time:11150ms step_avg:98.67ms
step:114/1770 train_time:11249ms step_avg:98.68ms
step:115/1770 train_time:11347ms step_avg:98.67ms
step:116/1770 train_time:11445ms step_avg:98.67ms
step:117/1770 train_time:11543ms step_avg:98.66ms
step:118/1770 train_time:11642ms step_avg:98.66ms
step:119/1770 train_time:11741ms step_avg:98.67ms
step:120/1770 train_time:11839ms step_avg:98.66ms
step:121/1770 train_time:11938ms step_avg:98.66ms
step:122/1770 train_time:12037ms step_avg:98.66ms
step:123/1770 train_time:12135ms step_avg:98.66ms
step:124/1770 train_time:12233ms step_avg:98.66ms
step:125/1770 train_time:12331ms step_avg:98.65ms
step:125/1770 val_loss:4.6486 train_time:12366ms step_avg:98.93ms
step:126/1770 train_time:12431ms step_avg:98.65ms
step:127/1770 train_time:12542ms step_avg:98.75ms
step:128/1770 train_time:12642ms step_avg:98.76ms
step:129/1770 train_time:12741ms step_avg:98.77ms
step:130/1770 train_time:12839ms step_avg:98.76ms
step:131/1770 train_time:12937ms step_avg:98.76ms
step:132/1770 train_time:13036ms step_avg:98.75ms
step:133/1770 train_time:13134ms step_avg:98.75ms
step:134/1770 train_time:13233ms step_avg:98.75ms
step:135/1770 train_time:13331ms step_avg:98.75ms
step:136/1770 train_time:13429ms step_avg:98.74ms
step:137/1770 train_time:13528ms step_avg:98.74ms
step:138/1770 train_time:13627ms step_avg:98.75ms
step:139/1770 train_time:13727ms step_avg:98.75ms
step:140/1770 train_time:13826ms step_avg:98.76ms
step:141/1770 train_time:13926ms step_avg:98.76ms
step:142/1770 train_time:14025ms step_avg:98.77ms
step:143/1770 train_time:14123ms step_avg:98.76ms
step:144/1770 train_time:14222ms step_avg:98.76ms
step:145/1770 train_time:14320ms step_avg:98.76ms
step:146/1770 train_time:14419ms step_avg:98.76ms
step:147/1770 train_time:14518ms step_avg:98.76ms
step:148/1770 train_time:14618ms step_avg:98.77ms
step:149/1770 train_time:14718ms step_avg:98.78ms
step:150/1770 train_time:14819ms step_avg:98.79ms
step:151/1770 train_time:14918ms step_avg:98.80ms
step:152/1770 train_time:15018ms step_avg:98.80ms
step:153/1770 train_time:15118ms step_avg:98.81ms
step:154/1770 train_time:15217ms step_avg:98.81ms
step:155/1770 train_time:15317ms step_avg:98.82ms
step:156/1770 train_time:15416ms step_avg:98.82ms
step:157/1770 train_time:15514ms step_avg:98.82ms
step:158/1770 train_time:15612ms step_avg:98.81ms
step:159/1770 train_time:15711ms step_avg:98.81ms
step:160/1770 train_time:15810ms step_avg:98.81ms
step:161/1770 train_time:15909ms step_avg:98.82ms
step:162/1770 train_time:16008ms step_avg:98.82ms
step:163/1770 train_time:16107ms step_avg:98.81ms
step:164/1770 train_time:16205ms step_avg:98.81ms
step:165/1770 train_time:16304ms step_avg:98.81ms
step:166/1770 train_time:16403ms step_avg:98.81ms
step:167/1770 train_time:16502ms step_avg:98.81ms
step:168/1770 train_time:16600ms step_avg:98.81ms
step:169/1770 train_time:16700ms step_avg:98.81ms
step:170/1770 train_time:16799ms step_avg:98.82ms
step:171/1770 train_time:16898ms step_avg:98.82ms
step:172/1770 train_time:16997ms step_avg:98.82ms
step:173/1770 train_time:17096ms step_avg:98.82ms
step:174/1770 train_time:17195ms step_avg:98.82ms
step:175/1770 train_time:17294ms step_avg:98.82ms
step:176/1770 train_time:17393ms step_avg:98.82ms
step:177/1770 train_time:17492ms step_avg:98.82ms
step:178/1770 train_time:17590ms step_avg:98.82ms
step:179/1770 train_time:17689ms step_avg:98.82ms
step:180/1770 train_time:17789ms step_avg:98.83ms
step:181/1770 train_time:17888ms step_avg:98.83ms
step:182/1770 train_time:17986ms step_avg:98.83ms
step:183/1770 train_time:18086ms step_avg:98.83ms
step:184/1770 train_time:18184ms step_avg:98.83ms
step:185/1770 train_time:18284ms step_avg:98.83ms
step:186/1770 train_time:18383ms step_avg:98.83ms
step:187/1770 train_time:18481ms step_avg:98.83ms
step:188/1770 train_time:18580ms step_avg:98.83ms
step:189/1770 train_time:18679ms step_avg:98.83ms
step:190/1770 train_time:18778ms step_avg:98.83ms
step:191/1770 train_time:18879ms step_avg:98.84ms
step:192/1770 train_time:18978ms step_avg:98.85ms
step:193/1770 train_time:19078ms step_avg:98.85ms
step:194/1770 train_time:19178ms step_avg:98.86ms
step:195/1770 train_time:19278ms step_avg:98.86ms
step:196/1770 train_time:19378ms step_avg:98.87ms
step:197/1770 train_time:19478ms step_avg:98.87ms
step:198/1770 train_time:19577ms step_avg:98.87ms
step:199/1770 train_time:19675ms step_avg:98.87ms
step:200/1770 train_time:19774ms step_avg:98.87ms
step:201/1770 train_time:19873ms step_avg:98.87ms
step:202/1770 train_time:19973ms step_avg:98.88ms
step:203/1770 train_time:20072ms step_avg:98.88ms
step:204/1770 train_time:20173ms step_avg:98.89ms
step:205/1770 train_time:20272ms step_avg:98.89ms
step:206/1770 train_time:20371ms step_avg:98.89ms
step:207/1770 train_time:20470ms step_avg:98.89ms
step:208/1770 train_time:20570ms step_avg:98.89ms
step:209/1770 train_time:20669ms step_avg:98.89ms
step:210/1770 train_time:20767ms step_avg:98.89ms
step:211/1770 train_time:20867ms step_avg:98.89ms
step:212/1770 train_time:20966ms step_avg:98.90ms
step:213/1770 train_time:21065ms step_avg:98.90ms
step:214/1770 train_time:21164ms step_avg:98.90ms
step:215/1770 train_time:21263ms step_avg:98.90ms
step:216/1770 train_time:21362ms step_avg:98.90ms
step:217/1770 train_time:21461ms step_avg:98.90ms
step:218/1770 train_time:21560ms step_avg:98.90ms
step:219/1770 train_time:21659ms step_avg:98.90ms
step:220/1770 train_time:21758ms step_avg:98.90ms
step:221/1770 train_time:21858ms step_avg:98.90ms
step:222/1770 train_time:21958ms step_avg:98.91ms
step:223/1770 train_time:22058ms step_avg:98.91ms
step:224/1770 train_time:22157ms step_avg:98.92ms
step:225/1770 train_time:22257ms step_avg:98.92ms
step:226/1770 train_time:22355ms step_avg:98.92ms
step:227/1770 train_time:22454ms step_avg:98.91ms
step:228/1770 train_time:22553ms step_avg:98.92ms
step:229/1770 train_time:22652ms step_avg:98.92ms
step:230/1770 train_time:22750ms step_avg:98.91ms
step:231/1770 train_time:22850ms step_avg:98.92ms
step:232/1770 train_time:22948ms step_avg:98.91ms
step:233/1770 train_time:23047ms step_avg:98.91ms
step:234/1770 train_time:23146ms step_avg:98.91ms
step:235/1770 train_time:23245ms step_avg:98.91ms
step:236/1770 train_time:23343ms step_avg:98.91ms
step:237/1770 train_time:23443ms step_avg:98.91ms
step:238/1770 train_time:23542ms step_avg:98.91ms
step:239/1770 train_time:23641ms step_avg:98.92ms
step:240/1770 train_time:23739ms step_avg:98.91ms
step:241/1770 train_time:23839ms step_avg:98.92ms
step:242/1770 train_time:23938ms step_avg:98.92ms
step:243/1770 train_time:24038ms step_avg:98.92ms
step:244/1770 train_time:24138ms step_avg:98.92ms
step:245/1770 train_time:24238ms step_avg:98.93ms
step:246/1770 train_time:24338ms step_avg:98.94ms
step:247/1770 train_time:24439ms step_avg:98.94ms
step:248/1770 train_time:24539ms step_avg:98.95ms
step:249/1770 train_time:24638ms step_avg:98.95ms
step:250/1770 train_time:24738ms step_avg:98.95ms
step:250/1770 val_loss:4.1044 train_time:24773ms step_avg:99.09ms
step:251/1770 train_time:24843ms step_avg:98.98ms
step:252/1770 train_time:24947ms step_avg:99.00ms
step:253/1770 train_time:25047ms step_avg:99.00ms
step:254/1770 train_time:25146ms step_avg:99.00ms
step:255/1770 train_time:25250ms step_avg:99.02ms
step:256/1770 train_time:25348ms step_avg:99.02ms
step:257/1770 train_time:25446ms step_avg:99.01ms
step:258/1770 train_time:25545ms step_avg:99.01ms
step:259/1770 train_time:25644ms step_avg:99.01ms
step:260/1770 train_time:25742ms step_avg:99.01ms
step:261/1770 train_time:25840ms step_avg:99.00ms
step:262/1770 train_time:25940ms step_avg:99.01ms
step:263/1770 train_time:26039ms step_avg:99.01ms
step:264/1770 train_time:26139ms step_avg:99.01ms
step:265/1770 train_time:26240ms step_avg:99.02ms
step:266/1770 train_time:26340ms step_avg:99.02ms
step:267/1770 train_time:26439ms step_avg:99.02ms
step:268/1770 train_time:26539ms step_avg:99.03ms
step:269/1770 train_time:26638ms step_avg:99.02ms
step:270/1770 train_time:26737ms step_avg:99.03ms
step:271/1770 train_time:26836ms step_avg:99.03ms
step:272/1770 train_time:26935ms step_avg:99.03ms
step:273/1770 train_time:27035ms step_avg:99.03ms
step:274/1770 train_time:27135ms step_avg:99.03ms
step:275/1770 train_time:27235ms step_avg:99.03ms
step:276/1770 train_time:27335ms step_avg:99.04ms
step:277/1770 train_time:27435ms step_avg:99.04ms
step:278/1770 train_time:27535ms step_avg:99.05ms
step:279/1770 train_time:27634ms step_avg:99.05ms
step:280/1770 train_time:27734ms step_avg:99.05ms
step:281/1770 train_time:27835ms step_avg:99.06ms
step:282/1770 train_time:27935ms step_avg:99.06ms
step:283/1770 train_time:28036ms step_avg:99.07ms
step:284/1770 train_time:28136ms step_avg:99.07ms
step:285/1770 train_time:28235ms step_avg:99.07ms
step:286/1770 train_time:28335ms step_avg:99.07ms
step:287/1770 train_time:28435ms step_avg:99.08ms
step:288/1770 train_time:28535ms step_avg:99.08ms
step:289/1770 train_time:28635ms step_avg:99.08ms
step:290/1770 train_time:28734ms step_avg:99.08ms
step:291/1770 train_time:28834ms step_avg:99.09ms
step:292/1770 train_time:28934ms step_avg:99.09ms
step:293/1770 train_time:29035ms step_avg:99.09ms
step:294/1770 train_time:29135ms step_avg:99.10ms
step:295/1770 train_time:29236ms step_avg:99.11ms
step:296/1770 train_time:29336ms step_avg:99.11ms
step:297/1770 train_time:29436ms step_avg:99.11ms
step:298/1770 train_time:29536ms step_avg:99.11ms
step:299/1770 train_time:29635ms step_avg:99.11ms
step:300/1770 train_time:29735ms step_avg:99.12ms
step:301/1770 train_time:29836ms step_avg:99.12ms
step:302/1770 train_time:29936ms step_avg:99.13ms
step:303/1770 train_time:30036ms step_avg:99.13ms
step:304/1770 train_time:30135ms step_avg:99.13ms
step:305/1770 train_time:30236ms step_avg:99.14ms
step:306/1770 train_time:30338ms step_avg:99.15ms
step:307/1770 train_time:30438ms step_avg:99.15ms
step:308/1770 train_time:30537ms step_avg:99.15ms
step:309/1770 train_time:30637ms step_avg:99.15ms
step:310/1770 train_time:30737ms step_avg:99.15ms
step:311/1770 train_time:30837ms step_avg:99.15ms
step:312/1770 train_time:30936ms step_avg:99.15ms
step:313/1770 train_time:31036ms step_avg:99.16ms
step:314/1770 train_time:31135ms step_avg:99.16ms
step:315/1770 train_time:31236ms step_avg:99.16ms
step:316/1770 train_time:31336ms step_avg:99.16ms
step:317/1770 train_time:31436ms step_avg:99.17ms
step:318/1770 train_time:31536ms step_avg:99.17ms
step:319/1770 train_time:31636ms step_avg:99.17ms
step:320/1770 train_time:31736ms step_avg:99.17ms
step:321/1770 train_time:31836ms step_avg:99.18ms
step:322/1770 train_time:31936ms step_avg:99.18ms
step:323/1770 train_time:32036ms step_avg:99.18ms
step:324/1770 train_time:32136ms step_avg:99.18ms
step:325/1770 train_time:32235ms step_avg:99.18ms
step:326/1770 train_time:32335ms step_avg:99.19ms
step:327/1770 train_time:32435ms step_avg:99.19ms
step:328/1770 train_time:32535ms step_avg:99.19ms
step:329/1770 train_time:32635ms step_avg:99.20ms
step:330/1770 train_time:32736ms step_avg:99.20ms
step:331/1770 train_time:32836ms step_avg:99.20ms
step:332/1770 train_time:32936ms step_avg:99.20ms
step:333/1770 train_time:33036ms step_avg:99.21ms
step:334/1770 train_time:33136ms step_avg:99.21ms
step:335/1770 train_time:33235ms step_avg:99.21ms
step:336/1770 train_time:33336ms step_avg:99.21ms
step:337/1770 train_time:33435ms step_avg:99.22ms
step:338/1770 train_time:33535ms step_avg:99.22ms
step:339/1770 train_time:33636ms step_avg:99.22ms
step:340/1770 train_time:33736ms step_avg:99.22ms
step:341/1770 train_time:33836ms step_avg:99.22ms
step:342/1770 train_time:33936ms step_avg:99.23ms
step:343/1770 train_time:34036ms step_avg:99.23ms
step:344/1770 train_time:34135ms step_avg:99.23ms
step:345/1770 train_time:34235ms step_avg:99.23ms
step:346/1770 train_time:34335ms step_avg:99.23ms
step:347/1770 train_time:34435ms step_avg:99.24ms
step:348/1770 train_time:34535ms step_avg:99.24ms
step:349/1770 train_time:34636ms step_avg:99.24ms
step:350/1770 train_time:34736ms step_avg:99.24ms
step:351/1770 train_time:34835ms step_avg:99.25ms
step:352/1770 train_time:34935ms step_avg:99.25ms
step:353/1770 train_time:35035ms step_avg:99.25ms
step:354/1770 train_time:35134ms step_avg:99.25ms
step:355/1770 train_time:35235ms step_avg:99.25ms
step:356/1770 train_time:35336ms step_avg:99.26ms
step:357/1770 train_time:35435ms step_avg:99.26ms
step:358/1770 train_time:35535ms step_avg:99.26ms
step:359/1770 train_time:35635ms step_avg:99.26ms
step:360/1770 train_time:35735ms step_avg:99.26ms
step:361/1770 train_time:35835ms step_avg:99.26ms
step:362/1770 train_time:35934ms step_avg:99.27ms
step:363/1770 train_time:36034ms step_avg:99.27ms
step:364/1770 train_time:36134ms step_avg:99.27ms
step:365/1770 train_time:36234ms step_avg:99.27ms
step:366/1770 train_time:36335ms step_avg:99.28ms
step:367/1770 train_time:36435ms step_avg:99.28ms
step:368/1770 train_time:36535ms step_avg:99.28ms
step:369/1770 train_time:36635ms step_avg:99.28ms
step:370/1770 train_time:36735ms step_avg:99.28ms
step:371/1770 train_time:36835ms step_avg:99.29ms
step:372/1770 train_time:36936ms step_avg:99.29ms
step:373/1770 train_time:37036ms step_avg:99.29ms
step:374/1770 train_time:37135ms step_avg:99.29ms
step:375/1770 train_time:37235ms step_avg:99.29ms
step:375/1770 val_loss:3.8951 train_time:37272ms step_avg:99.39ms
step:376/1770 train_time:37342ms step_avg:99.31ms
step:377/1770 train_time:37445ms step_avg:99.32ms
step:378/1770 train_time:37546ms step_avg:99.33ms
step:379/1770 train_time:37646ms step_avg:99.33ms
step:380/1770 train_time:37745ms step_avg:99.33ms
step:381/1770 train_time:37844ms step_avg:99.33ms
step:382/1770 train_time:37943ms step_avg:99.33ms
step:383/1770 train_time:38043ms step_avg:99.33ms
step:384/1770 train_time:38142ms step_avg:99.33ms
step:385/1770 train_time:38243ms step_avg:99.33ms
step:386/1770 train_time:38342ms step_avg:99.33ms
step:387/1770 train_time:38443ms step_avg:99.34ms
step:388/1770 train_time:38545ms step_avg:99.34ms
step:389/1770 train_time:38645ms step_avg:99.34ms
step:390/1770 train_time:38745ms step_avg:99.35ms
step:391/1770 train_time:38844ms step_avg:99.35ms
step:392/1770 train_time:38944ms step_avg:99.35ms
step:393/1770 train_time:39043ms step_avg:99.35ms
step:394/1770 train_time:39143ms step_avg:99.35ms
step:395/1770 train_time:39244ms step_avg:99.35ms
step:396/1770 train_time:39345ms step_avg:99.36ms
step:397/1770 train_time:39448ms step_avg:99.37ms
step:398/1770 train_time:39552ms step_avg:99.38ms
step:399/1770 train_time:39654ms step_avg:99.38ms
step:400/1770 train_time:39756ms step_avg:99.39ms
step:401/1770 train_time:39858ms step_avg:99.40ms
step:402/1770 train_time:39959ms step_avg:99.40ms
step:403/1770 train_time:40061ms step_avg:99.41ms
step:404/1770 train_time:40163ms step_avg:99.41ms
step:405/1770 train_time:40265ms step_avg:99.42ms
step:406/1770 train_time:40367ms step_avg:99.43ms
step:407/1770 train_time:40469ms step_avg:99.43ms
step:408/1770 train_time:40571ms step_avg:99.44ms
step:409/1770 train_time:40673ms step_avg:99.44ms
step:410/1770 train_time:40775ms step_avg:99.45ms
step:411/1770 train_time:40877ms step_avg:99.46ms
step:412/1770 train_time:40978ms step_avg:99.46ms
step:413/1770 train_time:41080ms step_avg:99.47ms
step:414/1770 train_time:41181ms step_avg:99.47ms
step:415/1770 train_time:41283ms step_avg:99.48ms
step:416/1770 train_time:41385ms step_avg:99.48ms
step:417/1770 train_time:41488ms step_avg:99.49ms
step:418/1770 train_time:41589ms step_avg:99.50ms
step:419/1770 train_time:41691ms step_avg:99.50ms
step:420/1770 train_time:41793ms step_avg:99.51ms
step:421/1770 train_time:41895ms step_avg:99.51ms
step:422/1770 train_time:41996ms step_avg:99.52ms
step:423/1770 train_time:42098ms step_avg:99.52ms
step:424/1770 train_time:42200ms step_avg:99.53ms
step:425/1770 train_time:42302ms step_avg:99.53ms
step:426/1770 train_time:42404ms step_avg:99.54ms
step:427/1770 train_time:42506ms step_avg:99.55ms
step:428/1770 train_time:42609ms step_avg:99.55ms
step:429/1770 train_time:42710ms step_avg:99.56ms
step:430/1770 train_time:42812ms step_avg:99.56ms
step:431/1770 train_time:42914ms step_avg:99.57ms
step:432/1770 train_time:43016ms step_avg:99.57ms
step:433/1770 train_time:43118ms step_avg:99.58ms
step:434/1770 train_time:43220ms step_avg:99.58ms
step:435/1770 train_time:43321ms step_avg:99.59ms
step:436/1770 train_time:43422ms step_avg:99.59ms
step:437/1770 train_time:43526ms step_avg:99.60ms
step:438/1770 train_time:43629ms step_avg:99.61ms
step:439/1770 train_time:43731ms step_avg:99.61ms
step:440/1770 train_time:43832ms step_avg:99.62ms
step:441/1770 train_time:43935ms step_avg:99.63ms
step:442/1770 train_time:44037ms step_avg:99.63ms
step:443/1770 train_time:44139ms step_avg:99.64ms
step:444/1770 train_time:44241ms step_avg:99.64ms
step:445/1770 train_time:44342ms step_avg:99.65ms
step:446/1770 train_time:44444ms step_avg:99.65ms
step:447/1770 train_time:44547ms step_avg:99.66ms
step:448/1770 train_time:44649ms step_avg:99.66ms
step:449/1770 train_time:44751ms step_avg:99.67ms
step:450/1770 train_time:44852ms step_avg:99.67ms
step:451/1770 train_time:44955ms step_avg:99.68ms
step:452/1770 train_time:45057ms step_avg:99.68ms
step:453/1770 train_time:45158ms step_avg:99.69ms
step:454/1770 train_time:45260ms step_avg:99.69ms
step:455/1770 train_time:45361ms step_avg:99.69ms
step:456/1770 train_time:45463ms step_avg:99.70ms
step:457/1770 train_time:45566ms step_avg:99.71ms
step:458/1770 train_time:45669ms step_avg:99.71ms
step:459/1770 train_time:45771ms step_avg:99.72ms
step:460/1770 train_time:45873ms step_avg:99.72ms
step:461/1770 train_time:45974ms step_avg:99.73ms
step:462/1770 train_time:46076ms step_avg:99.73ms
step:463/1770 train_time:46177ms step_avg:99.73ms
step:464/1770 train_time:46278ms step_avg:99.74ms
step:465/1770 train_time:46379ms step_avg:99.74ms
step:466/1770 train_time:46481ms step_avg:99.74ms
step:467/1770 train_time:46584ms step_avg:99.75ms
step:468/1770 train_time:46687ms step_avg:99.76ms
step:469/1770 train_time:46789ms step_avg:99.76ms
step:470/1770 train_time:46892ms step_avg:99.77ms
step:471/1770 train_time:46995ms step_avg:99.78ms
step:472/1770 train_time:47097ms step_avg:99.78ms
step:473/1770 train_time:47199ms step_avg:99.79ms
step:474/1770 train_time:47301ms step_avg:99.79ms
step:475/1770 train_time:47402ms step_avg:99.79ms
step:476/1770 train_time:47505ms step_avg:99.80ms
step:477/1770 train_time:47608ms step_avg:99.81ms
step:478/1770 train_time:47710ms step_avg:99.81ms
step:479/1770 train_time:47812ms step_avg:99.82ms
step:480/1770 train_time:47915ms step_avg:99.82ms
step:481/1770 train_time:48017ms step_avg:99.83ms
step:482/1770 train_time:48118ms step_avg:99.83ms
step:483/1770 train_time:48220ms step_avg:99.83ms
step:484/1770 train_time:48322ms step_avg:99.84ms
step:485/1770 train_time:48423ms step_avg:99.84ms
step:486/1770 train_time:48526ms step_avg:99.85ms
step:487/1770 train_time:48628ms step_avg:99.85ms
step:488/1770 train_time:48730ms step_avg:99.86ms
step:489/1770 train_time:48831ms step_avg:99.86ms
step:490/1770 train_time:48933ms step_avg:99.86ms
step:491/1770 train_time:49035ms step_avg:99.87ms
step:492/1770 train_time:49137ms step_avg:99.87ms
step:493/1770 train_time:49238ms step_avg:99.87ms
step:494/1770 train_time:49341ms step_avg:99.88ms
step:495/1770 train_time:49442ms step_avg:99.88ms
step:496/1770 train_time:49543ms step_avg:99.89ms
step:497/1770 train_time:49646ms step_avg:99.89ms
step:498/1770 train_time:49749ms step_avg:99.90ms
step:499/1770 train_time:49852ms step_avg:99.90ms
step:500/1770 train_time:49954ms step_avg:99.91ms
step:500/1770 val_loss:3.7472 train_time:49989ms step_avg:99.98ms
step:501/1770 train_time:50058ms step_avg:99.92ms
step:502/1770 train_time:50164ms step_avg:99.93ms
step:503/1770 train_time:50267ms step_avg:99.93ms
step:504/1770 train_time:50369ms step_avg:99.94ms
step:505/1770 train_time:50471ms step_avg:99.94ms
step:506/1770 train_time:50572ms step_avg:99.95ms
step:507/1770 train_time:50674ms step_avg:99.95ms
step:508/1770 train_time:50776ms step_avg:99.95ms
step:509/1770 train_time:50884ms step_avg:99.97ms
step:510/1770 train_time:50986ms step_avg:99.97ms
step:511/1770 train_time:51089ms step_avg:99.98ms
step:512/1770 train_time:51192ms step_avg:99.98ms
step:513/1770 train_time:51295ms step_avg:99.99ms
step:514/1770 train_time:51397ms step_avg:99.99ms
step:515/1770 train_time:51499ms step_avg:100.00ms
step:516/1770 train_time:51601ms step_avg:100.00ms
step:517/1770 train_time:51702ms step_avg:100.00ms
step:518/1770 train_time:51804ms step_avg:100.01ms
step:519/1770 train_time:51906ms step_avg:100.01ms
step:520/1770 train_time:52009ms step_avg:100.02ms
step:521/1770 train_time:52110ms step_avg:100.02ms
step:522/1770 train_time:52212ms step_avg:100.02ms
step:523/1770 train_time:52314ms step_avg:100.03ms
step:524/1770 train_time:52418ms step_avg:100.03ms
step:525/1770 train_time:52519ms step_avg:100.04ms
step:526/1770 train_time:52620ms step_avg:100.04ms
step:527/1770 train_time:52723ms step_avg:100.04ms
step:528/1770 train_time:52825ms step_avg:100.05ms
step:529/1770 train_time:52927ms step_avg:100.05ms
step:530/1770 train_time:53029ms step_avg:100.06ms
step:531/1770 train_time:53131ms step_avg:100.06ms
step:532/1770 train_time:53232ms step_avg:100.06ms
step:533/1770 train_time:53336ms step_avg:100.07ms
step:534/1770 train_time:53439ms step_avg:100.07ms
step:535/1770 train_time:53543ms step_avg:100.08ms
step:536/1770 train_time:53645ms step_avg:100.08ms
step:537/1770 train_time:53747ms step_avg:100.09ms
step:538/1770 train_time:53849ms step_avg:100.09ms
step:539/1770 train_time:53951ms step_avg:100.09ms
step:540/1770 train_time:54053ms step_avg:100.10ms
step:541/1770 train_time:54153ms step_avg:100.10ms
step:542/1770 train_time:54256ms step_avg:100.10ms
step:543/1770 train_time:54358ms step_avg:100.11ms
step:544/1770 train_time:54460ms step_avg:100.11ms
step:545/1770 train_time:54563ms step_avg:100.11ms
step:546/1770 train_time:54665ms step_avg:100.12ms
step:547/1770 train_time:54767ms step_avg:100.12ms
step:548/1770 train_time:54870ms step_avg:100.13ms
step:549/1770 train_time:54971ms step_avg:100.13ms
step:550/1770 train_time:55075ms step_avg:100.14ms
step:551/1770 train_time:55178ms step_avg:100.14ms
step:552/1770 train_time:55281ms step_avg:100.15ms
step:553/1770 train_time:55383ms step_avg:100.15ms
step:554/1770 train_time:55486ms step_avg:100.16ms
step:555/1770 train_time:55589ms step_avg:100.16ms
step:556/1770 train_time:55691ms step_avg:100.16ms
step:557/1770 train_time:55793ms step_avg:100.17ms
step:558/1770 train_time:55896ms step_avg:100.17ms
step:559/1770 train_time:55998ms step_avg:100.18ms
step:560/1770 train_time:56101ms step_avg:100.18ms
step:561/1770 train_time:56203ms step_avg:100.18ms
step:562/1770 train_time:56305ms step_avg:100.19ms
step:563/1770 train_time:56407ms step_avg:100.19ms
step:564/1770 train_time:56510ms step_avg:100.19ms
step:565/1770 train_time:56612ms step_avg:100.20ms
step:566/1770 train_time:56714ms step_avg:100.20ms
step:567/1770 train_time:56817ms step_avg:100.21ms
step:568/1770 train_time:56919ms step_avg:100.21ms
step:569/1770 train_time:57022ms step_avg:100.21ms
step:570/1770 train_time:57124ms step_avg:100.22ms
step:571/1770 train_time:57227ms step_avg:100.22ms
step:572/1770 train_time:57329ms step_avg:100.23ms
step:573/1770 train_time:57431ms step_avg:100.23ms
step:574/1770 train_time:57532ms step_avg:100.23ms
step:575/1770 train_time:57635ms step_avg:100.24ms
step:576/1770 train_time:57738ms step_avg:100.24ms
step:577/1770 train_time:57840ms step_avg:100.24ms
step:578/1770 train_time:57942ms step_avg:100.25ms
step:579/1770 train_time:58045ms step_avg:100.25ms
step:580/1770 train_time:58147ms step_avg:100.25ms
step:581/1770 train_time:58248ms step_avg:100.26ms
step:582/1770 train_time:58350ms step_avg:100.26ms
step:583/1770 train_time:58451ms step_avg:100.26ms
step:584/1770 train_time:58554ms step_avg:100.26ms
step:585/1770 train_time:58657ms step_avg:100.27ms
step:586/1770 train_time:58760ms step_avg:100.27ms
step:587/1770 train_time:58862ms step_avg:100.28ms
step:588/1770 train_time:58964ms step_avg:100.28ms
step:589/1770 train_time:59067ms step_avg:100.28ms
step:590/1770 train_time:59170ms step_avg:100.29ms
step:591/1770 train_time:59271ms step_avg:100.29ms
step:592/1770 train_time:59373ms step_avg:100.29ms
step:593/1770 train_time:59476ms step_avg:100.30ms
step:594/1770 train_time:59579ms step_avg:100.30ms
step:595/1770 train_time:59681ms step_avg:100.30ms
step:596/1770 train_time:59783ms step_avg:100.31ms
step:597/1770 train_time:59885ms step_avg:100.31ms
step:598/1770 train_time:59988ms step_avg:100.31ms
step:599/1770 train_time:60089ms step_avg:100.32ms
step:600/1770 train_time:60192ms step_avg:100.32ms
step:601/1770 train_time:60293ms step_avg:100.32ms
step:602/1770 train_time:60395ms step_avg:100.32ms
step:603/1770 train_time:60498ms step_avg:100.33ms
step:604/1770 train_time:60601ms step_avg:100.33ms
step:605/1770 train_time:60702ms step_avg:100.33ms
step:606/1770 train_time:60805ms step_avg:100.34ms
step:607/1770 train_time:60908ms step_avg:100.34ms
step:608/1770 train_time:61010ms step_avg:100.35ms
step:609/1770 train_time:61111ms step_avg:100.35ms
step:610/1770 train_time:61213ms step_avg:100.35ms
step:611/1770 train_time:61315ms step_avg:100.35ms
step:612/1770 train_time:61418ms step_avg:100.36ms
step:613/1770 train_time:61521ms step_avg:100.36ms
step:614/1770 train_time:61624ms step_avg:100.36ms
step:615/1770 train_time:61726ms step_avg:100.37ms
step:616/1770 train_time:61828ms step_avg:100.37ms
step:617/1770 train_time:61931ms step_avg:100.38ms
step:618/1770 train_time:62034ms step_avg:100.38ms
step:619/1770 train_time:62137ms step_avg:100.38ms
step:620/1770 train_time:62239ms step_avg:100.39ms
step:621/1770 train_time:62341ms step_avg:100.39ms
step:622/1770 train_time:62443ms step_avg:100.39ms
step:623/1770 train_time:62545ms step_avg:100.39ms
step:624/1770 train_time:62648ms step_avg:100.40ms
step:625/1770 train_time:62749ms step_avg:100.40ms
step:625/1770 val_loss:3.6596 train_time:62785ms step_avg:100.46ms
step:626/1770 train_time:62857ms step_avg:100.41ms
step:627/1770 train_time:62961ms step_avg:100.42ms
step:628/1770 train_time:63067ms step_avg:100.43ms
step:629/1770 train_time:63169ms step_avg:100.43ms
step:630/1770 train_time:63271ms step_avg:100.43ms
step:631/1770 train_time:63374ms step_avg:100.43ms
step:632/1770 train_time:63476ms step_avg:100.44ms
step:633/1770 train_time:63578ms step_avg:100.44ms
step:634/1770 train_time:63679ms step_avg:100.44ms
step:635/1770 train_time:63781ms step_avg:100.44ms
step:636/1770 train_time:63884ms step_avg:100.45ms
step:637/1770 train_time:63988ms step_avg:100.45ms
step:638/1770 train_time:64091ms step_avg:100.46ms
step:639/1770 train_time:64194ms step_avg:100.46ms
step:640/1770 train_time:64295ms step_avg:100.46ms
step:641/1770 train_time:64398ms step_avg:100.46ms
step:642/1770 train_time:64501ms step_avg:100.47ms
step:643/1770 train_time:64603ms step_avg:100.47ms
step:644/1770 train_time:64705ms step_avg:100.47ms
step:645/1770 train_time:64807ms step_avg:100.48ms
step:646/1770 train_time:64908ms step_avg:100.48ms
step:647/1770 train_time:65012ms step_avg:100.48ms
step:648/1770 train_time:65114ms step_avg:100.48ms
step:649/1770 train_time:65216ms step_avg:100.49ms
step:650/1770 train_time:65318ms step_avg:100.49ms
step:651/1770 train_time:65421ms step_avg:100.49ms
step:652/1770 train_time:65524ms step_avg:100.50ms
step:653/1770 train_time:65628ms step_avg:100.50ms
step:654/1770 train_time:65730ms step_avg:100.50ms
step:655/1770 train_time:65833ms step_avg:100.51ms
step:656/1770 train_time:65934ms step_avg:100.51ms
step:657/1770 train_time:66037ms step_avg:100.51ms
step:658/1770 train_time:66140ms step_avg:100.52ms
step:659/1770 train_time:66244ms step_avg:100.52ms
step:660/1770 train_time:66348ms step_avg:100.53ms
step:661/1770 train_time:66453ms step_avg:100.53ms
step:662/1770 train_time:66558ms step_avg:100.54ms
step:663/1770 train_time:66661ms step_avg:100.54ms
step:664/1770 train_time:66767ms step_avg:100.55ms
step:665/1770 train_time:66871ms step_avg:100.56ms
step:666/1770 train_time:66975ms step_avg:100.56ms
step:667/1770 train_time:67079ms step_avg:100.57ms
step:668/1770 train_time:67183ms step_avg:100.57ms
step:669/1770 train_time:67288ms step_avg:100.58ms
step:670/1770 train_time:67392ms step_avg:100.58ms
step:671/1770 train_time:67496ms step_avg:100.59ms
step:672/1770 train_time:67600ms step_avg:100.59ms
step:673/1770 train_time:67704ms step_avg:100.60ms
step:674/1770 train_time:67808ms step_avg:100.61ms
step:675/1770 train_time:67912ms step_avg:100.61ms
step:676/1770 train_time:68016ms step_avg:100.61ms
step:677/1770 train_time:68119ms step_avg:100.62ms
step:678/1770 train_time:68223ms step_avg:100.62ms
step:679/1770 train_time:68327ms step_avg:100.63ms
step:680/1770 train_time:68432ms step_avg:100.64ms
step:681/1770 train_time:68536ms step_avg:100.64ms
step:682/1770 train_time:68640ms step_avg:100.64ms
step:683/1770 train_time:68744ms step_avg:100.65ms
step:684/1770 train_time:68849ms step_avg:100.66ms
step:685/1770 train_time:68954ms step_avg:100.66ms
step:686/1770 train_time:69057ms step_avg:100.67ms
step:687/1770 train_time:69162ms step_avg:100.67ms
step:688/1770 train_time:69267ms step_avg:100.68ms
step:689/1770 train_time:69370ms step_avg:100.68ms
step:690/1770 train_time:69475ms step_avg:100.69ms
step:691/1770 train_time:69579ms step_avg:100.69ms
step:692/1770 train_time:69683ms step_avg:100.70ms
step:693/1770 train_time:69788ms step_avg:100.70ms
step:694/1770 train_time:69893ms step_avg:100.71ms
step:695/1770 train_time:69996ms step_avg:100.71ms
step:696/1770 train_time:70099ms step_avg:100.72ms
step:697/1770 train_time:70204ms step_avg:100.72ms
step:698/1770 train_time:70308ms step_avg:100.73ms
step:699/1770 train_time:70413ms step_avg:100.73ms
step:700/1770 train_time:70516ms step_avg:100.74ms
step:701/1770 train_time:70620ms step_avg:100.74ms
step:702/1770 train_time:70724ms step_avg:100.75ms
step:703/1770 train_time:70829ms step_avg:100.75ms
step:704/1770 train_time:70934ms step_avg:100.76ms
step:705/1770 train_time:71037ms step_avg:100.76ms
step:706/1770 train_time:71140ms step_avg:100.77ms
step:707/1770 train_time:71246ms step_avg:100.77ms
step:708/1770 train_time:71350ms step_avg:100.78ms
step:709/1770 train_time:71454ms step_avg:100.78ms
step:710/1770 train_time:71558ms step_avg:100.79ms
step:711/1770 train_time:71661ms step_avg:100.79ms
step:712/1770 train_time:71766ms step_avg:100.79ms
step:713/1770 train_time:71870ms step_avg:100.80ms
step:714/1770 train_time:71976ms step_avg:100.81ms
step:715/1770 train_time:72080ms step_avg:100.81ms
step:716/1770 train_time:72184ms step_avg:100.82ms
step:717/1770 train_time:72289ms step_avg:100.82ms
step:718/1770 train_time:72393ms step_avg:100.83ms
step:719/1770 train_time:72497ms step_avg:100.83ms
step:720/1770 train_time:72600ms step_avg:100.83ms
step:721/1770 train_time:72705ms step_avg:100.84ms
step:722/1770 train_time:72809ms step_avg:100.84ms
step:723/1770 train_time:72914ms step_avg:100.85ms
step:724/1770 train_time:73017ms step_avg:100.85ms
step:725/1770 train_time:73121ms step_avg:100.86ms
step:726/1770 train_time:73226ms step_avg:100.86ms
step:727/1770 train_time:73330ms step_avg:100.87ms
step:728/1770 train_time:73433ms step_avg:100.87ms
step:729/1770 train_time:73537ms step_avg:100.87ms
step:730/1770 train_time:73640ms step_avg:100.88ms
step:731/1770 train_time:73745ms step_avg:100.88ms
step:732/1770 train_time:73850ms step_avg:100.89ms
step:733/1770 train_time:73954ms step_avg:100.89ms
step:734/1770 train_time:74058ms step_avg:100.90ms
step:735/1770 train_time:74161ms step_avg:100.90ms
step:736/1770 train_time:74266ms step_avg:100.90ms
step:737/1770 train_time:74370ms step_avg:100.91ms
step:738/1770 train_time:74475ms step_avg:100.91ms
step:739/1770 train_time:74578ms step_avg:100.92ms
step:740/1770 train_time:74681ms step_avg:100.92ms
step:741/1770 train_time:74786ms step_avg:100.93ms
step:742/1770 train_time:74891ms step_avg:100.93ms
step:743/1770 train_time:74995ms step_avg:100.94ms
step:744/1770 train_time:75099ms step_avg:100.94ms
step:745/1770 train_time:75203ms step_avg:100.94ms
step:746/1770 train_time:75307ms step_avg:100.95ms
step:747/1770 train_time:75411ms step_avg:100.95ms
step:748/1770 train_time:75514ms step_avg:100.96ms
step:749/1770 train_time:75618ms step_avg:100.96ms
step:750/1770 train_time:75722ms step_avg:100.96ms
step:750/1770 val_loss:3.5980 train_time:75759ms step_avg:101.01ms
step:751/1770 train_time:75833ms step_avg:100.98ms
step:752/1770 train_time:75938ms step_avg:100.98ms
step:753/1770 train_time:76044ms step_avg:100.99ms
step:754/1770 train_time:76147ms step_avg:100.99ms
step:755/1770 train_time:76251ms step_avg:101.00ms
step:756/1770 train_time:76356ms step_avg:101.00ms
step:757/1770 train_time:76460ms step_avg:101.00ms
step:758/1770 train_time:76563ms step_avg:101.01ms
step:759/1770 train_time:76666ms step_avg:101.01ms
step:760/1770 train_time:76770ms step_avg:101.01ms
step:761/1770 train_time:76874ms step_avg:101.02ms
step:762/1770 train_time:76979ms step_avg:101.02ms
step:763/1770 train_time:77092ms step_avg:101.04ms
step:764/1770 train_time:77196ms step_avg:101.04ms
step:765/1770 train_time:77300ms step_avg:101.05ms
step:766/1770 train_time:77404ms step_avg:101.05ms
step:767/1770 train_time:77507ms step_avg:101.05ms
step:768/1770 train_time:77611ms step_avg:101.06ms
step:769/1770 train_time:77715ms step_avg:101.06ms
step:770/1770 train_time:77820ms step_avg:101.06ms
step:771/1770 train_time:77924ms step_avg:101.07ms
step:772/1770 train_time:78029ms step_avg:101.07ms
step:773/1770 train_time:78133ms step_avg:101.08ms
step:774/1770 train_time:78238ms step_avg:101.08ms
step:775/1770 train_time:78343ms step_avg:101.09ms
step:776/1770 train_time:78447ms step_avg:101.09ms
step:777/1770 train_time:78551ms step_avg:101.09ms
step:778/1770 train_time:78654ms step_avg:101.10ms
step:779/1770 train_time:78757ms step_avg:101.10ms
step:780/1770 train_time:78861ms step_avg:101.10ms
step:781/1770 train_time:78966ms step_avg:101.11ms
step:782/1770 train_time:79071ms step_avg:101.11ms
step:783/1770 train_time:79174ms step_avg:101.12ms
step:784/1770 train_time:79279ms step_avg:101.12ms
step:785/1770 train_time:79384ms step_avg:101.13ms
step:786/1770 train_time:79488ms step_avg:101.13ms
step:787/1770 train_time:79592ms step_avg:101.13ms
step:788/1770 train_time:79696ms step_avg:101.14ms
step:789/1770 train_time:79800ms step_avg:101.14ms
step:790/1770 train_time:79905ms step_avg:101.15ms
step:791/1770 train_time:80010ms step_avg:101.15ms
step:792/1770 train_time:80113ms step_avg:101.15ms
step:793/1770 train_time:80218ms step_avg:101.16ms
step:794/1770 train_time:80325ms step_avg:101.16ms
step:795/1770 train_time:80429ms step_avg:101.17ms
step:796/1770 train_time:80532ms step_avg:101.17ms
step:797/1770 train_time:80637ms step_avg:101.18ms
step:798/1770 train_time:80741ms step_avg:101.18ms
step:799/1770 train_time:80845ms step_avg:101.18ms
step:800/1770 train_time:80950ms step_avg:101.19ms
step:801/1770 train_time:81054ms step_avg:101.19ms
step:802/1770 train_time:81159ms step_avg:101.20ms
step:803/1770 train_time:81265ms step_avg:101.20ms
step:804/1770 train_time:81370ms step_avg:101.21ms
step:805/1770 train_time:81474ms step_avg:101.21ms
step:806/1770 train_time:81578ms step_avg:101.21ms
step:807/1770 train_time:81682ms step_avg:101.22ms
step:808/1770 train_time:81787ms step_avg:101.22ms
step:809/1770 train_time:81892ms step_avg:101.23ms
step:810/1770 train_time:81995ms step_avg:101.23ms
step:811/1770 train_time:82100ms step_avg:101.23ms
step:812/1770 train_time:82204ms step_avg:101.24ms
step:813/1770 train_time:82309ms step_avg:101.24ms
step:814/1770 train_time:82413ms step_avg:101.24ms
step:815/1770 train_time:82517ms step_avg:101.25ms
step:816/1770 train_time:82623ms step_avg:101.25ms
step:817/1770 train_time:82728ms step_avg:101.26ms
step:818/1770 train_time:82832ms step_avg:101.26ms
step:819/1770 train_time:82936ms step_avg:101.27ms
step:820/1770 train_time:83042ms step_avg:101.27ms
step:821/1770 train_time:83146ms step_avg:101.27ms
step:822/1770 train_time:83250ms step_avg:101.28ms
step:823/1770 train_time:83354ms step_avg:101.28ms
step:824/1770 train_time:83459ms step_avg:101.28ms
step:825/1770 train_time:83563ms step_avg:101.29ms
step:826/1770 train_time:83668ms step_avg:101.29ms
step:827/1770 train_time:83772ms step_avg:101.30ms
step:828/1770 train_time:83876ms step_avg:101.30ms
step:829/1770 train_time:83982ms step_avg:101.30ms
step:830/1770 train_time:84087ms step_avg:101.31ms
step:831/1770 train_time:84191ms step_avg:101.31ms
step:832/1770 train_time:84295ms step_avg:101.32ms
step:833/1770 train_time:84399ms step_avg:101.32ms
step:834/1770 train_time:84504ms step_avg:101.32ms
step:835/1770 train_time:84608ms step_avg:101.33ms
step:836/1770 train_time:84712ms step_avg:101.33ms
step:837/1770 train_time:84816ms step_avg:101.33ms
step:838/1770 train_time:84921ms step_avg:101.34ms
step:839/1770 train_time:85025ms step_avg:101.34ms
step:840/1770 train_time:85129ms step_avg:101.34ms
step:841/1770 train_time:85233ms step_avg:101.35ms
step:842/1770 train_time:85337ms step_avg:101.35ms
step:843/1770 train_time:85443ms step_avg:101.36ms
step:844/1770 train_time:85548ms step_avg:101.36ms
step:845/1770 train_time:85652ms step_avg:101.36ms
step:846/1770 train_time:85755ms step_avg:101.36ms
step:847/1770 train_time:85860ms step_avg:101.37ms
step:848/1770 train_time:85964ms step_avg:101.37ms
step:849/1770 train_time:86069ms step_avg:101.38ms
step:850/1770 train_time:86172ms step_avg:101.38ms
step:851/1770 train_time:86276ms step_avg:101.38ms
step:852/1770 train_time:86381ms step_avg:101.39ms
step:853/1770 train_time:86485ms step_avg:101.39ms
step:854/1770 train_time:86590ms step_avg:101.39ms
step:855/1770 train_time:86693ms step_avg:101.40ms
step:856/1770 train_time:86798ms step_avg:101.40ms
step:857/1770 train_time:86903ms step_avg:101.40ms
step:858/1770 train_time:87010ms step_avg:101.41ms
step:859/1770 train_time:87113ms step_avg:101.41ms
step:860/1770 train_time:87217ms step_avg:101.42ms
step:861/1770 train_time:87323ms step_avg:101.42ms
step:862/1770 train_time:87427ms step_avg:101.42ms
step:863/1770 train_time:87531ms step_avg:101.43ms
step:864/1770 train_time:87634ms step_avg:101.43ms
step:865/1770 train_time:87740ms step_avg:101.43ms
step:866/1770 train_time:87844ms step_avg:101.44ms
step:867/1770 train_time:87949ms step_avg:101.44ms
step:868/1770 train_time:88054ms step_avg:101.44ms
step:869/1770 train_time:88158ms step_avg:101.45ms
step:870/1770 train_time:88263ms step_avg:101.45ms
step:871/1770 train_time:88367ms step_avg:101.46ms
step:872/1770 train_time:88471ms step_avg:101.46ms
step:873/1770 train_time:88575ms step_avg:101.46ms
step:874/1770 train_time:88680ms step_avg:101.46ms
step:875/1770 train_time:88784ms step_avg:101.47ms
step:875/1770 val_loss:3.5506 train_time:88822ms step_avg:101.51ms
step:876/1770 train_time:88895ms step_avg:101.48ms
step:877/1770 train_time:89003ms step_avg:101.49ms
step:878/1770 train_time:89109ms step_avg:101.49ms
step:879/1770 train_time:89213ms step_avg:101.49ms
step:880/1770 train_time:89318ms step_avg:101.50ms
step:881/1770 train_time:89422ms step_avg:101.50ms
step:882/1770 train_time:89526ms step_avg:101.50ms
step:883/1770 train_time:89630ms step_avg:101.51ms
step:884/1770 train_time:89733ms step_avg:101.51ms
step:885/1770 train_time:89837ms step_avg:101.51ms
step:886/1770 train_time:89941ms step_avg:101.51ms
step:887/1770 train_time:90047ms step_avg:101.52ms
step:888/1770 train_time:90152ms step_avg:101.52ms
step:889/1770 train_time:90256ms step_avg:101.53ms
step:890/1770 train_time:90360ms step_avg:101.53ms
step:891/1770 train_time:90464ms step_avg:101.53ms
step:892/1770 train_time:90568ms step_avg:101.53ms
step:893/1770 train_time:90672ms step_avg:101.54ms
step:894/1770 train_time:90776ms step_avg:101.54ms
step:895/1770 train_time:90881ms step_avg:101.54ms
step:896/1770 train_time:90984ms step_avg:101.55ms
step:897/1770 train_time:91089ms step_avg:101.55ms
step:898/1770 train_time:91193ms step_avg:101.55ms
step:899/1770 train_time:91299ms step_avg:101.56ms
step:900/1770 train_time:91403ms step_avg:101.56ms
step:901/1770 train_time:91507ms step_avg:101.56ms
step:902/1770 train_time:91612ms step_avg:101.57ms
step:903/1770 train_time:91716ms step_avg:101.57ms
step:904/1770 train_time:91820ms step_avg:101.57ms
step:905/1770 train_time:91924ms step_avg:101.57ms
step:906/1770 train_time:92028ms step_avg:101.58ms
step:907/1770 train_time:92133ms step_avg:101.58ms
step:908/1770 train_time:92238ms step_avg:101.58ms
step:909/1770 train_time:92342ms step_avg:101.59ms
step:910/1770 train_time:92445ms step_avg:101.59ms
step:911/1770 train_time:92550ms step_avg:101.59ms
step:912/1770 train_time:92655ms step_avg:101.60ms
step:913/1770 train_time:92759ms step_avg:101.60ms
step:914/1770 train_time:92864ms step_avg:101.60ms
step:915/1770 train_time:92968ms step_avg:101.60ms
step:916/1770 train_time:93072ms step_avg:101.61ms
step:917/1770 train_time:93177ms step_avg:101.61ms
step:918/1770 train_time:93282ms step_avg:101.61ms
step:919/1770 train_time:93387ms step_avg:101.62ms
step:920/1770 train_time:93493ms step_avg:101.62ms
step:921/1770 train_time:93599ms step_avg:101.63ms
step:922/1770 train_time:93704ms step_avg:101.63ms
step:923/1770 train_time:93811ms step_avg:101.64ms
step:924/1770 train_time:93915ms step_avg:101.64ms
step:925/1770 train_time:94021ms step_avg:101.64ms
step:926/1770 train_time:94127ms step_avg:101.65ms
step:927/1770 train_time:94233ms step_avg:101.65ms
step:928/1770 train_time:94339ms step_avg:101.66ms
step:929/1770 train_time:94445ms step_avg:101.66ms
step:930/1770 train_time:94552ms step_avg:101.67ms
step:931/1770 train_time:94657ms step_avg:101.67ms
step:932/1770 train_time:94763ms step_avg:101.68ms
step:933/1770 train_time:94868ms step_avg:101.68ms
step:934/1770 train_time:94975ms step_avg:101.69ms
step:935/1770 train_time:95080ms step_avg:101.69ms
step:936/1770 train_time:95186ms step_avg:101.69ms
step:937/1770 train_time:95293ms step_avg:101.70ms
step:938/1770 train_time:95398ms step_avg:101.70ms
step:939/1770 train_time:95504ms step_avg:101.71ms
step:940/1770 train_time:95609ms step_avg:101.71ms
step:941/1770 train_time:95716ms step_avg:101.72ms
step:942/1770 train_time:95822ms step_avg:101.72ms
step:943/1770 train_time:95929ms step_avg:101.73ms
step:944/1770 train_time:96034ms step_avg:101.73ms
step:945/1770 train_time:96139ms step_avg:101.73ms
step:946/1770 train_time:96247ms step_avg:101.74ms
step:947/1770 train_time:96353ms step_avg:101.75ms
step:948/1770 train_time:96459ms step_avg:101.75ms
step:949/1770 train_time:96565ms step_avg:101.75ms
step:950/1770 train_time:96671ms step_avg:101.76ms
step:951/1770 train_time:96777ms step_avg:101.76ms
step:952/1770 train_time:96883ms step_avg:101.77ms
step:953/1770 train_time:96989ms step_avg:101.77ms
step:954/1770 train_time:97095ms step_avg:101.78ms
step:955/1770 train_time:97202ms step_avg:101.78ms
step:956/1770 train_time:97307ms step_avg:101.79ms
step:957/1770 train_time:97413ms step_avg:101.79ms
step:958/1770 train_time:97519ms step_avg:101.79ms
step:959/1770 train_time:97624ms step_avg:101.80ms
step:960/1770 train_time:97731ms step_avg:101.80ms
step:961/1770 train_time:97836ms step_avg:101.81ms
step:962/1770 train_time:97942ms step_avg:101.81ms
step:963/1770 train_time:98048ms step_avg:101.82ms
step:964/1770 train_time:98155ms step_avg:101.82ms
step:965/1770 train_time:98261ms step_avg:101.82ms
step:966/1770 train_time:98365ms step_avg:101.83ms
step:967/1770 train_time:98472ms step_avg:101.83ms
step:968/1770 train_time:98578ms step_avg:101.84ms
step:969/1770 train_time:98683ms step_avg:101.84ms
step:970/1770 train_time:98789ms step_avg:101.84ms
step:971/1770 train_time:98896ms step_avg:101.85ms
step:972/1770 train_time:99002ms step_avg:101.85ms
step:973/1770 train_time:99107ms step_avg:101.86ms
step:974/1770 train_time:99214ms step_avg:101.86ms
step:975/1770 train_time:99320ms step_avg:101.87ms
step:976/1770 train_time:99426ms step_avg:101.87ms
step:977/1770 train_time:99533ms step_avg:101.88ms
step:978/1770 train_time:99639ms step_avg:101.88ms
step:979/1770 train_time:99744ms step_avg:101.88ms
step:980/1770 train_time:99849ms step_avg:101.89ms
step:981/1770 train_time:99956ms step_avg:101.89ms
step:982/1770 train_time:100061ms step_avg:101.89ms
step:983/1770 train_time:100166ms step_avg:101.90ms
step:984/1770 train_time:100272ms step_avg:101.90ms
step:985/1770 train_time:100378ms step_avg:101.91ms
step:986/1770 train_time:100483ms step_avg:101.91ms
step:987/1770 train_time:100590ms step_avg:101.91ms
step:988/1770 train_time:100695ms step_avg:101.92ms
step:989/1770 train_time:100801ms step_avg:101.92ms
step:990/1770 train_time:100907ms step_avg:101.93ms
step:991/1770 train_time:101014ms step_avg:101.93ms
step:992/1770 train_time:101119ms step_avg:101.93ms
step:993/1770 train_time:101224ms step_avg:101.94ms
step:994/1770 train_time:101330ms step_avg:101.94ms
step:995/1770 train_time:101437ms step_avg:101.95ms
step:996/1770 train_time:101542ms step_avg:101.95ms
step:997/1770 train_time:101648ms step_avg:101.95ms
step:998/1770 train_time:101755ms step_avg:101.96ms
step:999/1770 train_time:101861ms step_avg:101.96ms
step:1000/1770 train_time:101966ms step_avg:101.97ms
step:1000/1770 val_loss:3.5116 train_time:102005ms step_avg:102.01ms
step:1001/1770 train_time:102081ms step_avg:101.98ms
step:1002/1770 train_time:102187ms step_avg:101.98ms
step:1003/1770 train_time:102296ms step_avg:101.99ms
step:1004/1770 train_time:102402ms step_avg:101.99ms
step:1005/1770 train_time:102507ms step_avg:102.00ms
step:1006/1770 train_time:102611ms step_avg:102.00ms
step:1007/1770 train_time:102717ms step_avg:102.00ms
step:1008/1770 train_time:102823ms step_avg:102.01ms
step:1009/1770 train_time:102928ms step_avg:102.01ms
step:1010/1770 train_time:103033ms step_avg:102.01ms
step:1011/1770 train_time:103139ms step_avg:102.02ms
step:1012/1770 train_time:103248ms step_avg:102.02ms
step:1013/1770 train_time:103356ms step_avg:102.03ms
step:1014/1770 train_time:103462ms step_avg:102.03ms
step:1015/1770 train_time:103567ms step_avg:102.04ms
step:1016/1770 train_time:103674ms step_avg:102.04ms
step:1017/1770 train_time:103781ms step_avg:102.05ms
step:1018/1770 train_time:103886ms step_avg:102.05ms
step:1019/1770 train_time:103992ms step_avg:102.05ms
step:1020/1770 train_time:104096ms step_avg:102.06ms
step:1021/1770 train_time:104202ms step_avg:102.06ms
step:1022/1770 train_time:104307ms step_avg:102.06ms
step:1023/1770 train_time:104414ms step_avg:102.07ms
step:1024/1770 train_time:104521ms step_avg:102.07ms
step:1025/1770 train_time:104627ms step_avg:102.08ms
step:1026/1770 train_time:104733ms step_avg:102.08ms
step:1027/1770 train_time:104839ms step_avg:102.08ms
step:1028/1770 train_time:104944ms step_avg:102.09ms
step:1029/1770 train_time:105050ms step_avg:102.09ms
step:1030/1770 train_time:105156ms step_avg:102.09ms
step:1031/1770 train_time:105261ms step_avg:102.10ms
step:1032/1770 train_time:105366ms step_avg:102.10ms
step:1033/1770 train_time:105473ms step_avg:102.10ms
step:1034/1770 train_time:105580ms step_avg:102.11ms
step:1035/1770 train_time:105686ms step_avg:102.11ms
step:1036/1770 train_time:105791ms step_avg:102.12ms
step:1037/1770 train_time:105898ms step_avg:102.12ms
step:1038/1770 train_time:106005ms step_avg:102.12ms
step:1039/1770 train_time:106111ms step_avg:102.13ms
step:1040/1770 train_time:106216ms step_avg:102.13ms
step:1041/1770 train_time:106323ms step_avg:102.14ms
step:1042/1770 train_time:106428ms step_avg:102.14ms
step:1043/1770 train_time:106535ms step_avg:102.14ms
step:1044/1770 train_time:106641ms step_avg:102.15ms
step:1045/1770 train_time:106746ms step_avg:102.15ms
step:1046/1770 train_time:106852ms step_avg:102.15ms
step:1047/1770 train_time:106959ms step_avg:102.16ms
step:1048/1770 train_time:107065ms step_avg:102.16ms
step:1049/1770 train_time:107171ms step_avg:102.16ms
step:1050/1770 train_time:107278ms step_avg:102.17ms
step:1051/1770 train_time:107384ms step_avg:102.17ms
step:1052/1770 train_time:107489ms step_avg:102.18ms
step:1053/1770 train_time:107596ms step_avg:102.18ms
step:1054/1770 train_time:107702ms step_avg:102.18ms
step:1055/1770 train_time:107807ms step_avg:102.19ms
step:1056/1770 train_time:107913ms step_avg:102.19ms
step:1057/1770 train_time:108019ms step_avg:102.19ms
step:1058/1770 train_time:108126ms step_avg:102.20ms
step:1059/1770 train_time:108232ms step_avg:102.20ms
step:1060/1770 train_time:108338ms step_avg:102.21ms
step:1061/1770 train_time:108445ms step_avg:102.21ms
step:1062/1770 train_time:108551ms step_avg:102.21ms
step:1063/1770 train_time:108658ms step_avg:102.22ms
step:1064/1770 train_time:108765ms step_avg:102.22ms
step:1065/1770 train_time:108871ms step_avg:102.23ms
step:1066/1770 train_time:108977ms step_avg:102.23ms
step:1067/1770 train_time:109084ms step_avg:102.23ms
step:1068/1770 train_time:109189ms step_avg:102.24ms
step:1069/1770 train_time:109295ms step_avg:102.24ms
step:1070/1770 train_time:109401ms step_avg:102.24ms
step:1071/1770 train_time:109506ms step_avg:102.25ms
step:1072/1770 train_time:109612ms step_avg:102.25ms
step:1073/1770 train_time:109718ms step_avg:102.25ms
step:1074/1770 train_time:109824ms step_avg:102.26ms
step:1075/1770 train_time:109930ms step_avg:102.26ms
step:1076/1770 train_time:110039ms step_avg:102.27ms
step:1077/1770 train_time:110145ms step_avg:102.27ms
step:1078/1770 train_time:110250ms step_avg:102.27ms
step:1079/1770 train_time:110357ms step_avg:102.28ms
step:1080/1770 train_time:110464ms step_avg:102.28ms
step:1081/1770 train_time:110570ms step_avg:102.28ms
step:1082/1770 train_time:110677ms step_avg:102.29ms
step:1083/1770 train_time:110783ms step_avg:102.29ms
step:1084/1770 train_time:110889ms step_avg:102.30ms
step:1085/1770 train_time:110994ms step_avg:102.30ms
step:1086/1770 train_time:111100ms step_avg:102.30ms
step:1087/1770 train_time:111206ms step_avg:102.31ms
step:1088/1770 train_time:111312ms step_avg:102.31ms
step:1089/1770 train_time:111420ms step_avg:102.31ms
step:1090/1770 train_time:111526ms step_avg:102.32ms
step:1091/1770 train_time:111633ms step_avg:102.32ms
step:1092/1770 train_time:111740ms step_avg:102.33ms
step:1093/1770 train_time:111845ms step_avg:102.33ms
step:1094/1770 train_time:111951ms step_avg:102.33ms
step:1095/1770 train_time:112058ms step_avg:102.34ms
step:1096/1770 train_time:112164ms step_avg:102.34ms
step:1097/1770 train_time:112270ms step_avg:102.34ms
step:1098/1770 train_time:112375ms step_avg:102.35ms
step:1099/1770 train_time:112482ms step_avg:102.35ms
step:1100/1770 train_time:112587ms step_avg:102.35ms
step:1101/1770 train_time:112694ms step_avg:102.36ms
step:1102/1770 train_time:112800ms step_avg:102.36ms
step:1103/1770 train_time:112905ms step_avg:102.36ms
step:1104/1770 train_time:113012ms step_avg:102.37ms
step:1105/1770 train_time:113119ms step_avg:102.37ms
step:1106/1770 train_time:113225ms step_avg:102.37ms
step:1107/1770 train_time:113330ms step_avg:102.38ms
step:1108/1770 train_time:113437ms step_avg:102.38ms
step:1109/1770 train_time:113543ms step_avg:102.38ms
step:1110/1770 train_time:113649ms step_avg:102.39ms
step:1111/1770 train_time:113755ms step_avg:102.39ms
step:1112/1770 train_time:113862ms step_avg:102.39ms
step:1113/1770 train_time:113967ms step_avg:102.40ms
step:1114/1770 train_time:114073ms step_avg:102.40ms
step:1115/1770 train_time:114179ms step_avg:102.40ms
step:1116/1770 train_time:114286ms step_avg:102.41ms
step:1117/1770 train_time:114392ms step_avg:102.41ms
step:1118/1770 train_time:114499ms step_avg:102.41ms
step:1119/1770 train_time:114605ms step_avg:102.42ms
step:1120/1770 train_time:114710ms step_avg:102.42ms
step:1121/1770 train_time:114818ms step_avg:102.42ms
step:1122/1770 train_time:114924ms step_avg:102.43ms
step:1123/1770 train_time:115030ms step_avg:102.43ms
step:1124/1770 train_time:115136ms step_avg:102.43ms
step:1125/1770 train_time:115242ms step_avg:102.44ms
step:1125/1770 val_loss:3.4711 train_time:115279ms step_avg:102.47ms
step:1126/1770 train_time:115356ms step_avg:102.45ms
step:1127/1770 train_time:115464ms step_avg:102.45ms
step:1128/1770 train_time:115570ms step_avg:102.46ms
step:1129/1770 train_time:115675ms step_avg:102.46ms
step:1130/1770 train_time:115781ms step_avg:102.46ms
step:1131/1770 train_time:115888ms step_avg:102.46ms
step:1132/1770 train_time:115993ms step_avg:102.47ms
step:1133/1770 train_time:116099ms step_avg:102.47ms
step:1134/1770 train_time:116205ms step_avg:102.47ms
step:1135/1770 train_time:116310ms step_avg:102.48ms
step:1136/1770 train_time:116418ms step_avg:102.48ms
step:1137/1770 train_time:116527ms step_avg:102.49ms
step:1138/1770 train_time:116633ms step_avg:102.49ms
step:1139/1770 train_time:116740ms step_avg:102.49ms
step:1140/1770 train_time:116846ms step_avg:102.50ms
step:1141/1770 train_time:116951ms step_avg:102.50ms
step:1142/1770 train_time:117057ms step_avg:102.50ms
step:1143/1770 train_time:117163ms step_avg:102.50ms
step:1144/1770 train_time:117268ms step_avg:102.51ms
step:1145/1770 train_time:117373ms step_avg:102.51ms
step:1146/1770 train_time:117480ms step_avg:102.51ms
step:1147/1770 train_time:117587ms step_avg:102.52ms
step:1148/1770 train_time:117694ms step_avg:102.52ms
step:1149/1770 train_time:117801ms step_avg:102.52ms
step:1150/1770 train_time:117906ms step_avg:102.53ms
step:1151/1770 train_time:118012ms step_avg:102.53ms
step:1152/1770 train_time:118118ms step_avg:102.53ms
step:1153/1770 train_time:118224ms step_avg:102.54ms
step:1154/1770 train_time:118330ms step_avg:102.54ms
step:1155/1770 train_time:118435ms step_avg:102.54ms
step:1156/1770 train_time:118542ms step_avg:102.55ms
step:1157/1770 train_time:118651ms step_avg:102.55ms
step:1158/1770 train_time:118757ms step_avg:102.55ms
step:1159/1770 train_time:118864ms step_avg:102.56ms
step:1160/1770 train_time:118969ms step_avg:102.56ms
step:1161/1770 train_time:119074ms step_avg:102.56ms
step:1162/1770 train_time:119181ms step_avg:102.57ms
step:1163/1770 train_time:119287ms step_avg:102.57ms
step:1164/1770 train_time:119392ms step_avg:102.57ms
step:1165/1770 train_time:119499ms step_avg:102.57ms
step:1166/1770 train_time:119605ms step_avg:102.58ms
step:1167/1770 train_time:119712ms step_avg:102.58ms
step:1168/1770 train_time:119819ms step_avg:102.58ms
step:1169/1770 train_time:119926ms step_avg:102.59ms
step:1170/1770 train_time:120033ms step_avg:102.59ms
step:1171/1770 train_time:120139ms step_avg:102.60ms
step:1172/1770 train_time:120245ms step_avg:102.60ms
step:1173/1770 train_time:120351ms step_avg:102.60ms
step:1174/1770 train_time:120456ms step_avg:102.60ms
step:1175/1770 train_time:120562ms step_avg:102.61ms
step:1176/1770 train_time:120668ms step_avg:102.61ms
step:1177/1770 train_time:120773ms step_avg:102.61ms
step:1178/1770 train_time:120879ms step_avg:102.61ms
step:1179/1770 train_time:120986ms step_avg:102.62ms
step:1180/1770 train_time:121093ms step_avg:102.62ms
step:1181/1770 train_time:121198ms step_avg:102.62ms
step:1182/1770 train_time:121305ms step_avg:102.63ms
step:1183/1770 train_time:121413ms step_avg:102.63ms
step:1184/1770 train_time:121520ms step_avg:102.64ms
step:1185/1770 train_time:121628ms step_avg:102.64ms
step:1186/1770 train_time:121736ms step_avg:102.64ms
step:1187/1770 train_time:121845ms step_avg:102.65ms
step:1188/1770 train_time:121952ms step_avg:102.65ms
step:1189/1770 train_time:122060ms step_avg:102.66ms
step:1190/1770 train_time:122167ms step_avg:102.66ms
step:1191/1770 train_time:122275ms step_avg:102.67ms
step:1192/1770 train_time:122383ms step_avg:102.67ms
step:1193/1770 train_time:122489ms step_avg:102.67ms
step:1194/1770 train_time:122596ms step_avg:102.68ms
step:1195/1770 train_time:122705ms step_avg:102.68ms
step:1196/1770 train_time:122812ms step_avg:102.69ms
step:1197/1770 train_time:122919ms step_avg:102.69ms
step:1198/1770 train_time:123026ms step_avg:102.69ms
step:1199/1770 train_time:123133ms step_avg:102.70ms
step:1200/1770 train_time:123242ms step_avg:102.70ms
step:1201/1770 train_time:123350ms step_avg:102.71ms
step:1202/1770 train_time:123458ms step_avg:102.71ms
step:1203/1770 train_time:123566ms step_avg:102.71ms
step:1204/1770 train_time:123672ms step_avg:102.72ms
step:1205/1770 train_time:123780ms step_avg:102.72ms
step:1206/1770 train_time:123889ms step_avg:102.73ms
step:1207/1770 train_time:123997ms step_avg:102.73ms
step:1208/1770 train_time:124104ms step_avg:102.74ms
step:1209/1770 train_time:124212ms step_avg:102.74ms
step:1210/1770 train_time:124321ms step_avg:102.74ms
step:1211/1770 train_time:124431ms step_avg:102.75ms
step:1212/1770 train_time:124539ms step_avg:102.75ms
step:1213/1770 train_time:124645ms step_avg:102.76ms
step:1214/1770 train_time:124753ms step_avg:102.76ms
step:1215/1770 train_time:124864ms step_avg:102.77ms
step:1216/1770 train_time:124971ms step_avg:102.77ms
step:1217/1770 train_time:125077ms step_avg:102.78ms
step:1218/1770 train_time:125184ms step_avg:102.78ms
step:1219/1770 train_time:125292ms step_avg:102.78ms
step:1220/1770 train_time:125399ms step_avg:102.79ms
step:1221/1770 train_time:125507ms step_avg:102.79ms
step:1222/1770 train_time:125615ms step_avg:102.79ms
step:1223/1770 train_time:125722ms step_avg:102.80ms
step:1224/1770 train_time:125830ms step_avg:102.80ms
step:1225/1770 train_time:125937ms step_avg:102.81ms
step:1226/1770 train_time:126044ms step_avg:102.81ms
step:1227/1770 train_time:126152ms step_avg:102.81ms
step:1228/1770 train_time:126259ms step_avg:102.82ms
step:1229/1770 train_time:126367ms step_avg:102.82ms
step:1230/1770 train_time:126472ms step_avg:102.82ms
step:1231/1770 train_time:126581ms step_avg:102.83ms
step:1232/1770 train_time:126688ms step_avg:102.83ms
step:1233/1770 train_time:126794ms step_avg:102.83ms
step:1234/1770 train_time:126901ms step_avg:102.84ms
step:1235/1770 train_time:127009ms step_avg:102.84ms
step:1236/1770 train_time:127117ms step_avg:102.85ms
step:1237/1770 train_time:127225ms step_avg:102.85ms
step:1238/1770 train_time:127332ms step_avg:102.85ms
step:1239/1770 train_time:127438ms step_avg:102.86ms
step:1240/1770 train_time:127545ms step_avg:102.86ms
step:1241/1770 train_time:127654ms step_avg:102.86ms
step:1242/1770 train_time:127763ms step_avg:102.87ms
step:1243/1770 train_time:127870ms step_avg:102.87ms
step:1244/1770 train_time:127978ms step_avg:102.88ms
step:1245/1770 train_time:128085ms step_avg:102.88ms
step:1246/1770 train_time:128193ms step_avg:102.88ms
step:1247/1770 train_time:128300ms step_avg:102.89ms
step:1248/1770 train_time:128407ms step_avg:102.89ms
step:1249/1770 train_time:128514ms step_avg:102.89ms
step:1250/1770 train_time:128622ms step_avg:102.90ms
step:1250/1770 val_loss:3.4246 train_time:128663ms step_avg:102.93ms
step:1251/1770 train_time:128739ms step_avg:102.91ms
step:1252/1770 train_time:128847ms step_avg:102.91ms
step:1253/1770 train_time:128954ms step_avg:102.92ms
step:1254/1770 train_time:129062ms step_avg:102.92ms
step:1255/1770 train_time:129169ms step_avg:102.92ms
step:1256/1770 train_time:129277ms step_avg:102.93ms
step:1257/1770 train_time:129384ms step_avg:102.93ms
step:1258/1770 train_time:129491ms step_avg:102.93ms
step:1259/1770 train_time:129599ms step_avg:102.94ms
step:1260/1770 train_time:129707ms step_avg:102.94ms
step:1261/1770 train_time:129815ms step_avg:102.95ms
step:1262/1770 train_time:129922ms step_avg:102.95ms
step:1263/1770 train_time:130030ms step_avg:102.95ms
step:1264/1770 train_time:130140ms step_avg:102.96ms
step:1265/1770 train_time:130247ms step_avg:102.96ms
step:1266/1770 train_time:130354ms step_avg:102.97ms
step:1267/1770 train_time:130462ms step_avg:102.97ms
step:1268/1770 train_time:130569ms step_avg:102.97ms
step:1269/1770 train_time:130677ms step_avg:102.98ms
step:1270/1770 train_time:130784ms step_avg:102.98ms
step:1271/1770 train_time:130891ms step_avg:102.98ms
step:1272/1770 train_time:130998ms step_avg:102.99ms
step:1273/1770 train_time:131106ms step_avg:102.99ms
step:1274/1770 train_time:131213ms step_avg:102.99ms
step:1275/1770 train_time:131320ms step_avg:103.00ms
step:1276/1770 train_time:131427ms step_avg:103.00ms
step:1277/1770 train_time:131533ms step_avg:103.00ms
step:1278/1770 train_time:131642ms step_avg:103.01ms
step:1279/1770 train_time:131748ms step_avg:103.01ms
step:1280/1770 train_time:131857ms step_avg:103.01ms
step:1281/1770 train_time:131963ms step_avg:103.02ms
step:1282/1770 train_time:132072ms step_avg:103.02ms
step:1283/1770 train_time:132179ms step_avg:103.02ms
step:1284/1770 train_time:132286ms step_avg:103.03ms
step:1285/1770 train_time:132393ms step_avg:103.03ms
step:1286/1770 train_time:132499ms step_avg:103.03ms
step:1287/1770 train_time:132608ms step_avg:103.04ms
step:1288/1770 train_time:132715ms step_avg:103.04ms
step:1289/1770 train_time:132822ms step_avg:103.04ms
step:1290/1770 train_time:132929ms step_avg:103.05ms
step:1291/1770 train_time:133037ms step_avg:103.05ms
step:1292/1770 train_time:133144ms step_avg:103.05ms
step:1293/1770 train_time:133253ms step_avg:103.06ms
step:1294/1770 train_time:133361ms step_avg:103.06ms
step:1295/1770 train_time:133468ms step_avg:103.06ms
step:1296/1770 train_time:133576ms step_avg:103.07ms
step:1297/1770 train_time:133683ms step_avg:103.07ms
step:1298/1770 train_time:133790ms step_avg:103.07ms
step:1299/1770 train_time:133898ms step_avg:103.08ms
step:1300/1770 train_time:134004ms step_avg:103.08ms
step:1301/1770 train_time:134111ms step_avg:103.08ms
step:1302/1770 train_time:134220ms step_avg:103.09ms
step:1303/1770 train_time:134327ms step_avg:103.09ms
step:1304/1770 train_time:134434ms step_avg:103.09ms
step:1305/1770 train_time:134542ms step_avg:103.10ms
step:1306/1770 train_time:134648ms step_avg:103.10ms
step:1307/1770 train_time:134756ms step_avg:103.10ms
step:1308/1770 train_time:134863ms step_avg:103.11ms
step:1309/1770 train_time:134971ms step_avg:103.11ms
step:1310/1770 train_time:135077ms step_avg:103.11ms
step:1311/1770 train_time:135184ms step_avg:103.12ms
step:1312/1770 train_time:135291ms step_avg:103.12ms
step:1313/1770 train_time:135398ms step_avg:103.12ms
step:1314/1770 train_time:135506ms step_avg:103.12ms
step:1315/1770 train_time:135612ms step_avg:103.13ms
step:1316/1770 train_time:135720ms step_avg:103.13ms
step:1317/1770 train_time:135828ms step_avg:103.13ms
step:1318/1770 train_time:135937ms step_avg:103.14ms
step:1319/1770 train_time:136045ms step_avg:103.14ms
step:1320/1770 train_time:136153ms step_avg:103.15ms
step:1321/1770 train_time:136261ms step_avg:103.15ms
step:1322/1770 train_time:136368ms step_avg:103.15ms
step:1323/1770 train_time:136476ms step_avg:103.16ms
step:1324/1770 train_time:136583ms step_avg:103.16ms
step:1325/1770 train_time:136692ms step_avg:103.16ms
step:1326/1770 train_time:136799ms step_avg:103.17ms
step:1327/1770 train_time:136909ms step_avg:103.17ms
step:1328/1770 train_time:137017ms step_avg:103.18ms
step:1329/1770 train_time:137123ms step_avg:103.18ms
step:1330/1770 train_time:137232ms step_avg:103.18ms
step:1331/1770 train_time:137338ms step_avg:103.18ms
step:1332/1770 train_time:137445ms step_avg:103.19ms
step:1333/1770 train_time:137553ms step_avg:103.19ms
step:1334/1770 train_time:137661ms step_avg:103.19ms
step:1335/1770 train_time:137769ms step_avg:103.20ms
step:1336/1770 train_time:137877ms step_avg:103.20ms
step:1337/1770 train_time:137984ms step_avg:103.20ms
step:1338/1770 train_time:138094ms step_avg:103.21ms
step:1339/1770 train_time:138201ms step_avg:103.21ms
step:1340/1770 train_time:138309ms step_avg:103.22ms
step:1341/1770 train_time:138417ms step_avg:103.22ms
step:1342/1770 train_time:138524ms step_avg:103.22ms
step:1343/1770 train_time:138631ms step_avg:103.23ms
step:1344/1770 train_time:138739ms step_avg:103.23ms
step:1345/1770 train_time:138846ms step_avg:103.23ms
step:1346/1770 train_time:138954ms step_avg:103.23ms
step:1347/1770 train_time:139061ms step_avg:103.24ms
step:1348/1770 train_time:139170ms step_avg:103.24ms
step:1349/1770 train_time:139278ms step_avg:103.25ms
step:1350/1770 train_time:139385ms step_avg:103.25ms
step:1351/1770 train_time:139492ms step_avg:103.25ms
step:1352/1770 train_time:139600ms step_avg:103.25ms
step:1353/1770 train_time:139709ms step_avg:103.26ms
step:1354/1770 train_time:139817ms step_avg:103.26ms
step:1355/1770 train_time:139923ms step_avg:103.26ms
step:1356/1770 train_time:140031ms step_avg:103.27ms
step:1357/1770 train_time:140139ms step_avg:103.27ms
step:1358/1770 train_time:140246ms step_avg:103.27ms
step:1359/1770 train_time:140353ms step_avg:103.28ms
step:1360/1770 train_time:140462ms step_avg:103.28ms
step:1361/1770 train_time:140571ms step_avg:103.29ms
step:1362/1770 train_time:140679ms step_avg:103.29ms
step:1363/1770 train_time:140787ms step_avg:103.29ms
step:1364/1770 train_time:140893ms step_avg:103.29ms
step:1365/1770 train_time:141000ms step_avg:103.30ms
step:1366/1770 train_time:141106ms step_avg:103.30ms
step:1367/1770 train_time:141215ms step_avg:103.30ms
step:1368/1770 train_time:141322ms step_avg:103.31ms
step:1369/1770 train_time:141428ms step_avg:103.31ms
step:1370/1770 train_time:141536ms step_avg:103.31ms
step:1371/1770 train_time:141644ms step_avg:103.31ms
step:1372/1770 train_time:141752ms step_avg:103.32ms
step:1373/1770 train_time:141860ms step_avg:103.32ms
step:1374/1770 train_time:141970ms step_avg:103.33ms
step:1375/1770 train_time:142077ms step_avg:103.33ms
step:1375/1770 val_loss:3.3805 train_time:142115ms step_avg:103.36ms
step:1376/1770 train_time:142195ms step_avg:103.34ms
step:1377/1770 train_time:142303ms step_avg:103.34ms
step:1378/1770 train_time:142412ms step_avg:103.35ms
step:1379/1770 train_time:142519ms step_avg:103.35ms
step:1380/1770 train_time:142626ms step_avg:103.35ms
step:1381/1770 train_time:142733ms step_avg:103.35ms
step:1382/1770 train_time:142841ms step_avg:103.36ms
step:1383/1770 train_time:142948ms step_avg:103.36ms
step:1384/1770 train_time:143055ms step_avg:103.36ms
step:1385/1770 train_time:143163ms step_avg:103.37ms
step:1386/1770 train_time:143271ms step_avg:103.37ms
step:1387/1770 train_time:143377ms step_avg:103.37ms
step:1388/1770 train_time:143486ms step_avg:103.38ms
step:1389/1770 train_time:143593ms step_avg:103.38ms
step:1390/1770 train_time:143700ms step_avg:103.38ms
step:1391/1770 train_time:143808ms step_avg:103.38ms
step:1392/1770 train_time:143915ms step_avg:103.39ms
step:1393/1770 train_time:144022ms step_avg:103.39ms
step:1394/1770 train_time:144130ms step_avg:103.39ms
step:1395/1770 train_time:144238ms step_avg:103.40ms
step:1396/1770 train_time:144346ms step_avg:103.40ms
step:1397/1770 train_time:144455ms step_avg:103.40ms
step:1398/1770 train_time:144564ms step_avg:103.41ms
step:1399/1770 train_time:144671ms step_avg:103.41ms
step:1400/1770 train_time:144778ms step_avg:103.41ms
step:1401/1770 train_time:144886ms step_avg:103.42ms
step:1402/1770 train_time:144993ms step_avg:103.42ms
step:1403/1770 train_time:145101ms step_avg:103.42ms
step:1404/1770 train_time:145210ms step_avg:103.43ms
step:1405/1770 train_time:145317ms step_avg:103.43ms
step:1406/1770 train_time:145426ms step_avg:103.43ms
step:1407/1770 train_time:145533ms step_avg:103.44ms
step:1408/1770 train_time:145641ms step_avg:103.44ms
step:1409/1770 train_time:145750ms step_avg:103.44ms
step:1410/1770 train_time:145856ms step_avg:103.44ms
step:1411/1770 train_time:145964ms step_avg:103.45ms
step:1412/1770 train_time:146072ms step_avg:103.45ms
step:1413/1770 train_time:146182ms step_avg:103.45ms
step:1414/1770 train_time:146290ms step_avg:103.46ms
step:1415/1770 train_time:146399ms step_avg:103.46ms
step:1416/1770 train_time:146507ms step_avg:103.47ms
step:1417/1770 train_time:146614ms step_avg:103.47ms
step:1418/1770 train_time:146723ms step_avg:103.47ms
step:1419/1770 train_time:146830ms step_avg:103.47ms
step:1420/1770 train_time:146937ms step_avg:103.48ms
step:1421/1770 train_time:147045ms step_avg:103.48ms
step:1422/1770 train_time:147153ms step_avg:103.48ms
step:1423/1770 train_time:147261ms step_avg:103.49ms
step:1424/1770 train_time:147369ms step_avg:103.49ms
step:1425/1770 train_time:147475ms step_avg:103.49ms
step:1426/1770 train_time:147584ms step_avg:103.49ms
step:1427/1770 train_time:147691ms step_avg:103.50ms
step:1428/1770 train_time:147799ms step_avg:103.50ms
step:1429/1770 train_time:147906ms step_avg:103.50ms
step:1430/1770 train_time:148014ms step_avg:103.51ms
step:1431/1770 train_time:148122ms step_avg:103.51ms
step:1432/1770 train_time:148231ms step_avg:103.51ms
step:1433/1770 train_time:148338ms step_avg:103.52ms
step:1434/1770 train_time:148446ms step_avg:103.52ms
step:1435/1770 train_time:148553ms step_avg:103.52ms
step:1436/1770 train_time:148664ms step_avg:103.53ms
step:1437/1770 train_time:148772ms step_avg:103.53ms
step:1438/1770 train_time:148879ms step_avg:103.53ms
step:1439/1770 train_time:148986ms step_avg:103.53ms
step:1440/1770 train_time:149092ms step_avg:103.54ms
step:1441/1770 train_time:149201ms step_avg:103.54ms
step:1442/1770 train_time:149308ms step_avg:103.54ms
step:1443/1770 train_time:149417ms step_avg:103.55ms
step:1444/1770 train_time:149527ms step_avg:103.55ms
step:1445/1770 train_time:149635ms step_avg:103.55ms
step:1446/1770 train_time:149746ms step_avg:103.56ms
step:1447/1770 train_time:149854ms step_avg:103.56ms
step:1448/1770 train_time:149963ms step_avg:103.57ms
step:1449/1770 train_time:150073ms step_avg:103.57ms
step:1450/1770 train_time:150182ms step_avg:103.57ms
step:1451/1770 train_time:150291ms step_avg:103.58ms
step:1452/1770 train_time:150399ms step_avg:103.58ms
step:1453/1770 train_time:150508ms step_avg:103.58ms
step:1454/1770 train_time:150618ms step_avg:103.59ms
step:1455/1770 train_time:150728ms step_avg:103.59ms
step:1456/1770 train_time:150837ms step_avg:103.60ms
step:1457/1770 train_time:150948ms step_avg:103.60ms
step:1458/1770 train_time:151057ms step_avg:103.61ms
step:1459/1770 train_time:151166ms step_avg:103.61ms
step:1460/1770 train_time:151274ms step_avg:103.61ms
step:1461/1770 train_time:151382ms step_avg:103.62ms
step:1462/1770 train_time:151492ms step_avg:103.62ms
step:1463/1770 train_time:151600ms step_avg:103.62ms
step:1464/1770 train_time:151710ms step_avg:103.63ms
step:1465/1770 train_time:151819ms step_avg:103.63ms
step:1466/1770 train_time:151928ms step_avg:103.63ms
step:1467/1770 train_time:152036ms step_avg:103.64ms
step:1468/1770 train_time:152146ms step_avg:103.64ms
step:1469/1770 train_time:152255ms step_avg:103.65ms
step:1470/1770 train_time:152362ms step_avg:103.65ms
step:1471/1770 train_time:152471ms step_avg:103.65ms
step:1472/1770 train_time:152578ms step_avg:103.65ms
step:1473/1770 train_time:152689ms step_avg:103.66ms
step:1474/1770 train_time:152798ms step_avg:103.66ms
step:1475/1770 train_time:152908ms step_avg:103.67ms
step:1476/1770 train_time:153018ms step_avg:103.67ms
step:1477/1770 train_time:153127ms step_avg:103.67ms
step:1478/1770 train_time:153236ms step_avg:103.68ms
step:1479/1770 train_time:153348ms step_avg:103.68ms
step:1480/1770 train_time:153458ms step_avg:103.69ms
step:1481/1770 train_time:153568ms step_avg:103.69ms
step:1482/1770 train_time:153675ms step_avg:103.69ms
step:1483/1770 train_time:153784ms step_avg:103.70ms
step:1484/1770 train_time:153893ms step_avg:103.70ms
step:1485/1770 train_time:154001ms step_avg:103.70ms
step:1486/1770 train_time:154110ms step_avg:103.71ms
step:1487/1770 train_time:154218ms step_avg:103.71ms
step:1488/1770 train_time:154329ms step_avg:103.72ms
step:1489/1770 train_time:154438ms step_avg:103.72ms
step:1490/1770 train_time:154547ms step_avg:103.72ms
step:1491/1770 train_time:154654ms step_avg:103.73ms
step:1492/1770 train_time:154764ms step_avg:103.73ms
step:1493/1770 train_time:154873ms step_avg:103.73ms
step:1494/1770 train_time:154983ms step_avg:103.74ms
step:1495/1770 train_time:155092ms step_avg:103.74ms
step:1496/1770 train_time:155200ms step_avg:103.74ms
step:1497/1770 train_time:155309ms step_avg:103.75ms
step:1498/1770 train_time:155417ms step_avg:103.75ms
step:1499/1770 train_time:155527ms step_avg:103.75ms
step:1500/1770 train_time:155635ms step_avg:103.76ms
step:1500/1770 val_loss:3.3431 train_time:155676ms step_avg:103.78ms
step:1501/1770 train_time:155754ms step_avg:103.77ms
step:1502/1770 train_time:155863ms step_avg:103.77ms
step:1503/1770 train_time:155974ms step_avg:103.78ms
step:1504/1770 train_time:156083ms step_avg:103.78ms
step:1505/1770 train_time:156192ms step_avg:103.78ms
step:1506/1770 train_time:156302ms step_avg:103.79ms
step:1507/1770 train_time:156410ms step_avg:103.79ms
step:1508/1770 train_time:156519ms step_avg:103.79ms
step:1509/1770 train_time:156626ms step_avg:103.79ms
step:1510/1770 train_time:156736ms step_avg:103.80ms
step:1511/1770 train_time:156845ms step_avg:103.80ms
step:1512/1770 train_time:156954ms step_avg:103.81ms
step:1513/1770 train_time:157062ms step_avg:103.81ms
step:1514/1770 train_time:157171ms step_avg:103.81ms
step:1515/1770 train_time:157280ms step_avg:103.81ms
step:1516/1770 train_time:157388ms step_avg:103.82ms
step:1517/1770 train_time:157497ms step_avg:103.82ms
step:1518/1770 train_time:157606ms step_avg:103.83ms
step:1519/1770 train_time:157714ms step_avg:103.83ms
step:1520/1770 train_time:157823ms step_avg:103.83ms
step:1521/1770 train_time:157932ms step_avg:103.83ms
step:1522/1770 train_time:158041ms step_avg:103.84ms
step:1523/1770 train_time:158151ms step_avg:103.84ms
step:1524/1770 train_time:158260ms step_avg:103.85ms
step:1525/1770 train_time:158369ms step_avg:103.85ms
step:1526/1770 train_time:158477ms step_avg:103.85ms
step:1527/1770 train_time:158587ms step_avg:103.86ms
step:1528/1770 train_time:158696ms step_avg:103.86ms
step:1529/1770 train_time:158805ms step_avg:103.86ms
step:1530/1770 train_time:158916ms step_avg:103.87ms
step:1531/1770 train_time:159025ms step_avg:103.87ms
step:1532/1770 train_time:159134ms step_avg:103.87ms
step:1533/1770 train_time:159244ms step_avg:103.88ms
step:1534/1770 train_time:159354ms step_avg:103.88ms
step:1535/1770 train_time:159462ms step_avg:103.88ms
step:1536/1770 train_time:159572ms step_avg:103.89ms
step:1537/1770 train_time:159682ms step_avg:103.89ms
step:1538/1770 train_time:159793ms step_avg:103.90ms
step:1539/1770 train_time:159902ms step_avg:103.90ms
step:1540/1770 train_time:160013ms step_avg:103.90ms
step:1541/1770 train_time:160124ms step_avg:103.91ms
step:1542/1770 train_time:160231ms step_avg:103.91ms
step:1543/1770 train_time:160341ms step_avg:103.91ms
step:1544/1770 train_time:160451ms step_avg:103.92ms
step:1545/1770 train_time:160560ms step_avg:103.92ms
step:1546/1770 train_time:160670ms step_avg:103.93ms
step:1547/1770 train_time:160779ms step_avg:103.93ms
step:1548/1770 train_time:160888ms step_avg:103.93ms
step:1549/1770 train_time:160997ms step_avg:103.94ms
step:1550/1770 train_time:161106ms step_avg:103.94ms
step:1551/1770 train_time:161214ms step_avg:103.94ms
step:1552/1770 train_time:161324ms step_avg:103.95ms
step:1553/1770 train_time:161434ms step_avg:103.95ms
step:1554/1770 train_time:161542ms step_avg:103.95ms
step:1555/1770 train_time:161652ms step_avg:103.96ms
step:1556/1770 train_time:161760ms step_avg:103.96ms
step:1557/1770 train_time:161869ms step_avg:103.96ms
step:1558/1770 train_time:161978ms step_avg:103.97ms
step:1559/1770 train_time:162085ms step_avg:103.97ms
step:1560/1770 train_time:162194ms step_avg:103.97ms
step:1561/1770 train_time:162304ms step_avg:103.97ms
step:1562/1770 train_time:162412ms step_avg:103.98ms
step:1563/1770 train_time:162520ms step_avg:103.98ms
step:1564/1770 train_time:162629ms step_avg:103.98ms
step:1565/1770 train_time:162738ms step_avg:103.99ms
step:1566/1770 train_time:162847ms step_avg:103.99ms
step:1567/1770 train_time:162955ms step_avg:103.99ms
step:1568/1770 train_time:163064ms step_avg:103.99ms
step:1569/1770 train_time:163173ms step_avg:104.00ms
step:1570/1770 train_time:163282ms step_avg:104.00ms
step:1571/1770 train_time:163393ms step_avg:104.01ms
step:1572/1770 train_time:163501ms step_avg:104.01ms
step:1573/1770 train_time:163614ms step_avg:104.01ms
step:1574/1770 train_time:163721ms step_avg:104.02ms
step:1575/1770 train_time:163830ms step_avg:104.02ms
step:1576/1770 train_time:163939ms step_avg:104.02ms
step:1577/1770 train_time:164050ms step_avg:104.03ms
step:1578/1770 train_time:164159ms step_avg:104.03ms
step:1579/1770 train_time:164267ms step_avg:104.03ms
step:1580/1770 train_time:164376ms step_avg:104.04ms
step:1581/1770 train_time:164487ms step_avg:104.04ms
step:1582/1770 train_time:164598ms step_avg:104.04ms
step:1583/1770 train_time:164707ms step_avg:104.05ms
step:1584/1770 train_time:164817ms step_avg:104.05ms
step:1585/1770 train_time:164925ms step_avg:104.05ms
step:1586/1770 train_time:165036ms step_avg:104.06ms
step:1587/1770 train_time:165146ms step_avg:104.06ms
step:1588/1770 train_time:165255ms step_avg:104.07ms
step:1589/1770 train_time:165365ms step_avg:104.07ms
step:1590/1770 train_time:165475ms step_avg:104.07ms
step:1591/1770 train_time:165583ms step_avg:104.07ms
step:1592/1770 train_time:165694ms step_avg:104.08ms
step:1593/1770 train_time:165803ms step_avg:104.08ms
step:1594/1770 train_time:165911ms step_avg:104.08ms
step:1595/1770 train_time:166020ms step_avg:104.09ms
step:1596/1770 train_time:166129ms step_avg:104.09ms
step:1597/1770 train_time:166237ms step_avg:104.09ms
step:1598/1770 train_time:166347ms step_avg:104.10ms
step:1599/1770 train_time:166458ms step_avg:104.10ms
step:1600/1770 train_time:166568ms step_avg:104.11ms
step:1601/1770 train_time:166679ms step_avg:104.11ms
step:1602/1770 train_time:166787ms step_avg:104.11ms
step:1603/1770 train_time:166896ms step_avg:104.11ms
step:1604/1770 train_time:167003ms step_avg:104.12ms
step:1605/1770 train_time:167114ms step_avg:104.12ms
step:1606/1770 train_time:167223ms step_avg:104.12ms
step:1607/1770 train_time:167335ms step_avg:104.13ms
step:1608/1770 train_time:167445ms step_avg:104.13ms
step:1609/1770 train_time:167555ms step_avg:104.14ms
step:1610/1770 train_time:167666ms step_avg:104.14ms
step:1611/1770 train_time:167774ms step_avg:104.14ms
step:1612/1770 train_time:167884ms step_avg:104.15ms
step:1613/1770 train_time:167994ms step_avg:104.15ms
step:1614/1770 train_time:168102ms step_avg:104.15ms
step:1615/1770 train_time:168214ms step_avg:104.16ms
step:1616/1770 train_time:168323ms step_avg:104.16ms
step:1617/1770 train_time:168431ms step_avg:104.16ms
step:1618/1770 train_time:168543ms step_avg:104.17ms
step:1619/1770 train_time:168652ms step_avg:104.17ms
step:1620/1770 train_time:168764ms step_avg:104.18ms
step:1621/1770 train_time:168874ms step_avg:104.18ms
step:1622/1770 train_time:168982ms step_avg:104.18ms
step:1623/1770 train_time:169092ms step_avg:104.18ms
step:1624/1770 train_time:169201ms step_avg:104.19ms
step:1625/1770 train_time:169309ms step_avg:104.19ms
step:1625/1770 val_loss:3.3089 train_time:169348ms step_avg:104.21ms
step:1626/1770 train_time:169425ms step_avg:104.20ms
step:1627/1770 train_time:169533ms step_avg:104.20ms
step:1628/1770 train_time:169642ms step_avg:104.20ms
step:1629/1770 train_time:169751ms step_avg:104.21ms
step:1630/1770 train_time:169859ms step_avg:104.21ms
step:1631/1770 train_time:169967ms step_avg:104.21ms
step:1632/1770 train_time:170075ms step_avg:104.21ms
step:1633/1770 train_time:170184ms step_avg:104.22ms
step:1634/1770 train_time:170293ms step_avg:104.22ms
step:1635/1770 train_time:170402ms step_avg:104.22ms
step:1636/1770 train_time:170512ms step_avg:104.22ms
step:1637/1770 train_time:170621ms step_avg:104.23ms
step:1638/1770 train_time:170729ms step_avg:104.23ms
step:1639/1770 train_time:170839ms step_avg:104.23ms
step:1640/1770 train_time:170947ms step_avg:104.24ms
step:1641/1770 train_time:171056ms step_avg:104.24ms
step:1642/1770 train_time:171164ms step_avg:104.24ms
step:1643/1770 train_time:171274ms step_avg:104.24ms
step:1644/1770 train_time:171384ms step_avg:104.25ms
step:1645/1770 train_time:171492ms step_avg:104.25ms
step:1646/1770 train_time:171601ms step_avg:104.25ms
step:1647/1770 train_time:171711ms step_avg:104.26ms
step:1648/1770 train_time:171820ms step_avg:104.26ms
step:1649/1770 train_time:171928ms step_avg:104.26ms
step:1650/1770 train_time:172036ms step_avg:104.26ms
step:1651/1770 train_time:172143ms step_avg:104.27ms
step:1652/1770 train_time:172254ms step_avg:104.27ms
step:1653/1770 train_time:172361ms step_avg:104.27ms
step:1654/1770 train_time:172474ms step_avg:104.28ms
step:1655/1770 train_time:172584ms step_avg:104.28ms
step:1656/1770 train_time:172692ms step_avg:104.28ms
step:1657/1770 train_time:172801ms step_avg:104.29ms
step:1658/1770 train_time:172911ms step_avg:104.29ms
step:1659/1770 train_time:173020ms step_avg:104.29ms
step:1660/1770 train_time:173129ms step_avg:104.29ms
step:1661/1770 train_time:173239ms step_avg:104.30ms
step:1662/1770 train_time:173346ms step_avg:104.30ms
step:1663/1770 train_time:173454ms step_avg:104.30ms
step:1664/1770 train_time:173563ms step_avg:104.30ms
step:1665/1770 train_time:173672ms step_avg:104.31ms
step:1666/1770 train_time:173781ms step_avg:104.31ms
step:1667/1770 train_time:173889ms step_avg:104.31ms
step:1668/1770 train_time:173997ms step_avg:104.31ms
step:1669/1770 train_time:174106ms step_avg:104.32ms
step:1670/1770 train_time:174215ms step_avg:104.32ms
step:1671/1770 train_time:174325ms step_avg:104.32ms
step:1672/1770 train_time:174435ms step_avg:104.33ms
step:1673/1770 train_time:174543ms step_avg:104.33ms
step:1674/1770 train_time:174652ms step_avg:104.33ms
step:1675/1770 train_time:174761ms step_avg:104.33ms
step:1676/1770 train_time:174872ms step_avg:104.34ms
step:1677/1770 train_time:174981ms step_avg:104.34ms
step:1678/1770 train_time:175090ms step_avg:104.34ms
step:1679/1770 train_time:175199ms step_avg:104.35ms
step:1680/1770 train_time:175308ms step_avg:104.35ms
step:1681/1770 train_time:175418ms step_avg:104.35ms
step:1682/1770 train_time:175529ms step_avg:104.36ms
step:1683/1770 train_time:175637ms step_avg:104.36ms
step:1684/1770 train_time:175745ms step_avg:104.36ms
step:1685/1770 train_time:175854ms step_avg:104.36ms
step:1686/1770 train_time:175964ms step_avg:104.37ms
step:1687/1770 train_time:176075ms step_avg:104.37ms
step:1688/1770 train_time:176185ms step_avg:104.37ms
step:1689/1770 train_time:176292ms step_avg:104.38ms
step:1690/1770 train_time:176401ms step_avg:104.38ms
step:1691/1770 train_time:176510ms step_avg:104.38ms
step:1692/1770 train_time:176622ms step_avg:104.39ms
step:1693/1770 train_time:176730ms step_avg:104.39ms
step:1694/1770 train_time:176839ms step_avg:104.39ms
step:1695/1770 train_time:176947ms step_avg:104.39ms
step:1696/1770 train_time:177056ms step_avg:104.40ms
step:1697/1770 train_time:177167ms step_avg:104.40ms
step:1698/1770 train_time:177275ms step_avg:104.40ms
step:1699/1770 train_time:177383ms step_avg:104.40ms
step:1700/1770 train_time:177491ms step_avg:104.41ms
step:1701/1770 train_time:177600ms step_avg:104.41ms
step:1702/1770 train_time:177708ms step_avg:104.41ms
step:1703/1770 train_time:177817ms step_avg:104.41ms
step:1704/1770 train_time:177928ms step_avg:104.42ms
step:1705/1770 train_time:178037ms step_avg:104.42ms
step:1706/1770 train_time:178146ms step_avg:104.42ms
step:1707/1770 train_time:178257ms step_avg:104.43ms
step:1708/1770 train_time:178366ms step_avg:104.43ms
step:1709/1770 train_time:178477ms step_avg:104.43ms
step:1710/1770 train_time:178590ms step_avg:104.44ms
step:1711/1770 train_time:178704ms step_avg:104.44ms
step:1712/1770 train_time:178814ms step_avg:104.45ms
step:1713/1770 train_time:178923ms step_avg:104.45ms
step:1714/1770 train_time:179034ms step_avg:104.45ms
step:1715/1770 train_time:179145ms step_avg:104.46ms
step:1716/1770 train_time:179255ms step_avg:104.46ms
step:1717/1770 train_time:179364ms step_avg:104.46ms
step:1718/1770 train_time:179473ms step_avg:104.47ms
step:1719/1770 train_time:179583ms step_avg:104.47ms
step:1720/1770 train_time:179694ms step_avg:104.47ms
step:1721/1770 train_time:179805ms step_avg:104.48ms
step:1722/1770 train_time:179917ms step_avg:104.48ms
step:1723/1770 train_time:180027ms step_avg:104.48ms
step:1724/1770 train_time:180139ms step_avg:104.49ms
step:1725/1770 train_time:180252ms step_avg:104.49ms
step:1726/1770 train_time:180362ms step_avg:104.50ms
step:1727/1770 train_time:180472ms step_avg:104.50ms
step:1728/1770 train_time:180583ms step_avg:104.50ms
step:1729/1770 train_time:180695ms step_avg:104.51ms
step:1730/1770 train_time:180805ms step_avg:104.51ms
step:1731/1770 train_time:180916ms step_avg:104.52ms
step:1732/1770 train_time:181027ms step_avg:104.52ms
step:1733/1770 train_time:181138ms step_avg:104.52ms
step:1734/1770 train_time:181247ms step_avg:104.53ms
step:1735/1770 train_time:181356ms step_avg:104.53ms
step:1736/1770 train_time:181465ms step_avg:104.53ms
step:1737/1770 train_time:181575ms step_avg:104.53ms
step:1738/1770 train_time:181686ms step_avg:104.54ms
step:1739/1770 train_time:181797ms step_avg:104.54ms
step:1740/1770 train_time:181906ms step_avg:104.54ms
step:1741/1770 train_time:182019ms step_avg:104.55ms
step:1742/1770 train_time:182129ms step_avg:104.55ms
step:1743/1770 train_time:182239ms step_avg:104.55ms
step:1744/1770 train_time:182348ms step_avg:104.56ms
step:1745/1770 train_time:182459ms step_avg:104.56ms
step:1746/1770 train_time:182570ms step_avg:104.56ms
step:1747/1770 train_time:182678ms step_avg:104.57ms
step:1748/1770 train_time:182788ms step_avg:104.57ms
step:1749/1770 train_time:182899ms step_avg:104.57ms
step:1750/1770 train_time:183008ms step_avg:104.58ms
step:1750/1770 val_loss:3.2820 train_time:183048ms step_avg:104.60ms
step:1751/1770 train_time:183123ms step_avg:104.58ms
step:1752/1770 train_time:183232ms step_avg:104.58ms
step:1753/1770 train_time:183341ms step_avg:104.59ms
step:1754/1770 train_time:183450ms step_avg:104.59ms
step:1755/1770 train_time:183558ms step_avg:104.59ms
step:1756/1770 train_time:183669ms step_avg:104.60ms
step:1757/1770 train_time:183780ms step_avg:104.60ms
step:1758/1770 train_time:183888ms step_avg:104.60ms
step:1759/1770 train_time:183998ms step_avg:104.60ms
step:1760/1770 train_time:184108ms step_avg:104.61ms
step:1761/1770 train_time:184220ms step_avg:104.61ms
step:1762/1770 train_time:184330ms step_avg:104.61ms
step:1763/1770 train_time:184439ms step_avg:104.62ms
step:1764/1770 train_time:184548ms step_avg:104.62ms
step:1765/1770 train_time:184659ms step_avg:104.62ms
step:1766/1770 train_time:184770ms step_avg:104.63ms
step:1767/1770 train_time:184878ms step_avg:104.63ms
step:1768/1770 train_time:184989ms step_avg:104.63ms
step:1769/1770 train_time:185097ms step_avg:104.63ms
step:1770/1770 train_time:185208ms step_avg:104.64ms
step:1770/1770 val_loss:3.2790 train_time:185247ms step_avg:104.66ms
peak memory allocated: 31330 MiB reserved: 46752 MiB
