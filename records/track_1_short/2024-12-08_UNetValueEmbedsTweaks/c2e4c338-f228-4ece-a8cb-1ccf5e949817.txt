import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
from dataclasses import dataclass
from pathlib import Path

import torch
from torch import nn
import torch.nn.functional as F
import torch.distributed as dist
import torch._inductor.config as config
from torch.nn.parallel import DistributedDataParallel as DDP
# Use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention

# -----------------------------------------------------------------------------
# Muon optimizer

def zeropower_via_svd(G, steps=None):
    U, S, V = G.svd()
    return U @ V.T

@torch.compile
def zeropower_via_newtonschulz5(G, steps=10, eps=1e-7):
    """
    Newton-Schulz iteration to compute the zeroth power / orthogonalization of G. We opt to use a
    quintic iteration whose coefficients are selected to maximize the slope at zero. For the purpose
    of minimizing steps, it turns out to be empirically effective to keep increasing the slope at
    zero even beyond the point where the iteration no longer converges all the way to one everywhere
    on the interval. This iteration therefore does not produce UV^T but rather something like US'V^T
    where S' is diagonal with S_{ii}' ~ Uniform(0.5, 1.5), which turns out not to hurt model
    performance at all relative to UV^T, where USV^T = G is the SVD.
    """
    assert len(G.shape) == 2
    a, b, c = (3.4445, -4.7750,  2.0315)
    X = G.bfloat16()
    X /= (X.norm() + eps) # ensure top singular value <= 1
    if G.size(0) > G.size(1):
        X = X.T
    for _ in range(steps):
        A = X @ X.T
        B = b * A + c * A @ A # adapted from suggestion by @jxbz, @leloykun, and @YouJiacheng
        X = a * X + B @ X
    if G.size(0) > G.size(1):
        X = X.T
    return X

zeropower_backends = dict(svd=zeropower_via_svd, newtonschulz5=zeropower_via_newtonschulz5)

class Muon(torch.optim.Optimizer):
    """
    Muon - MomentUm Orthogonalized by Newton-schulz

    Muon internally runs standard SGD-momentum, and then performs an orthogonalization post-
    processing step, in which each 2D parameter's update is replaced with the nearest orthogonal
    matrix. To efficiently orthogonalize each update, we use a Newton-Schulz iteration, which has
    the advantage that it can be stably run in bfloat16 on the GPU.

    Some warnings:
    - This optimizer assumes that all parameters passed in are 2D.
    - It should not be used for the embedding layer, the final fully connected layer, or any {0,1}-D
    parameters; those should all be optimized by a standard method (e.g., AdamW).
    - To use it with 4D convolutional filters, it works well to just flatten their last 3 dimensions.
    - We believe it is unlikely to work well for training with small batch size.
    - We believe it may not work well for finetuning pretrained models, but we haven't tested this.
    - We have not yet tried this optimizer for training scenarios larger than NanoGPT (124M).

    Arguments:
        lr: The learning rate used by the internal SGD.
        momentum: The momentum used by the internal SGD.
        nesterov: Whether to use Nesterov-style momentum in the internal SGD. (recommended)
        backend: The chosen backend for the orthogonalization step. (recommended: 'newtonschulz5')
        backend_steps: The number of iteration steps to use in the backend, if it is iterative.
    """
    def __init__(self, params, lr=0.02, momentum=0.95, nesterov=True,
                 backend='newtonschulz5', backend_steps=5):
        self.num_process = int(os.environ['WORLD_SIZE'])
        self.rank = int(os.environ["RANK"])
        defaults = dict(lr=lr, momentum=momentum, nesterov=nesterov, backend=backend, backend_steps=backend_steps)
        params: "list[torch.Tensor]" = list(params)
        assert all(isinstance(p, torch.Tensor) for p in params)
        sizes = {p.numel() for p in params}
        param_groups = [
            {
                "params": [p for p in params if p.numel() == size],
                "update_buffer": [
                    torch.empty(size, device="cuda", dtype=torch.bfloat16)
                    for _ in range(self.num_process)
                ],
            }
            for size in sizes
        ]
        super().__init__(param_groups, defaults)

    def step(self):
        for group in self.param_groups:
            lr: float = group["lr"]
            momentum: float = group["momentum"]
            nesterov: bool = group["nesterov"]
            zeropower_backend = zeropower_backends[group["backend"]]
            backend_steps: int = group["backend_steps"]
            update_buffers: "list[torch.Tensor]" = group["update_buffer"]
            # generate weight updates in distributed fashion
            params: "list[torch.Tensor]" = group["params"]
            assert len(params) % self.num_process == 0
            handle = None
            params_world = None
            def update_prev():
                if params_world is None:
                    return
                assert handle is not None
                handle.wait()
                for p_world, g_world in zip(params_world, update_buffers):
                    p_world.data.add_(
                        g_world.view_as(p_world),
                        alpha=-lr * max(1, p_world.size(0) / p_world.size(1)) ** 0.5,
                    )
            for base_i in range(len(params))[::self.num_process]:
                p = params[base_i + self.rank]
                g = p.grad
                assert g is not None
                state = self.state[p] 
                if "momentum_buffer" not in state:
                    state["momentum_buffer"] = torch.zeros_like(g)
                buf: torch.Tensor = state["momentum_buffer"]
                buf.lerp_(g, 1 - momentum)
                g = g.lerp_(buf, momentum) if nesterov else buf
                g = zeropower_backend(g, steps=backend_steps).flatten()
                update_prev()
                handle = dist.all_gather(update_buffers, g, async_op=True)
                params_world = params[base_i : base_i + self.num_process]
            update_prev()


# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the GPT-2 model

def norm(x):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):

    def __init__(self, in_features, out_features):
        super().__init__(in_features, out_features, bias=False)

    def forward(self, x):
        return F.linear(x, self.weight.to(x.dtype))

class Rotary(torch.nn.Module):

    def __init__(self, dim, base=10000):
        super().__init__()
        self.register_buffer('inv_freq', (1 / base) ** (torch.arange(0, dim, 2) / dim))
        self.seq_len_cached = None
        self.cos_cached = None
        self.sin_cached = None

    def forward(self, x):
        seq_len = x.shape[1]
        if seq_len != self.seq_len_cached:
            t = torch.arange(seq_len, device=x.device)
            freqs = torch.outer(t, self.inv_freq)
            self.seq_len_cached = seq_len
            self.cos_cached = freqs.cos()
            self.sin_cached = freqs.sin()
        cos, sin = self.cos_cached[None, :, None, :], self.sin_cached[None, :, None, :]
        # apply_rotary_emb(x, cos, sin)
        x1, x2 = x.chunk(2, dim=3)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x)

class CausalSelfAttention(nn.Module):

    def __init__(self, dim, n_head):
        super().__init__()
        assert dim % n_head == 0
        self.n_head = n_head
        self.c_q = CastedLinear(dim, dim)
        self.c_k = CastedLinear(dim, dim)
        self.c_v = CastedLinear(dim, dim)
        # value residual lambda
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5])) # @Grad62304977
        # rotary embeddings
        self.rotary = Rotary(dim // n_head) # dim // n_head = head_dim
        # output projection
        self.c_proj = CastedLinear(dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor, vi: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q: torch.Tensor = self.c_q(x).view(B, T, self.n_head, -1)
        k: torch.Tensor = self.c_k(x).view(B, T, self.n_head, -1)
        v: torch.Tensor = self.c_v(x).view(B, T, self.n_head, -1)
        v = self.lambdas[0] * v + self.lambdas[1] * vi.view_as(v) # @Grad62304977
        q, k = norm(q), norm(k) # QK norm suggested by @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask)
        y = y.transpose(1, 2).contiguous().view_as(x) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):

    def __init__(self, dim: int):
        super().__init__()
        self.c_fc   = CastedLinear(dim, 4 * dim)
        self.c_proj = CastedLinear(4 * dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor) -> torch.Tensor:
        x = self.c_fc(x)
        x = F.relu(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.attn = CausalSelfAttention(config.n_embd, config.n_head)
        self.mlp = MLP(config.n_embd)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: torch.Tensor, vi: torch.Tensor, x0: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        x = x + self.attn(norm(x), vi, block_mask)
        x = x + self.mlp(norm(x))
        return x

# -----------------------------------------------------------------------------
# The main GPT-2 model

@dataclass
class GPTConfig:
    vocab_size : int = 50304
    n_layer : int = 12
    n_head : int = 6 # head dim 128 suggested by @Grad62304977
    n_embd : int = 768
    lm_head_softcap : int = 30

class GPT(nn.Module):

    def __init__(self, config: GPTConfig):
        super().__init__()
        self.n_layer = config.n_layer
        self.lm_head_softcap = config.lm_head_softcap

        # U-net design by @brendanh0gan
        self.num_encoder_layers = config.n_layer // 2 # Half of the layers for encoder
        self.num_decoder_layers = config.n_layer - self.num_encoder_layers # Remaining for decoder
        # Add learnable skip connection weights for decoder layers
        self.skip_weights = nn.Parameter(torch.ones(self.num_decoder_layers))

        self.transformer = nn.ModuleDict(dict(
            wte = nn.Embedding(config.vocab_size, config.n_embd),
            # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual learning
            # U-net structure on token value embeddings by @leloykun
            vte = nn.Embedding(config.vocab_size, config.n_embd*self.num_encoder_layers),
            h = nn.ModuleList([Block(config) for _ in range(config.n_layer)]),
        ))
        self.lm_head = CastedLinear(config.n_embd, config.vocab_size)
        self.lm_head.weight.data.zero_() # @Grad62304977

    def forward(self, idx: torch.Tensor, target: torch.Tensor, sliding_window: torch.Tensor) -> torch.Tensor:
        BLOCK_SIZE = 128
        assert idx.ndim == 1
        docs = (idx == 50256).cumsum(0)
        docs_low = docs.reshape(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.reshape(-1, BLOCK_SIZE)[:, -1].contiguous()
        def document_sliding_window_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            window_mask = q_idx - kv_idx < sliding_window
            return causal_mask & document_mask & window_mask

        S = len(idx)
        def create_sliding_window_causal_mask(S: int, sliding_window: torch.Tensor):
            kv_idx = block_idx = torch.arange(S // BLOCK_SIZE, dtype=torch.int32, device="cuda")
            q_idx = block_idx[:, None]
            causal_mask = q_idx >= kv_idx
            document_mask = (docs_low[q_idx] <= docs_high[kv_idx]) & (docs_low[kv_idx] <= docs_high[q_idx])
            window_mask = q_idx - kv_idx < ((sliding_window + BLOCK_SIZE - 1) // BLOCK_SIZE)
            dense_mask = causal_mask & document_mask & window_mask
            dense_mask = dense_mask.to(torch.int32)
            num_blocks = dense_mask.sum(dim=-1).to(torch.int32)
            indices = torch.argsort(dense_mask, dim=-1, descending=True, stable=True).to(torch.int32)
            num_blocks = num_blocks[None, None, :].contiguous()
            indices = indices[None, None, :].contiguous()
            return BlockMask.from_kv_blocks(num_blocks, indices, BLOCK_SIZE=BLOCK_SIZE, mask_mod=document_sliding_window_causal)
        block_mask = create_sliding_window_causal_mask(S, sliding_window)

        # forward the GPT model itself
        x = self.transformer.wte(idx[None]) # token embeddings of shape (b, t, n_embd)
        x = norm(x) # @Grad62304977
        x0 = x
        vi = self.transformer.vte(idx[None]).chunk(self.num_encoder_layers, dim=-1)

        # Store outputs for U-Net skip connections
        skip_connections = []
        # Encoder pass - process only the first half of the blocks
        for i in range(self.num_encoder_layers):
            x = self.transformer.h[i](x, vi[i], x0, block_mask)
            skip_connections.append(x)
        # Decoder pass - process the remaining blocks with weighted skip connections
        for i in range(self.num_decoder_layers):
            x = x + self.skip_weights[i] * skip_connections.pop()
            # U-net structure on token value embeddings by @leloykun
            x = self.transformer.h[self.num_encoder_layers + i](x, vi[self.num_encoder_layers-1-i], x0, block_mask)

        x = norm(x)
        logits = self.lm_head(x)
        logits = self.lm_head_softcap * torch.tanh(logits / self.lm_head_softcap) # @Grad62304977
        logits = logits.float()
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target.view(-1))
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _peek_data_shard(file: Path):
    # only reads the header, returns header data
    # header is 256 int32
    header = torch.from_file(f"{file}", False, 256, dtype=torch.int32)
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    return int(header[2]) # number of tokens (claimed)

def _load_data_shard(file: Path, ntok: int):
    with file.open("rb") as f:
        tokens = torch.empty(ntok, dtype=torch.uint16, pin_memory=True)
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy())
        assert nbytes == 2 * ntok, "number of tokens read does not match header?"
    return tokens

class DistributedDataLoader:
    def __init__(self, filename_pattern, T, process_rank, num_processes):
        self.process_rank = process_rank
        self.num_processes = num_processes
        self.T = T

        # glob files that match the pattern
        self.files = sorted(Path.cwd().glob(filename_pattern))
        assert len(self.files) > 0, f"did not find any files that match the pattern {filename_pattern}"

        # load and validate all data shards, count number of tokens in total
        self.ntoks = [_peek_data_shard(file) for file in self.files]
        assert min(self.ntoks) >= num_processes * T + 1
        self.ntok_total = sum(self.ntoks)

        self.reset()

    def reset(self):
        self.current_shard = -1
        self.advance()

    def advance(self): # advance to next data shard
        self.current_shard = (self.current_shard + 1) % len(self.files)
        self.current_position = self.process_rank * self.T
        self.tokens = _load_data_shard(self.files[self.current_shard], self.ntoks[self.current_shard])

    def next_batch(self):
        batch_size = self.T * self.num_processes
        buf = self.tokens[self.current_position:self.current_position+self.T+1]
        # host side async is sufficient;
        # no performance improvement was observed when introducing a separate stream.
        x = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # inputs
        y = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # targets
        # advance current position and load next shard if necessary
        self.current_position += batch_size
        if self.current_position + batch_size + 1 >= len(self.tokens):
            self.advance()
        return x, y

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data hyperparams
    input_bin : str = 'data/fineweb10B/fineweb_train_*.bin' # input .bin to train on
    input_val_bin : str = 'data/fineweb10B/fineweb_val_*.bin' # input .bin to eval validation loss on
    # optimization hyperparams
    batch_size : int = 8 # batch size, in sequences, across all devices
    sequence_length : int = 64*1024 # sequence length, in tokens
    num_iterations : int = 1480 # number of iterations to run
    warmup_iters : int = 0
    cooldown_iters : int = 600 # number of iterations of linear warmup/cooldown for triangular or trapezoidal schedule
    weight_decay : float = 0
    # evaluation and logging hyperparams
    val_loss_every : int = 125 # every how many steps to evaluate val loss? 0 for only at the end
    val_tokens : int = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    save_every : int = 0 # every how many steps to save the checkpoint? 0 for only at the end
args = Hyperparameters()

# set up DDP (distributed data parallel). torchrun sets this env variable
assert torch.cuda.is_available()
dist.init_process_group(backend='nccl')
ddp_rank = int(os.environ['RANK'])
ddp_local_rank = int(os.environ['LOCAL_RANK'])
ddp_world_size = int(os.environ['WORLD_SIZE'])
device = f'cuda:{ddp_local_rank}'
torch.cuda.set_device(device)
print(f"using device: {device}")
master_process = (ddp_rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = str(uuid.uuid4())
    logdir = 'logs/%s/' % run_id
    # os.makedirs(logdir, exist_ok=True)
    logfile = 'logs/%s.txt' % run_id
    # create the log file
    with open(logfile, "w") as f:
        # begin the log by printing this file (the Python code)
        f.write(code)
        f.write('='*100 + '\n')
def print0(s, logonly=False):
    if master_process:
        with open(logfile, "a") as f:
            if not logonly:
                print(s)
            f.write(s+'\n')
# log information about the hardware/software environment this is running on
# and print the full `nvidia-smi` to file
print0(f"Running pytorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}\nnvidia-smi:")
import subprocess
result = subprocess.run(['nvidia-smi'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
print0(f'{result.stdout}', logonly=True)
print0('='*100, logonly=True)

# convenience variables
T = args.sequence_length
# calculate the number of steps to take in the val loop.
assert args.val_tokens % (T * ddp_world_size) == 0
val_steps = args.val_tokens // (T * ddp_world_size)
# calculate the steps of gradient accumulation required to attain the desired global batch size.
assert args.batch_size % (ddp_world_size) == 0
train_accumulation_steps = args.batch_size // ddp_world_size
assert train_accumulation_steps == 1

# load tokens
train_loader = DistributedDataLoader(args.input_bin, T, ddp_rank, ddp_world_size)
val_loader = DistributedDataLoader(args.input_val_bin, T, ddp_rank, ddp_world_size)
print0(f"Training DataLoader: total number of tokens: {train_loader.ntok_total} across {len(train_loader.files)} files")
print0(f"Validation DataLoader: total number of tokens: {val_loader.ntok_total} across {len(val_loader.files)} files")
print0('='*100, logonly=True)
x, y = train_loader.next_batch()

# there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency. suggested to me by @Grad62304977.
# this originates from Karpathy's experiments.
num_vocab = 50304
model = GPT(GPTConfig(vocab_size=num_vocab, n_layer=12, n_head=6, n_embd=768))
model = model.cuda().bfloat16()
for m in model.modules():
    if isinstance(m, CastedLinear):
        m.float()
if hasattr(config, "coordinate_descent_tuning"):
    config.coordinate_descent_tuning = True # suggested by @Chillee
model = torch.compile(model)
# here we wrap model into DDP container
model = DDP(model, device_ids=[ddp_local_rank])
raw_model = model.module # always contains the "raw" unwrapped model

# init the optimizer(s)
optimizer1 = torch.optim.Adam([raw_model.transformer.wte.weight, raw_model.transformer.vte.weight], lr=0.6, betas=(0.8, 0.95), fused=True)
optimizer2 = torch.optim.Adam([raw_model.lm_head.weight], lr=0.008, betas=(0.8, 0.95), fused=True)
params = list(raw_model.transformer.h.parameters())
matrix_params = [p for p in params if p.ndim == 2]
scalar_params = [p for p in params if p.ndim < 2] + [raw_model.skip_weights]
optimizer3 = Muon(matrix_params, lr=0.05, momentum=0.95)
optimizer4 = torch.optim.Adam(scalar_params, lr=0.04, betas=(0.8, 0.95), fused=True)
optimizers = [optimizer1, optimizer2, optimizer3, optimizer4]
# learning rate decay scheduler (linear warmup and cooldown)
def get_lr(it):
    assert it <= args.num_iterations
    # 1) linear warmup for warmup_iters steps
    if it < args.warmup_iters:
        return (it+1) / args.warmup_iters
    # 2) constant lr for a while
    elif it < args.num_iterations - args.cooldown_iters:
        return 1.0
    # 3) linear cooldown
    else:
        decay_ratio = (args.num_iterations - it) / args.cooldown_iters
        return decay_ratio
schedulers = [torch.optim.lr_scheduler.LambdaLR(opt, get_lr) for opt in optimizers]

sliding_window_size = torch.tensor(64, dtype=torch.int32, device="cuda")
sw_size_prev = 64
# Start training loop
training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
for step in range(args.num_iterations + 1):
    last_step = (step == args.num_iterations)
    # This effectively ignores timing first 10 steps, which are slower for weird reasons.
    # Alternately, and slightly more correctly in terms of benchmarking, we could do 10
    # steps with dummy data first, and then re-initialize the model and reset the loader.
    if step == 10:
        training_time_ms = 0
        t0 = time.perf_counter()
    timed_steps = float('nan') if step <= 11 else (step - 10) + 1 # <= 11 to avoid bug in val

    # Set the sliding window size for the current step, in chunks of 64. By @fernbear.bsky.social
    sw_size =  64 * int((64 + (1792 - 64) * step / args.num_iterations) // 64)
    if sw_size != sw_size_prev:
        sliding_window_size.copy_(sw_size, non_blocking=True)
        sw_size_prev = sw_size

    # once in a while evaluate the validation dataset
    if (last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # run validation batches
        model.eval()
        val_loader.reset()
        val_loss = 0.0
        for _ in range(val_steps):
            with torch.no_grad():
                x_val, y_val = val_loader.next_batch()
                val_loss += model(x_val, y_val, sliding_window=sliding_window_size)
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        val_loss /= val_steps
        # log val loss to console and to logfile
        print0(f'step:{step}/{args.num_iterations} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/(timed_steps-1):.2f}ms')
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if master_process and (last_step or (args.save_every > 0 and step % args.save_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # save the state of the training process
        log = dict(step=step, code=code, model=raw_model.state_dict(), optimizers=[opt.state_dict() for opt in optimizers])
        # torch.save(log, 'logs/%s/state_step%06d.pt' % (run_id, step))
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    # bit confusing: we want to make sure to eval on 0th iteration
    # but also after the very last iteration. so we loop for step <= num_iterations
    # instead of just < num_iterations (one extra due to <=), only to do
    # the validation/sampling one last time, and then we break right here as we're done.
    if last_step:
        break

    # --------------- TRAINING SECTION BEGIN -----------------
    model.train()
    loss = model(x, y, sliding_window=sliding_window_size)
    loss.backward()
    del loss
    # advance the dataset for the next batch
    x, y = train_loader.next_batch()
    # momentum warmup for Muon
    frac = min(step/300, 1)
    for group in optimizer3.param_groups:
        group['momentum'] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizers and schedulers
    for opt, sched in zip(optimizers, schedulers):
        opt.step()
        sched.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # --------------- TRAINING SECTION END -------------------
    # everything that follows now is just diagnostics, prints, logging, etc.
    approx_time = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{args.num_iterations} train_time:{approx_time:.0f}ms step_avg:{approx_time/timed_steps:.2f}ms")

if master_process:
    print(f"peak memory consumption: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB")

# -------------------------------------------------------------------------
# clean up nice
dist.destroy_process_group()
====================================================================================================
Running pytorch 2.6.0.dev20241203+cu124 compiled for CUDA 12.4
nvidia-smi:
Sun Dec  8 11:36:02 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.6     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA H100 80GB HBM3          On  | 00000000:65:02.0 Off |                    0 |
| N/A   36C    P0              74W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  | 00000000:67:02.0 Off |                    0 |
| N/A   45C    P0              97W / 700W |     27MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  | 00000000:69:02.0 Off |                    0 |
| N/A   46C    P0              99W / 700W |     26MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  | 00000000:6B:02.0 Off |                    0 |
| N/A   39C    P0             118W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  | 00000000:6F:02.0 Off |                    0 |
| N/A   39C    P0             117W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  | 00000000:71:02.0 Off |                    0 |
| N/A   45C    P0              79W / 700W |     26MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  | 00000000:73:02.0 Off |                    0 |
| N/A   46C    P0             112W / 700W |     27MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  | 00000000:75:02.0 Off |                    0 |
| N/A   38C    P0             118W / 700W |    533MiB / 81559MiB |      2%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
+---------------------------------------------------------------------------------------+

====================================================================================================
Training DataLoader: total number of tokens: 3200000000 across 32 files
Validation DataLoader: total number of tokens: 100000000 across 1 files
====================================================================================================
step:0/1480 val_loss:10.8258 train_time:0ms step_avg:nanms
step:1/1480 train_time:23883ms step_avg:nanms
step:2/1480 train_time:23971ms step_avg:nanms
step:3/1480 train_time:24109ms step_avg:nanms
step:4/1480 train_time:24249ms step_avg:nanms
step:5/1480 train_time:24390ms step_avg:nanms
step:6/1480 train_time:24530ms step_avg:nanms
step:7/1480 train_time:24670ms step_avg:nanms
step:8/1480 train_time:24813ms step_avg:nanms
step:9/1480 train_time:24959ms step_avg:nanms
step:10/1480 train_time:25104ms step_avg:nanms
step:11/1480 train_time:141ms step_avg:nanms
step:12/1480 train_time:283ms step_avg:nanms
step:13/1480 train_time:423ms step_avg:141.04ms
step:14/1480 train_time:564ms step_avg:140.91ms
step:15/1480 train_time:705ms step_avg:141.09ms
step:16/1480 train_time:849ms step_avg:141.47ms
step:17/1480 train_time:993ms step_avg:141.88ms
step:18/1480 train_time:1137ms step_avg:142.15ms
step:19/1480 train_time:1280ms step_avg:142.21ms
step:20/1480 train_time:1422ms step_avg:142.21ms
step:21/1480 train_time:1563ms step_avg:142.08ms
step:22/1480 train_time:1705ms step_avg:142.05ms
step:23/1480 train_time:1848ms step_avg:142.18ms
step:24/1480 train_time:1992ms step_avg:142.27ms
step:25/1480 train_time:2136ms step_avg:142.38ms
step:26/1480 train_time:2279ms step_avg:142.45ms
step:27/1480 train_time:2421ms step_avg:142.43ms
step:28/1480 train_time:2563ms step_avg:142.39ms
step:29/1480 train_time:2704ms step_avg:142.32ms
step:30/1480 train_time:2848ms step_avg:142.38ms
step:31/1480 train_time:2991ms step_avg:142.41ms
step:32/1480 train_time:3133ms step_avg:142.41ms
step:33/1480 train_time:3277ms step_avg:142.48ms
step:34/1480 train_time:3419ms step_avg:142.47ms
step:35/1480 train_time:3560ms step_avg:142.41ms
step:36/1480 train_time:3702ms step_avg:142.39ms
step:37/1480 train_time:3843ms step_avg:142.34ms
step:38/1480 train_time:3984ms step_avg:142.30ms
step:39/1480 train_time:4126ms step_avg:142.27ms
step:40/1480 train_time:4267ms step_avg:142.25ms
step:41/1480 train_time:4410ms step_avg:142.27ms
step:42/1480 train_time:4552ms step_avg:142.26ms
step:43/1480 train_time:4696ms step_avg:142.30ms
step:44/1480 train_time:4839ms step_avg:142.32ms
step:45/1480 train_time:4983ms step_avg:142.37ms
step:46/1480 train_time:5124ms step_avg:142.34ms
step:47/1480 train_time:5266ms step_avg:142.32ms
step:48/1480 train_time:5408ms step_avg:142.32ms
step:49/1480 train_time:5551ms step_avg:142.32ms
step:50/1480 train_time:5693ms step_avg:142.34ms
step:51/1480 train_time:5837ms step_avg:142.37ms
step:52/1480 train_time:5980ms step_avg:142.38ms
step:53/1480 train_time:6123ms step_avg:142.39ms
step:54/1480 train_time:6265ms step_avg:142.38ms
step:55/1480 train_time:6407ms step_avg:142.37ms
step:56/1480 train_time:6549ms step_avg:142.37ms
step:57/1480 train_time:6692ms step_avg:142.37ms
step:58/1480 train_time:6834ms step_avg:142.38ms
step:59/1480 train_time:6978ms step_avg:142.41ms
step:60/1480 train_time:7120ms step_avg:142.39ms
step:61/1480 train_time:7261ms step_avg:142.37ms
step:62/1480 train_time:7403ms step_avg:142.37ms
step:63/1480 train_time:7545ms step_avg:142.36ms
step:64/1480 train_time:7687ms step_avg:142.35ms
step:65/1480 train_time:7829ms step_avg:142.34ms
step:66/1480 train_time:7972ms step_avg:142.35ms
step:67/1480 train_time:8116ms step_avg:142.38ms
step:68/1480 train_time:8259ms step_avg:142.40ms
step:69/1480 train_time:8401ms step_avg:142.39ms
step:70/1480 train_time:8542ms step_avg:142.37ms
step:71/1480 train_time:8685ms step_avg:142.37ms
step:72/1480 train_time:8826ms step_avg:142.36ms
step:73/1480 train_time:8968ms step_avg:142.34ms
step:74/1480 train_time:9110ms step_avg:142.34ms
step:75/1480 train_time:9254ms step_avg:142.37ms
step:76/1480 train_time:9397ms step_avg:142.38ms
step:77/1480 train_time:9540ms step_avg:142.39ms
step:78/1480 train_time:9682ms step_avg:142.38ms
step:79/1480 train_time:9823ms step_avg:142.37ms
step:80/1480 train_time:9966ms step_avg:142.38ms
step:81/1480 train_time:10109ms step_avg:142.38ms
step:82/1480 train_time:10252ms step_avg:142.39ms
step:83/1480 train_time:10396ms step_avg:142.41ms
step:84/1480 train_time:10539ms step_avg:142.42ms
step:85/1480 train_time:10681ms step_avg:142.41ms
step:86/1480 train_time:10822ms step_avg:142.40ms
step:87/1480 train_time:10963ms step_avg:142.37ms
step:88/1480 train_time:11105ms step_avg:142.37ms
step:89/1480 train_time:11246ms step_avg:142.35ms
step:90/1480 train_time:11387ms step_avg:142.34ms
step:91/1480 train_time:11529ms step_avg:142.33ms
step:92/1480 train_time:11672ms step_avg:142.34ms
step:93/1480 train_time:11815ms step_avg:142.35ms
step:94/1480 train_time:11958ms step_avg:142.35ms
step:95/1480 train_time:12100ms step_avg:142.36ms
step:96/1480 train_time:12243ms step_avg:142.36ms
step:97/1480 train_time:12385ms step_avg:142.36ms
step:98/1480 train_time:12526ms step_avg:142.34ms
step:99/1480 train_time:12669ms step_avg:142.35ms
step:100/1480 train_time:12813ms step_avg:142.37ms
step:101/1480 train_time:12956ms step_avg:142.37ms
step:102/1480 train_time:13099ms step_avg:142.38ms
step:103/1480 train_time:13241ms step_avg:142.38ms
step:104/1480 train_time:13384ms step_avg:142.38ms
step:105/1480 train_time:13525ms step_avg:142.37ms
step:106/1480 train_time:13668ms step_avg:142.37ms
step:107/1480 train_time:13811ms step_avg:142.39ms
step:108/1480 train_time:13955ms step_avg:142.40ms
step:109/1480 train_time:14099ms step_avg:142.41ms
step:110/1480 train_time:14240ms step_avg:142.40ms
step:111/1480 train_time:14385ms step_avg:142.42ms
step:112/1480 train_time:14530ms step_avg:142.45ms
step:113/1480 train_time:14678ms step_avg:142.50ms
step:114/1480 train_time:14825ms step_avg:142.54ms
step:115/1480 train_time:14971ms step_avg:142.58ms
step:116/1480 train_time:15120ms step_avg:142.64ms
step:117/1480 train_time:15266ms step_avg:142.67ms
step:118/1480 train_time:15412ms step_avg:142.71ms
step:119/1480 train_time:15560ms step_avg:142.75ms
step:120/1480 train_time:15706ms step_avg:142.78ms
step:121/1480 train_time:15853ms step_avg:142.82ms
step:122/1480 train_time:16002ms step_avg:142.87ms
step:123/1480 train_time:16146ms step_avg:142.89ms
step:124/1480 train_time:16292ms step_avg:142.91ms
step:125/1480 train_time:16439ms step_avg:142.95ms
step:125/1480 val_loss:4.4171 train_time:16497ms step_avg:143.45ms
step:126/1480 train_time:16594ms step_avg:143.05ms
step:127/1480 train_time:16743ms step_avg:143.10ms
step:128/1480 train_time:16890ms step_avg:143.13ms
step:129/1480 train_time:17036ms step_avg:143.16ms
step:130/1480 train_time:17181ms step_avg:143.18ms
step:131/1480 train_time:17328ms step_avg:143.20ms
step:132/1480 train_time:17474ms step_avg:143.23ms
step:133/1480 train_time:17622ms step_avg:143.27ms
step:134/1480 train_time:17771ms step_avg:143.31ms
step:135/1480 train_time:17917ms step_avg:143.34ms
step:136/1480 train_time:18064ms step_avg:143.36ms
step:137/1480 train_time:18211ms step_avg:143.40ms
step:138/1480 train_time:18357ms step_avg:143.41ms
step:139/1480 train_time:18503ms step_avg:143.43ms
step:140/1480 train_time:18651ms step_avg:143.47ms
step:141/1480 train_time:18797ms step_avg:143.49ms
step:142/1480 train_time:18946ms step_avg:143.53ms
step:143/1480 train_time:19093ms step_avg:143.56ms
step:144/1480 train_time:19240ms step_avg:143.58ms
step:145/1480 train_time:19387ms step_avg:143.61ms
step:146/1480 train_time:19534ms step_avg:143.63ms
step:147/1480 train_time:19680ms step_avg:143.65ms
step:148/1480 train_time:19826ms step_avg:143.67ms
step:149/1480 train_time:19973ms step_avg:143.69ms
step:150/1480 train_time:20119ms step_avg:143.71ms
step:151/1480 train_time:20266ms step_avg:143.73ms
step:152/1480 train_time:20413ms step_avg:143.75ms
step:153/1480 train_time:20559ms step_avg:143.77ms
step:154/1480 train_time:20706ms step_avg:143.79ms
step:155/1480 train_time:20853ms step_avg:143.81ms
step:156/1480 train_time:20998ms step_avg:143.82ms
step:157/1480 train_time:21146ms step_avg:143.85ms
step:158/1480 train_time:21293ms step_avg:143.87ms
step:159/1480 train_time:21440ms step_avg:143.89ms
step:160/1480 train_time:21587ms step_avg:143.91ms
step:161/1480 train_time:21735ms step_avg:143.94ms
step:162/1480 train_time:21883ms step_avg:143.96ms
step:163/1480 train_time:22031ms step_avg:143.99ms
step:164/1480 train_time:22176ms step_avg:144.00ms
step:165/1480 train_time:22323ms step_avg:144.02ms
step:166/1480 train_time:22470ms step_avg:144.04ms
step:167/1480 train_time:22616ms step_avg:144.05ms
step:168/1480 train_time:22763ms step_avg:144.07ms
step:169/1480 train_time:22911ms step_avg:144.09ms
step:170/1480 train_time:23056ms step_avg:144.10ms
step:171/1480 train_time:23205ms step_avg:144.13ms
step:172/1480 train_time:23352ms step_avg:144.15ms
step:173/1480 train_time:23500ms step_avg:144.17ms
step:174/1480 train_time:23648ms step_avg:144.20ms
step:175/1480 train_time:23795ms step_avg:144.21ms
step:176/1480 train_time:23942ms step_avg:144.23ms
step:177/1480 train_time:24089ms step_avg:144.25ms
step:178/1480 train_time:24236ms step_avg:144.26ms
step:179/1480 train_time:24383ms step_avg:144.28ms
step:180/1480 train_time:24530ms step_avg:144.30ms
step:181/1480 train_time:24676ms step_avg:144.31ms
step:182/1480 train_time:24823ms step_avg:144.32ms
step:183/1480 train_time:24970ms step_avg:144.34ms
step:184/1480 train_time:25117ms step_avg:144.35ms
step:185/1480 train_time:25262ms step_avg:144.36ms
step:186/1480 train_time:25411ms step_avg:144.38ms
step:187/1480 train_time:25557ms step_avg:144.39ms
step:188/1480 train_time:25703ms step_avg:144.40ms
step:189/1480 train_time:25850ms step_avg:144.41ms
step:190/1480 train_time:25996ms step_avg:144.42ms
step:191/1480 train_time:26144ms step_avg:144.44ms
step:192/1480 train_time:26291ms step_avg:144.45ms
step:193/1480 train_time:26436ms step_avg:144.46ms
step:194/1480 train_time:26583ms step_avg:144.48ms
step:195/1480 train_time:26730ms step_avg:144.49ms
step:196/1480 train_time:26875ms step_avg:144.49ms
step:197/1480 train_time:27022ms step_avg:144.50ms
step:198/1480 train_time:27169ms step_avg:144.51ms
step:199/1480 train_time:27315ms step_avg:144.52ms
step:200/1480 train_time:27461ms step_avg:144.53ms
step:201/1480 train_time:27610ms step_avg:144.55ms
step:202/1480 train_time:27756ms step_avg:144.56ms
step:203/1480 train_time:27902ms step_avg:144.57ms
step:204/1480 train_time:28049ms step_avg:144.58ms
step:205/1480 train_time:28195ms step_avg:144.59ms
step:206/1480 train_time:28341ms step_avg:144.60ms
step:207/1480 train_time:28489ms step_avg:144.61ms
step:208/1480 train_time:28636ms step_avg:144.63ms
step:209/1480 train_time:28782ms step_avg:144.63ms
step:210/1480 train_time:28929ms step_avg:144.64ms
step:211/1480 train_time:29075ms step_avg:144.65ms
step:212/1480 train_time:29221ms step_avg:144.66ms
step:213/1480 train_time:29369ms step_avg:144.68ms
step:214/1480 train_time:29515ms step_avg:144.68ms
step:215/1480 train_time:29662ms step_avg:144.69ms
step:216/1480 train_time:29810ms step_avg:144.71ms
step:217/1480 train_time:29956ms step_avg:144.71ms
step:218/1480 train_time:30104ms step_avg:144.73ms
step:219/1480 train_time:30252ms step_avg:144.75ms
step:220/1480 train_time:30398ms step_avg:144.75ms
step:221/1480 train_time:30548ms step_avg:144.78ms
step:222/1480 train_time:30698ms step_avg:144.80ms
step:223/1480 train_time:30849ms step_avg:144.83ms
step:224/1480 train_time:30999ms step_avg:144.85ms
step:225/1480 train_time:31150ms step_avg:144.88ms
step:226/1480 train_time:31300ms step_avg:144.91ms
step:227/1480 train_time:31452ms step_avg:144.94ms
step:228/1480 train_time:31602ms step_avg:144.96ms
step:229/1480 train_time:31753ms step_avg:144.99ms
step:230/1480 train_time:31901ms step_avg:145.00ms
step:231/1480 train_time:32052ms step_avg:145.03ms
step:232/1480 train_time:32204ms step_avg:145.06ms
step:233/1480 train_time:32355ms step_avg:145.09ms
step:234/1480 train_time:32504ms step_avg:145.11ms
step:235/1480 train_time:32656ms step_avg:145.14ms
step:236/1480 train_time:32808ms step_avg:145.17ms
step:237/1480 train_time:32957ms step_avg:145.18ms
step:238/1480 train_time:33107ms step_avg:145.21ms
step:239/1480 train_time:33258ms step_avg:145.23ms
step:240/1480 train_time:33409ms step_avg:145.25ms
step:241/1480 train_time:33558ms step_avg:145.27ms
step:242/1480 train_time:33710ms step_avg:145.30ms
step:243/1480 train_time:33860ms step_avg:145.32ms
step:244/1480 train_time:34010ms step_avg:145.34ms
step:245/1480 train_time:34159ms step_avg:145.36ms
step:246/1480 train_time:34311ms step_avg:145.39ms
step:247/1480 train_time:34461ms step_avg:145.40ms
step:248/1480 train_time:34611ms step_avg:145.43ms
step:249/1480 train_time:34760ms step_avg:145.44ms
step:250/1480 train_time:34911ms step_avg:145.46ms
step:250/1480 val_loss:3.9960 train_time:34970ms step_avg:145.71ms
step:251/1480 train_time:35070ms step_avg:145.52ms
step:252/1480 train_time:35223ms step_avg:145.55ms
step:253/1480 train_time:35373ms step_avg:145.57ms
step:254/1480 train_time:35522ms step_avg:145.58ms
step:255/1480 train_time:35672ms step_avg:145.60ms
step:256/1480 train_time:35821ms step_avg:145.61ms
step:257/1480 train_time:35972ms step_avg:145.64ms
step:258/1480 train_time:36124ms step_avg:145.66ms
step:259/1480 train_time:36275ms step_avg:145.68ms
step:260/1480 train_time:36425ms step_avg:145.70ms
step:261/1480 train_time:36576ms step_avg:145.72ms
step:262/1480 train_time:36725ms step_avg:145.73ms
step:263/1480 train_time:36876ms step_avg:145.76ms
step:264/1480 train_time:37027ms step_avg:145.78ms
step:265/1480 train_time:37178ms step_avg:145.80ms
step:266/1480 train_time:37329ms step_avg:145.81ms
step:267/1480 train_time:37479ms step_avg:145.83ms
step:268/1480 train_time:37629ms step_avg:145.85ms
step:269/1480 train_time:37779ms step_avg:145.87ms
step:270/1480 train_time:37930ms step_avg:145.88ms
step:271/1480 train_time:38080ms step_avg:145.90ms
step:272/1480 train_time:38232ms step_avg:145.92ms
step:273/1480 train_time:38382ms step_avg:145.94ms
step:274/1480 train_time:38532ms step_avg:145.96ms
step:275/1480 train_time:38682ms step_avg:145.97ms
step:276/1480 train_time:38833ms step_avg:145.99ms
step:277/1480 train_time:38982ms step_avg:146.00ms
step:278/1480 train_time:39134ms step_avg:146.02ms
step:279/1480 train_time:39284ms step_avg:146.04ms
step:280/1480 train_time:39435ms step_avg:146.06ms
step:281/1480 train_time:39585ms step_avg:146.07ms
step:282/1480 train_time:39737ms step_avg:146.09ms
step:283/1480 train_time:39887ms step_avg:146.11ms
step:284/1480 train_time:40037ms step_avg:146.12ms
step:285/1480 train_time:40188ms step_avg:146.14ms
step:286/1480 train_time:40338ms step_avg:146.15ms
step:287/1480 train_time:40487ms step_avg:146.16ms
step:288/1480 train_time:40639ms step_avg:146.18ms
step:289/1480 train_time:40790ms step_avg:146.20ms
step:290/1480 train_time:40940ms step_avg:146.22ms
step:291/1480 train_time:41091ms step_avg:146.23ms
step:292/1480 train_time:41241ms step_avg:146.25ms
step:293/1480 train_time:41392ms step_avg:146.26ms
step:294/1480 train_time:41542ms step_avg:146.28ms
step:295/1480 train_time:41693ms step_avg:146.29ms
step:296/1480 train_time:41844ms step_avg:146.31ms
step:297/1480 train_time:41995ms step_avg:146.32ms
step:298/1480 train_time:42145ms step_avg:146.34ms
step:299/1480 train_time:42296ms step_avg:146.35ms
step:300/1480 train_time:42447ms step_avg:146.37ms
step:301/1480 train_time:42597ms step_avg:146.38ms
step:302/1480 train_time:42748ms step_avg:146.40ms
step:303/1480 train_time:42899ms step_avg:146.41ms
step:304/1480 train_time:43050ms step_avg:146.43ms
step:305/1480 train_time:43200ms step_avg:146.44ms
step:306/1480 train_time:43351ms step_avg:146.46ms
step:307/1480 train_time:43501ms step_avg:146.47ms
step:308/1480 train_time:43652ms step_avg:146.48ms
step:309/1480 train_time:43802ms step_avg:146.49ms
step:310/1480 train_time:43953ms step_avg:146.51ms
step:311/1480 train_time:44103ms step_avg:146.52ms
step:312/1480 train_time:44253ms step_avg:146.53ms
step:313/1480 train_time:44403ms step_avg:146.54ms
step:314/1480 train_time:44553ms step_avg:146.56ms
step:315/1480 train_time:44702ms step_avg:146.56ms
step:316/1480 train_time:44852ms step_avg:146.58ms
step:317/1480 train_time:45001ms step_avg:146.58ms
step:318/1480 train_time:45153ms step_avg:146.60ms
step:319/1480 train_time:45304ms step_avg:146.61ms
step:320/1480 train_time:45454ms step_avg:146.63ms
step:321/1480 train_time:45605ms step_avg:146.64ms
step:322/1480 train_time:45756ms step_avg:146.65ms
step:323/1480 train_time:45905ms step_avg:146.66ms
step:324/1480 train_time:46056ms step_avg:146.67ms
step:325/1480 train_time:46205ms step_avg:146.68ms
step:326/1480 train_time:46356ms step_avg:146.70ms
step:327/1480 train_time:46505ms step_avg:146.70ms
step:328/1480 train_time:46656ms step_avg:146.72ms
step:329/1480 train_time:46806ms step_avg:146.73ms
step:330/1480 train_time:46958ms step_avg:146.74ms
step:331/1480 train_time:47112ms step_avg:146.77ms
step:332/1480 train_time:47266ms step_avg:146.79ms
step:333/1480 train_time:47420ms step_avg:146.81ms
step:334/1480 train_time:47574ms step_avg:146.83ms
step:335/1480 train_time:47729ms step_avg:146.86ms
step:336/1480 train_time:47882ms step_avg:146.88ms
step:337/1480 train_time:48036ms step_avg:146.90ms
step:338/1480 train_time:48191ms step_avg:146.92ms
step:339/1480 train_time:48344ms step_avg:146.94ms
step:340/1480 train_time:48498ms step_avg:146.96ms
step:341/1480 train_time:48652ms step_avg:146.98ms
step:342/1480 train_time:48806ms step_avg:147.01ms
step:343/1480 train_time:48960ms step_avg:147.03ms
step:344/1480 train_time:49115ms step_avg:147.05ms
step:345/1480 train_time:49272ms step_avg:147.08ms
step:346/1480 train_time:49427ms step_avg:147.11ms
step:347/1480 train_time:49581ms step_avg:147.12ms
step:348/1480 train_time:49734ms step_avg:147.14ms
step:349/1480 train_time:49888ms step_avg:147.16ms
step:350/1480 train_time:50041ms step_avg:147.18ms
step:351/1480 train_time:50195ms step_avg:147.20ms
step:352/1480 train_time:50350ms step_avg:147.22ms
step:353/1480 train_time:50504ms step_avg:147.24ms
step:354/1480 train_time:50657ms step_avg:147.26ms
step:355/1480 train_time:50811ms step_avg:147.28ms
step:356/1480 train_time:50964ms step_avg:147.30ms
step:357/1480 train_time:51118ms step_avg:147.31ms
step:358/1480 train_time:51273ms step_avg:147.34ms
step:359/1480 train_time:51428ms step_avg:147.36ms
step:360/1480 train_time:51583ms step_avg:147.38ms
step:361/1480 train_time:51738ms step_avg:147.40ms
step:362/1480 train_time:51891ms step_avg:147.42ms
step:363/1480 train_time:52045ms step_avg:147.44ms
step:364/1480 train_time:52199ms step_avg:147.45ms
step:365/1480 train_time:52353ms step_avg:147.47ms
step:366/1480 train_time:52508ms step_avg:147.50ms
step:367/1480 train_time:52662ms step_avg:147.51ms
step:368/1480 train_time:52814ms step_avg:147.53ms
step:369/1480 train_time:52967ms step_avg:147.54ms
step:370/1480 train_time:53120ms step_avg:147.56ms
step:371/1480 train_time:53274ms step_avg:147.57ms
step:372/1480 train_time:53428ms step_avg:147.59ms
step:373/1480 train_time:53581ms step_avg:147.61ms
step:374/1480 train_time:53737ms step_avg:147.63ms
step:375/1480 train_time:53891ms step_avg:147.65ms
step:375/1480 val_loss:3.8052 train_time:53953ms step_avg:147.82ms
step:376/1480 train_time:54051ms step_avg:147.68ms
step:377/1480 train_time:54206ms step_avg:147.70ms
step:378/1480 train_time:54360ms step_avg:147.72ms
step:379/1480 train_time:54512ms step_avg:147.73ms
step:380/1480 train_time:54664ms step_avg:147.74ms
step:381/1480 train_time:54816ms step_avg:147.75ms
step:382/1480 train_time:54972ms step_avg:147.77ms
step:383/1480 train_time:55128ms step_avg:147.80ms
step:384/1480 train_time:55283ms step_avg:147.81ms
step:385/1480 train_time:55436ms step_avg:147.83ms
step:386/1480 train_time:55589ms step_avg:147.84ms
step:387/1480 train_time:55744ms step_avg:147.86ms
step:388/1480 train_time:55896ms step_avg:147.87ms
step:389/1480 train_time:56050ms step_avg:147.89ms
step:390/1480 train_time:56205ms step_avg:147.91ms
step:391/1480 train_time:56359ms step_avg:147.92ms
step:392/1480 train_time:56512ms step_avg:147.94ms
step:393/1480 train_time:56665ms step_avg:147.95ms
step:394/1480 train_time:56818ms step_avg:147.96ms
step:395/1480 train_time:56972ms step_avg:147.98ms
step:396/1480 train_time:57125ms step_avg:147.99ms
step:397/1480 train_time:57279ms step_avg:148.01ms
step:398/1480 train_time:57432ms step_avg:148.02ms
step:399/1480 train_time:57587ms step_avg:148.04ms
step:400/1480 train_time:57742ms step_avg:148.06ms
step:401/1480 train_time:57895ms step_avg:148.07ms
step:402/1480 train_time:58049ms step_avg:148.08ms
step:403/1480 train_time:58204ms step_avg:148.10ms
step:404/1480 train_time:58358ms step_avg:148.12ms
step:405/1480 train_time:58511ms step_avg:148.13ms
step:406/1480 train_time:58667ms step_avg:148.15ms
step:407/1480 train_time:58822ms step_avg:148.17ms
step:408/1480 train_time:58975ms step_avg:148.18ms
step:409/1480 train_time:59128ms step_avg:148.19ms
step:410/1480 train_time:59282ms step_avg:148.21ms
step:411/1480 train_time:59435ms step_avg:148.22ms
step:412/1480 train_time:59589ms step_avg:148.23ms
step:413/1480 train_time:59744ms step_avg:148.25ms
step:414/1480 train_time:59896ms step_avg:148.26ms
step:415/1480 train_time:60050ms step_avg:148.27ms
step:416/1480 train_time:60202ms step_avg:148.28ms
step:417/1480 train_time:60356ms step_avg:148.30ms
step:418/1480 train_time:60510ms step_avg:148.31ms
step:419/1480 train_time:60665ms step_avg:148.32ms
step:420/1480 train_time:60818ms step_avg:148.34ms
step:421/1480 train_time:60973ms step_avg:148.35ms
step:422/1480 train_time:61127ms step_avg:148.37ms
step:423/1480 train_time:61280ms step_avg:148.38ms
step:424/1480 train_time:61434ms step_avg:148.39ms
step:425/1480 train_time:61587ms step_avg:148.40ms
step:426/1480 train_time:61742ms step_avg:148.42ms
step:427/1480 train_time:61895ms step_avg:148.43ms
step:428/1480 train_time:62048ms step_avg:148.44ms
step:429/1480 train_time:62201ms step_avg:148.45ms
step:430/1480 train_time:62355ms step_avg:148.46ms
step:431/1480 train_time:62509ms step_avg:148.48ms
step:432/1480 train_time:62665ms step_avg:148.50ms
step:433/1480 train_time:62819ms step_avg:148.51ms
step:434/1480 train_time:62973ms step_avg:148.52ms
step:435/1480 train_time:63127ms step_avg:148.53ms
step:436/1480 train_time:63281ms step_avg:148.55ms
step:437/1480 train_time:63434ms step_avg:148.56ms
step:438/1480 train_time:63586ms step_avg:148.57ms
step:439/1480 train_time:63741ms step_avg:148.58ms
step:440/1480 train_time:63896ms step_avg:148.60ms
step:441/1480 train_time:64053ms step_avg:148.61ms
step:442/1480 train_time:64209ms step_avg:148.63ms
step:443/1480 train_time:64367ms step_avg:148.65ms
step:444/1480 train_time:64523ms step_avg:148.67ms
step:445/1480 train_time:64678ms step_avg:148.68ms
step:446/1480 train_time:64834ms step_avg:148.70ms
step:447/1480 train_time:64990ms step_avg:148.72ms
step:448/1480 train_time:65149ms step_avg:148.74ms
step:449/1480 train_time:65308ms step_avg:148.76ms
step:450/1480 train_time:65467ms step_avg:148.79ms
step:451/1480 train_time:65626ms step_avg:148.81ms
step:452/1480 train_time:65782ms step_avg:148.83ms
step:453/1480 train_time:65938ms step_avg:148.85ms
step:454/1480 train_time:66094ms step_avg:148.86ms
step:455/1480 train_time:66250ms step_avg:148.88ms
step:456/1480 train_time:66407ms step_avg:148.90ms
step:457/1480 train_time:66564ms step_avg:148.91ms
step:458/1480 train_time:66721ms step_avg:148.93ms
step:459/1480 train_time:66877ms step_avg:148.95ms
step:460/1480 train_time:67033ms step_avg:148.96ms
step:461/1480 train_time:67190ms step_avg:148.98ms
step:462/1480 train_time:67348ms step_avg:149.00ms
step:463/1480 train_time:67506ms step_avg:149.02ms
step:464/1480 train_time:67664ms step_avg:149.04ms
step:465/1480 train_time:67821ms step_avg:149.06ms
step:466/1480 train_time:67978ms step_avg:149.07ms
step:467/1480 train_time:68135ms step_avg:149.09ms
step:468/1480 train_time:68290ms step_avg:149.10ms
step:469/1480 train_time:68445ms step_avg:149.12ms
step:470/1480 train_time:68602ms step_avg:149.13ms
step:471/1480 train_time:68758ms step_avg:149.15ms
step:472/1480 train_time:68914ms step_avg:149.16ms
step:473/1480 train_time:69071ms step_avg:149.18ms
step:474/1480 train_time:69227ms step_avg:149.20ms
step:475/1480 train_time:69385ms step_avg:149.22ms
step:476/1480 train_time:69542ms step_avg:149.23ms
step:477/1480 train_time:69698ms step_avg:149.25ms
step:478/1480 train_time:69853ms step_avg:149.26ms
step:479/1480 train_time:70010ms step_avg:149.27ms
step:480/1480 train_time:70169ms step_avg:149.29ms
step:481/1480 train_time:70327ms step_avg:149.31ms
step:482/1480 train_time:70483ms step_avg:149.33ms
step:483/1480 train_time:70640ms step_avg:149.34ms
step:484/1480 train_time:70796ms step_avg:149.36ms
step:485/1480 train_time:70953ms step_avg:149.37ms
step:486/1480 train_time:71109ms step_avg:149.39ms
step:487/1480 train_time:71270ms step_avg:149.41ms
step:488/1480 train_time:71426ms step_avg:149.43ms
step:489/1480 train_time:71581ms step_avg:149.44ms
step:490/1480 train_time:71736ms step_avg:149.45ms
step:491/1480 train_time:71894ms step_avg:149.47ms
step:492/1480 train_time:72051ms step_avg:149.48ms
step:493/1480 train_time:72210ms step_avg:149.50ms
step:494/1480 train_time:72369ms step_avg:149.52ms
step:495/1480 train_time:72528ms step_avg:149.54ms
step:496/1480 train_time:72687ms step_avg:149.56ms
step:497/1480 train_time:72843ms step_avg:149.57ms
step:498/1480 train_time:73000ms step_avg:149.59ms
step:499/1480 train_time:73158ms step_avg:149.61ms
step:500/1480 train_time:73315ms step_avg:149.62ms
step:500/1480 val_loss:3.6856 train_time:73377ms step_avg:149.75ms
step:501/1480 train_time:73477ms step_avg:149.65ms
step:502/1480 train_time:73636ms step_avg:149.67ms
step:503/1480 train_time:73792ms step_avg:149.68ms
step:504/1480 train_time:73948ms step_avg:149.69ms
step:505/1480 train_time:74102ms step_avg:149.70ms
step:506/1480 train_time:74258ms step_avg:149.71ms
step:507/1480 train_time:74414ms step_avg:149.73ms
step:508/1480 train_time:74573ms step_avg:149.75ms
step:509/1480 train_time:74730ms step_avg:149.76ms
step:510/1480 train_time:74887ms step_avg:149.77ms
step:511/1480 train_time:75043ms step_avg:149.79ms
step:512/1480 train_time:75201ms step_avg:149.80ms
step:513/1480 train_time:75358ms step_avg:149.82ms
step:514/1480 train_time:75515ms step_avg:149.83ms
step:515/1480 train_time:75672ms step_avg:149.85ms
step:516/1480 train_time:75833ms step_avg:149.87ms
step:517/1480 train_time:75990ms step_avg:149.88ms
step:518/1480 train_time:76147ms step_avg:149.90ms
step:519/1480 train_time:76303ms step_avg:149.91ms
step:520/1480 train_time:76460ms step_avg:149.92ms
step:521/1480 train_time:76619ms step_avg:149.94ms
step:522/1480 train_time:76776ms step_avg:149.95ms
step:523/1480 train_time:76935ms step_avg:149.97ms
step:524/1480 train_time:77093ms step_avg:149.99ms
step:525/1480 train_time:77253ms step_avg:150.01ms
step:526/1480 train_time:77413ms step_avg:150.02ms
step:527/1480 train_time:77569ms step_avg:150.04ms
step:528/1480 train_time:77725ms step_avg:150.05ms
step:529/1480 train_time:77882ms step_avg:150.06ms
step:530/1480 train_time:78038ms step_avg:150.07ms
step:531/1480 train_time:78195ms step_avg:150.09ms
step:532/1480 train_time:78354ms step_avg:150.10ms
step:533/1480 train_time:78512ms step_avg:150.12ms
step:534/1480 train_time:78668ms step_avg:150.13ms
step:535/1480 train_time:78825ms step_avg:150.14ms
step:536/1480 train_time:78980ms step_avg:150.15ms
step:537/1480 train_time:79136ms step_avg:150.16ms
step:538/1480 train_time:79294ms step_avg:150.18ms
step:539/1480 train_time:79454ms step_avg:150.20ms
step:540/1480 train_time:79612ms step_avg:150.21ms
step:541/1480 train_time:79768ms step_avg:150.22ms
step:542/1480 train_time:79925ms step_avg:150.23ms
step:543/1480 train_time:80080ms step_avg:150.24ms
step:544/1480 train_time:80237ms step_avg:150.26ms
step:545/1480 train_time:80393ms step_avg:150.27ms
step:546/1480 train_time:80552ms step_avg:150.28ms
step:547/1480 train_time:80709ms step_avg:150.30ms
step:548/1480 train_time:80866ms step_avg:150.31ms
step:549/1480 train_time:81023ms step_avg:150.32ms
step:550/1480 train_time:81179ms step_avg:150.33ms
step:551/1480 train_time:81337ms step_avg:150.34ms
step:552/1480 train_time:81495ms step_avg:150.36ms
step:553/1480 train_time:81656ms step_avg:150.38ms
step:554/1480 train_time:81817ms step_avg:150.40ms
step:555/1480 train_time:81978ms step_avg:150.42ms
step:556/1480 train_time:82137ms step_avg:150.43ms
step:557/1480 train_time:82296ms step_avg:150.45ms
step:558/1480 train_time:82456ms step_avg:150.47ms
step:559/1480 train_time:82615ms step_avg:150.48ms
step:560/1480 train_time:82775ms step_avg:150.50ms
step:561/1480 train_time:82934ms step_avg:150.51ms
step:562/1480 train_time:83094ms step_avg:150.53ms
step:563/1480 train_time:83255ms step_avg:150.55ms
step:564/1480 train_time:83414ms step_avg:150.57ms
step:565/1480 train_time:83574ms step_avg:150.58ms
step:566/1480 train_time:83735ms step_avg:150.60ms
step:567/1480 train_time:83896ms step_avg:150.62ms
step:568/1480 train_time:84055ms step_avg:150.64ms
step:569/1480 train_time:84214ms step_avg:150.65ms
step:570/1480 train_time:84374ms step_avg:150.67ms
step:571/1480 train_time:84535ms step_avg:150.69ms
step:572/1480 train_time:84695ms step_avg:150.70ms
step:573/1480 train_time:84857ms step_avg:150.72ms
step:574/1480 train_time:85018ms step_avg:150.74ms
step:575/1480 train_time:85178ms step_avg:150.76ms
step:576/1480 train_time:85337ms step_avg:150.77ms
step:577/1480 train_time:85496ms step_avg:150.79ms
step:578/1480 train_time:85655ms step_avg:150.80ms
step:579/1480 train_time:85816ms step_avg:150.82ms
step:580/1480 train_time:85976ms step_avg:150.83ms
step:581/1480 train_time:86137ms step_avg:150.85ms
step:582/1480 train_time:86296ms step_avg:150.87ms
step:583/1480 train_time:86456ms step_avg:150.88ms
step:584/1480 train_time:86615ms step_avg:150.90ms
step:585/1480 train_time:86774ms step_avg:150.91ms
step:586/1480 train_time:86935ms step_avg:150.93ms
step:587/1480 train_time:87095ms step_avg:150.95ms
step:588/1480 train_time:87255ms step_avg:150.96ms
step:589/1480 train_time:87415ms step_avg:150.98ms
step:590/1480 train_time:87577ms step_avg:150.99ms
step:591/1480 train_time:87735ms step_avg:151.01ms
step:592/1480 train_time:87894ms step_avg:151.02ms
step:593/1480 train_time:88055ms step_avg:151.04ms
step:594/1480 train_time:88216ms step_avg:151.05ms
step:595/1480 train_time:88377ms step_avg:151.07ms
step:596/1480 train_time:88539ms step_avg:151.09ms
step:597/1480 train_time:88697ms step_avg:151.10ms
step:598/1480 train_time:88855ms step_avg:151.11ms
step:599/1480 train_time:89014ms step_avg:151.13ms
step:600/1480 train_time:89175ms step_avg:151.14ms
step:601/1480 train_time:89335ms step_avg:151.16ms
step:602/1480 train_time:89495ms step_avg:151.17ms
step:603/1480 train_time:89656ms step_avg:151.19ms
step:604/1480 train_time:89815ms step_avg:151.20ms
step:605/1480 train_time:89974ms step_avg:151.22ms
step:606/1480 train_time:90136ms step_avg:151.24ms
step:607/1480 train_time:90297ms step_avg:151.25ms
step:608/1480 train_time:90456ms step_avg:151.26ms
step:609/1480 train_time:90616ms step_avg:151.28ms
step:610/1480 train_time:90776ms step_avg:151.29ms
step:611/1480 train_time:90937ms step_avg:151.31ms
step:612/1480 train_time:91097ms step_avg:151.32ms
step:613/1480 train_time:91257ms step_avg:151.34ms
step:614/1480 train_time:91417ms step_avg:151.35ms
step:615/1480 train_time:91575ms step_avg:151.36ms
step:616/1480 train_time:91735ms step_avg:151.38ms
step:617/1480 train_time:91895ms step_avg:151.39ms
step:618/1480 train_time:92056ms step_avg:151.41ms
step:619/1480 train_time:92216ms step_avg:151.42ms
step:620/1480 train_time:92376ms step_avg:151.44ms
step:621/1480 train_time:92538ms step_avg:151.45ms
step:622/1480 train_time:92696ms step_avg:151.46ms
step:623/1480 train_time:92857ms step_avg:151.48ms
step:624/1480 train_time:93017ms step_avg:151.49ms
step:625/1480 train_time:93176ms step_avg:151.51ms
step:625/1480 val_loss:3.6064 train_time:93241ms step_avg:151.61ms
step:626/1480 train_time:93340ms step_avg:151.53ms
step:627/1480 train_time:93499ms step_avg:151.54ms
step:628/1480 train_time:93658ms step_avg:151.55ms
step:629/1480 train_time:93817ms step_avg:151.56ms
step:630/1480 train_time:93975ms step_avg:151.57ms
step:631/1480 train_time:94132ms step_avg:151.58ms
step:632/1480 train_time:94292ms step_avg:151.60ms
step:633/1480 train_time:94452ms step_avg:151.61ms
step:634/1480 train_time:94612ms step_avg:151.62ms
step:635/1480 train_time:94771ms step_avg:151.63ms
step:636/1480 train_time:94929ms step_avg:151.64ms
step:637/1480 train_time:95089ms step_avg:151.66ms
step:638/1480 train_time:95247ms step_avg:151.67ms
step:639/1480 train_time:95407ms step_avg:151.68ms
step:640/1480 train_time:95564ms step_avg:151.69ms
step:641/1480 train_time:95725ms step_avg:151.70ms
step:642/1480 train_time:95884ms step_avg:151.71ms
step:643/1480 train_time:96043ms step_avg:151.73ms
step:644/1480 train_time:96202ms step_avg:151.74ms
step:645/1480 train_time:96362ms step_avg:151.75ms
step:646/1480 train_time:96523ms step_avg:151.77ms
step:647/1480 train_time:96683ms step_avg:151.78ms
step:648/1480 train_time:96844ms step_avg:151.79ms
step:649/1480 train_time:97003ms step_avg:151.80ms
step:650/1480 train_time:97162ms step_avg:151.82ms
step:651/1480 train_time:97323ms step_avg:151.83ms
step:652/1480 train_time:97483ms step_avg:151.84ms
step:653/1480 train_time:97642ms step_avg:151.85ms
step:654/1480 train_time:97802ms step_avg:151.87ms
step:655/1480 train_time:97962ms step_avg:151.88ms
step:656/1480 train_time:98122ms step_avg:151.89ms
step:657/1480 train_time:98283ms step_avg:151.91ms
step:658/1480 train_time:98443ms step_avg:151.92ms
step:659/1480 train_time:98605ms step_avg:151.93ms
step:660/1480 train_time:98766ms step_avg:151.95ms
step:661/1480 train_time:98928ms step_avg:151.96ms
step:662/1480 train_time:99088ms step_avg:151.98ms
step:663/1480 train_time:99247ms step_avg:151.99ms
step:664/1480 train_time:99409ms step_avg:152.00ms
step:665/1480 train_time:99570ms step_avg:152.02ms
step:666/1480 train_time:99730ms step_avg:152.03ms
step:667/1480 train_time:99891ms step_avg:152.04ms
step:668/1480 train_time:100053ms step_avg:152.06ms
step:669/1480 train_time:100215ms step_avg:152.07ms
step:670/1480 train_time:100374ms step_avg:152.08ms
step:671/1480 train_time:100534ms step_avg:152.09ms
step:672/1480 train_time:100697ms step_avg:152.11ms
step:673/1480 train_time:100862ms step_avg:152.13ms
step:674/1480 train_time:101026ms step_avg:152.15ms
step:675/1480 train_time:101188ms step_avg:152.16ms
step:676/1480 train_time:101349ms step_avg:152.18ms
step:677/1480 train_time:101510ms step_avg:152.19ms
step:678/1480 train_time:101671ms step_avg:152.20ms
step:679/1480 train_time:101831ms step_avg:152.21ms
step:680/1480 train_time:101993ms step_avg:152.23ms
step:681/1480 train_time:102155ms step_avg:152.24ms
step:682/1480 train_time:102318ms step_avg:152.26ms
step:683/1480 train_time:102481ms step_avg:152.27ms
step:684/1480 train_time:102642ms step_avg:152.29ms
step:685/1480 train_time:102806ms step_avg:152.31ms
step:686/1480 train_time:102966ms step_avg:152.32ms
step:687/1480 train_time:103127ms step_avg:152.33ms
step:688/1480 train_time:103289ms step_avg:152.34ms
step:689/1480 train_time:103451ms step_avg:152.36ms
step:690/1480 train_time:103614ms step_avg:152.37ms
step:691/1480 train_time:103774ms step_avg:152.39ms
step:692/1480 train_time:103935ms step_avg:152.40ms
step:693/1480 train_time:104098ms step_avg:152.41ms
step:694/1480 train_time:104260ms step_avg:152.43ms
step:695/1480 train_time:104422ms step_avg:152.44ms
step:696/1480 train_time:104583ms step_avg:152.45ms
step:697/1480 train_time:104748ms step_avg:152.47ms
step:698/1480 train_time:104908ms step_avg:152.48ms
step:699/1480 train_time:105070ms step_avg:152.50ms
step:700/1480 train_time:105232ms step_avg:152.51ms
step:701/1480 train_time:105393ms step_avg:152.52ms
step:702/1480 train_time:105555ms step_avg:152.54ms
step:703/1480 train_time:105716ms step_avg:152.55ms
step:704/1480 train_time:105877ms step_avg:152.56ms
step:705/1480 train_time:106042ms step_avg:152.58ms
step:706/1480 train_time:106206ms step_avg:152.60ms
step:707/1480 train_time:106368ms step_avg:152.61ms
step:708/1480 train_time:106529ms step_avg:152.62ms
step:709/1480 train_time:106691ms step_avg:152.63ms
step:710/1480 train_time:106850ms step_avg:152.64ms
step:711/1480 train_time:107010ms step_avg:152.65ms
step:712/1480 train_time:107176ms step_avg:152.67ms
step:713/1480 train_time:107341ms step_avg:152.69ms
step:714/1480 train_time:107503ms step_avg:152.70ms
step:715/1480 train_time:107663ms step_avg:152.71ms
step:716/1480 train_time:107824ms step_avg:152.73ms
step:717/1480 train_time:107987ms step_avg:152.74ms
step:718/1480 train_time:108146ms step_avg:152.75ms
step:719/1480 train_time:108306ms step_avg:152.76ms
step:720/1480 train_time:108467ms step_avg:152.77ms
step:721/1480 train_time:108628ms step_avg:152.78ms
step:722/1480 train_time:108790ms step_avg:152.79ms
step:723/1480 train_time:108949ms step_avg:152.80ms
step:724/1480 train_time:109112ms step_avg:152.82ms
step:725/1480 train_time:109273ms step_avg:152.83ms
step:726/1480 train_time:109437ms step_avg:152.84ms
step:727/1480 train_time:109601ms step_avg:152.86ms
step:728/1480 train_time:109763ms step_avg:152.87ms
step:729/1480 train_time:109925ms step_avg:152.89ms
step:730/1480 train_time:110089ms step_avg:152.90ms
step:731/1480 train_time:110250ms step_avg:152.91ms
step:732/1480 train_time:110409ms step_avg:152.92ms
step:733/1480 train_time:110570ms step_avg:152.93ms
step:734/1480 train_time:110731ms step_avg:152.94ms
step:735/1480 train_time:110891ms step_avg:152.95ms
step:736/1480 train_time:111052ms step_avg:152.96ms
step:737/1480 train_time:111211ms step_avg:152.97ms
step:738/1480 train_time:111372ms step_avg:152.98ms
step:739/1480 train_time:111532ms step_avg:152.99ms
step:740/1480 train_time:111699ms step_avg:153.01ms
step:741/1480 train_time:111863ms step_avg:153.03ms
step:742/1480 train_time:112026ms step_avg:153.04ms
step:743/1480 train_time:112187ms step_avg:153.05ms
step:744/1480 train_time:112350ms step_avg:153.07ms
step:745/1480 train_time:112514ms step_avg:153.08ms
step:746/1480 train_time:112674ms step_avg:153.09ms
step:747/1480 train_time:112837ms step_avg:153.10ms
step:748/1480 train_time:113003ms step_avg:153.12ms
step:749/1480 train_time:113165ms step_avg:153.13ms
step:750/1480 train_time:113325ms step_avg:153.14ms
step:750/1480 val_loss:3.5516 train_time:113388ms step_avg:153.23ms
step:751/1480 train_time:113490ms step_avg:153.16ms
step:752/1480 train_time:113655ms step_avg:153.17ms
step:753/1480 train_time:113816ms step_avg:153.18ms
step:754/1480 train_time:113978ms step_avg:153.20ms
step:755/1480 train_time:114139ms step_avg:153.21ms
step:756/1480 train_time:114302ms step_avg:153.22ms
step:757/1480 train_time:114466ms step_avg:153.23ms
step:758/1480 train_time:114626ms step_avg:153.24ms
step:759/1480 train_time:114787ms step_avg:153.25ms
step:760/1480 train_time:114947ms step_avg:153.26ms
step:761/1480 train_time:115109ms step_avg:153.27ms
step:762/1480 train_time:115270ms step_avg:153.28ms
step:763/1480 train_time:115431ms step_avg:153.30ms
step:764/1480 train_time:115593ms step_avg:153.31ms
step:765/1480 train_time:115757ms step_avg:153.32ms
step:766/1480 train_time:115921ms step_avg:153.33ms
step:767/1480 train_time:116084ms step_avg:153.35ms
step:768/1480 train_time:116245ms step_avg:153.36ms
step:769/1480 train_time:116409ms step_avg:153.37ms
step:770/1480 train_time:116571ms step_avg:153.38ms
step:771/1480 train_time:116734ms step_avg:153.40ms
step:772/1480 train_time:116897ms step_avg:153.41ms
step:773/1480 train_time:117061ms step_avg:153.42ms
step:774/1480 train_time:117223ms step_avg:153.43ms
step:775/1480 train_time:117386ms step_avg:153.45ms
step:776/1480 train_time:117549ms step_avg:153.46ms
step:777/1480 train_time:117716ms step_avg:153.48ms
step:778/1480 train_time:117881ms step_avg:153.49ms
step:779/1480 train_time:118043ms step_avg:153.50ms
step:780/1480 train_time:118205ms step_avg:153.51ms
step:781/1480 train_time:118367ms step_avg:153.52ms
step:782/1480 train_time:118532ms step_avg:153.54ms
step:783/1480 train_time:118693ms step_avg:153.55ms
step:784/1480 train_time:118859ms step_avg:153.56ms
step:785/1480 train_time:119021ms step_avg:153.58ms
step:786/1480 train_time:119186ms step_avg:153.59ms
step:787/1480 train_time:119348ms step_avg:153.60ms
step:788/1480 train_time:119514ms step_avg:153.62ms
step:789/1480 train_time:119676ms step_avg:153.63ms
step:790/1480 train_time:119842ms step_avg:153.64ms
step:791/1480 train_time:120007ms step_avg:153.66ms
step:792/1480 train_time:120171ms step_avg:153.67ms
step:793/1480 train_time:120334ms step_avg:153.68ms
step:794/1480 train_time:120499ms step_avg:153.70ms
step:795/1480 train_time:120664ms step_avg:153.71ms
step:796/1480 train_time:120829ms step_avg:153.73ms
step:797/1480 train_time:120994ms step_avg:153.74ms
step:798/1480 train_time:121160ms step_avg:153.76ms
step:799/1480 train_time:121325ms step_avg:153.77ms
step:800/1480 train_time:121488ms step_avg:153.78ms
step:801/1480 train_time:121650ms step_avg:153.79ms
step:802/1480 train_time:121819ms step_avg:153.81ms
step:803/1480 train_time:121982ms step_avg:153.82ms
step:804/1480 train_time:122144ms step_avg:153.83ms
step:805/1480 train_time:122308ms step_avg:153.85ms
step:806/1480 train_time:122470ms step_avg:153.86ms
step:807/1480 train_time:122631ms step_avg:153.87ms
step:808/1480 train_time:122796ms step_avg:153.88ms
step:809/1480 train_time:122960ms step_avg:153.89ms
step:810/1480 train_time:123121ms step_avg:153.90ms
step:811/1480 train_time:123284ms step_avg:153.91ms
step:812/1480 train_time:123447ms step_avg:153.92ms
step:813/1480 train_time:123606ms step_avg:153.93ms
step:814/1480 train_time:123771ms step_avg:153.94ms
step:815/1480 train_time:123934ms step_avg:153.95ms
step:816/1480 train_time:124098ms step_avg:153.97ms
step:817/1480 train_time:124263ms step_avg:153.98ms
step:818/1480 train_time:124423ms step_avg:153.99ms
step:819/1480 train_time:124587ms step_avg:154.00ms
step:820/1480 train_time:124751ms step_avg:154.01ms
step:821/1480 train_time:124914ms step_avg:154.02ms
step:822/1480 train_time:125078ms step_avg:154.04ms
step:823/1480 train_time:125241ms step_avg:154.05ms
step:824/1480 train_time:125403ms step_avg:154.06ms
step:825/1480 train_time:125567ms step_avg:154.07ms
step:826/1480 train_time:125734ms step_avg:154.09ms
step:827/1480 train_time:125899ms step_avg:154.10ms
step:828/1480 train_time:126063ms step_avg:154.11ms
step:829/1480 train_time:126225ms step_avg:154.12ms
step:830/1480 train_time:126390ms step_avg:154.13ms
step:831/1480 train_time:126555ms step_avg:154.15ms
step:832/1480 train_time:126719ms step_avg:154.16ms
step:833/1480 train_time:126884ms step_avg:154.17ms
step:834/1480 train_time:127048ms step_avg:154.18ms
step:835/1480 train_time:127212ms step_avg:154.20ms
step:836/1480 train_time:127377ms step_avg:154.21ms
step:837/1480 train_time:127540ms step_avg:154.22ms
step:838/1480 train_time:127705ms step_avg:154.23ms
step:839/1480 train_time:127867ms step_avg:154.24ms
step:840/1480 train_time:128027ms step_avg:154.25ms
step:841/1480 train_time:128187ms step_avg:154.26ms
step:842/1480 train_time:128352ms step_avg:154.27ms
step:843/1480 train_time:128514ms step_avg:154.28ms
step:844/1480 train_time:128678ms step_avg:154.29ms
step:845/1480 train_time:128843ms step_avg:154.30ms
step:846/1480 train_time:129007ms step_avg:154.31ms
step:847/1480 train_time:129171ms step_avg:154.33ms
step:848/1480 train_time:129334ms step_avg:154.34ms
step:849/1480 train_time:129496ms step_avg:154.35ms
step:850/1480 train_time:129660ms step_avg:154.36ms
step:851/1480 train_time:129823ms step_avg:154.37ms
step:852/1480 train_time:129985ms step_avg:154.38ms
step:853/1480 train_time:130148ms step_avg:154.39ms
step:854/1480 train_time:130313ms step_avg:154.40ms
step:855/1480 train_time:130478ms step_avg:154.41ms
step:856/1480 train_time:130640ms step_avg:154.42ms
step:857/1480 train_time:130804ms step_avg:154.43ms
step:858/1480 train_time:130970ms step_avg:154.45ms
step:859/1480 train_time:131134ms step_avg:154.46ms
step:860/1480 train_time:131295ms step_avg:154.46ms
step:861/1480 train_time:131461ms step_avg:154.48ms
step:862/1480 train_time:131630ms step_avg:154.49ms
step:863/1480 train_time:131799ms step_avg:154.51ms
step:864/1480 train_time:131964ms step_avg:154.53ms
step:865/1480 train_time:132125ms step_avg:154.53ms
step:866/1480 train_time:132291ms step_avg:154.55ms
step:867/1480 train_time:132454ms step_avg:154.56ms
step:868/1480 train_time:132616ms step_avg:154.56ms
step:869/1480 train_time:132779ms step_avg:154.57ms
step:870/1480 train_time:132944ms step_avg:154.59ms
step:871/1480 train_time:133107ms step_avg:154.60ms
step:872/1480 train_time:133272ms step_avg:154.61ms
step:873/1480 train_time:133435ms step_avg:154.62ms
step:874/1480 train_time:133601ms step_avg:154.63ms
step:875/1480 train_time:133766ms step_avg:154.64ms
step:875/1480 val_loss:3.5050 train_time:133831ms step_avg:154.72ms
step:876/1480 train_time:133931ms step_avg:154.65ms
step:877/1480 train_time:134095ms step_avg:154.67ms
step:878/1480 train_time:134259ms step_avg:154.68ms
step:879/1480 train_time:134424ms step_avg:154.69ms
step:880/1480 train_time:134587ms step_avg:154.70ms
step:881/1480 train_time:134749ms step_avg:154.71ms
step:882/1480 train_time:134915ms step_avg:154.72ms
step:883/1480 train_time:135080ms step_avg:154.73ms
step:884/1480 train_time:135248ms step_avg:154.75ms
step:885/1480 train_time:135413ms step_avg:154.76ms
step:886/1480 train_time:135579ms step_avg:154.77ms
step:887/1480 train_time:135748ms step_avg:154.79ms
step:888/1480 train_time:135923ms step_avg:154.81ms
step:889/1480 train_time:136091ms step_avg:154.82ms
step:890/1480 train_time:136252ms step_avg:154.83ms
step:891/1480 train_time:136419ms step_avg:154.85ms
step:892/1480 train_time:136584ms step_avg:154.86ms
step:893/1480 train_time:136747ms step_avg:154.87ms
step:894/1480 train_time:136914ms step_avg:154.88ms
step:895/1480 train_time:137082ms step_avg:154.89ms
step:896/1480 train_time:137248ms step_avg:154.91ms
step:897/1480 train_time:137416ms step_avg:154.92ms
step:898/1480 train_time:137584ms step_avg:154.94ms
step:899/1480 train_time:137748ms step_avg:154.95ms
step:900/1480 train_time:137912ms step_avg:154.96ms
step:901/1480 train_time:138076ms step_avg:154.97ms
step:902/1480 train_time:138240ms step_avg:154.98ms
step:903/1480 train_time:138413ms step_avg:155.00ms
step:904/1480 train_time:138578ms step_avg:155.01ms
step:905/1480 train_time:138740ms step_avg:155.02ms
step:906/1480 train_time:138908ms step_avg:155.03ms
step:907/1480 train_time:139076ms step_avg:155.05ms
step:908/1480 train_time:139238ms step_avg:155.05ms
step:909/1480 train_time:139404ms step_avg:155.07ms
step:910/1480 train_time:139574ms step_avg:155.08ms
step:911/1480 train_time:139737ms step_avg:155.09ms
step:912/1480 train_time:139906ms step_avg:155.11ms
step:913/1480 train_time:140074ms step_avg:155.12ms
step:914/1480 train_time:140241ms step_avg:155.13ms
step:915/1480 train_time:140411ms step_avg:155.15ms
step:916/1480 train_time:140576ms step_avg:155.16ms
step:917/1480 train_time:140739ms step_avg:155.17ms
step:918/1480 train_time:140908ms step_avg:155.18ms
step:919/1480 train_time:141078ms step_avg:155.20ms
step:920/1480 train_time:141245ms step_avg:155.21ms
step:921/1480 train_time:141410ms step_avg:155.23ms
step:922/1480 train_time:141577ms step_avg:155.24ms
step:923/1480 train_time:141740ms step_avg:155.25ms
step:924/1480 train_time:141906ms step_avg:155.26ms
step:925/1480 train_time:142071ms step_avg:155.27ms
step:926/1480 train_time:142234ms step_avg:155.28ms
step:927/1480 train_time:142399ms step_avg:155.29ms
step:928/1480 train_time:142566ms step_avg:155.30ms
step:929/1480 train_time:142731ms step_avg:155.31ms
step:930/1480 train_time:142895ms step_avg:155.32ms
step:931/1480 train_time:143058ms step_avg:155.33ms
step:932/1480 train_time:143224ms step_avg:155.34ms
step:933/1480 train_time:143393ms step_avg:155.36ms
step:934/1480 train_time:143560ms step_avg:155.37ms
step:935/1480 train_time:143732ms step_avg:155.39ms
step:936/1480 train_time:143899ms step_avg:155.40ms
step:937/1480 train_time:144070ms step_avg:155.42ms
step:938/1480 train_time:144233ms step_avg:155.42ms
step:939/1480 train_time:144402ms step_avg:155.44ms
step:940/1480 train_time:144568ms step_avg:155.45ms
step:941/1480 train_time:144731ms step_avg:155.46ms
step:942/1480 train_time:144896ms step_avg:155.47ms
step:943/1480 train_time:145066ms step_avg:155.48ms
step:944/1480 train_time:145237ms step_avg:155.50ms
step:945/1480 train_time:145402ms step_avg:155.51ms
step:946/1480 train_time:145571ms step_avg:155.52ms
step:947/1480 train_time:145737ms step_avg:155.54ms
step:948/1480 train_time:145903ms step_avg:155.55ms
step:949/1480 train_time:146069ms step_avg:155.56ms
step:950/1480 train_time:146233ms step_avg:155.57ms
step:951/1480 train_time:146401ms step_avg:155.58ms
step:952/1480 train_time:146568ms step_avg:155.59ms
step:953/1480 train_time:146737ms step_avg:155.61ms
step:954/1480 train_time:146907ms step_avg:155.62ms
step:955/1480 train_time:147070ms step_avg:155.63ms
step:956/1480 train_time:147236ms step_avg:155.64ms
step:957/1480 train_time:147406ms step_avg:155.66ms
step:958/1480 train_time:147574ms step_avg:155.67ms
step:959/1480 train_time:147737ms step_avg:155.68ms
step:960/1480 train_time:147905ms step_avg:155.69ms
step:961/1480 train_time:148071ms step_avg:155.70ms
step:962/1480 train_time:148235ms step_avg:155.71ms
step:963/1480 train_time:148401ms step_avg:155.72ms
step:964/1480 train_time:148570ms step_avg:155.73ms
step:965/1480 train_time:148733ms step_avg:155.74ms
step:966/1480 train_time:148899ms step_avg:155.75ms
step:967/1480 train_time:149063ms step_avg:155.76ms
step:968/1480 train_time:149228ms step_avg:155.77ms
step:969/1480 train_time:149393ms step_avg:155.78ms
step:970/1480 train_time:149554ms step_avg:155.79ms
step:971/1480 train_time:149719ms step_avg:155.80ms
step:972/1480 train_time:149884ms step_avg:155.80ms
step:973/1480 train_time:150049ms step_avg:155.81ms
step:974/1480 train_time:150219ms step_avg:155.83ms
step:975/1480 train_time:150385ms step_avg:155.84ms
step:976/1480 train_time:150550ms step_avg:155.85ms
step:977/1480 train_time:150714ms step_avg:155.86ms
step:978/1480 train_time:150878ms step_avg:155.87ms
step:979/1480 train_time:151044ms step_avg:155.88ms
step:980/1480 train_time:151210ms step_avg:155.89ms
step:981/1480 train_time:151379ms step_avg:155.90ms
step:982/1480 train_time:151542ms step_avg:155.91ms
step:983/1480 train_time:151709ms step_avg:155.92ms
step:984/1480 train_time:151874ms step_avg:155.93ms
step:985/1480 train_time:152042ms step_avg:155.94ms
step:986/1480 train_time:152208ms step_avg:155.95ms
step:987/1480 train_time:152371ms step_avg:155.96ms
step:988/1480 train_time:152538ms step_avg:155.97ms
step:989/1480 train_time:152705ms step_avg:155.98ms
step:990/1480 train_time:152872ms step_avg:155.99ms
step:991/1480 train_time:153039ms step_avg:156.00ms
step:992/1480 train_time:153214ms step_avg:156.02ms
step:993/1480 train_time:153391ms step_avg:156.04ms
step:994/1480 train_time:153555ms step_avg:156.05ms
step:995/1480 train_time:153719ms step_avg:156.06ms
step:996/1480 train_time:153884ms step_avg:156.07ms
step:997/1480 train_time:154048ms step_avg:156.08ms
step:998/1480 train_time:154213ms step_avg:156.09ms
step:999/1480 train_time:154378ms step_avg:156.10ms
step:1000/1480 train_time:154547ms step_avg:156.11ms
step:1000/1480 val_loss:3.4409 train_time:154616ms step_avg:156.18ms
step:1001/1480 train_time:154719ms step_avg:156.12ms
step:1002/1480 train_time:154885ms step_avg:156.13ms
step:1003/1480 train_time:155059ms step_avg:156.15ms
step:1004/1480 train_time:155228ms step_avg:156.16ms
step:1005/1480 train_time:155395ms step_avg:156.18ms
step:1006/1480 train_time:155562ms step_avg:156.19ms
step:1007/1480 train_time:155727ms step_avg:156.20ms
step:1008/1480 train_time:155893ms step_avg:156.21ms
step:1009/1480 train_time:156065ms step_avg:156.22ms
step:1010/1480 train_time:156231ms step_avg:156.23ms
step:1011/1480 train_time:156396ms step_avg:156.24ms
step:1012/1480 train_time:156563ms step_avg:156.25ms
step:1013/1480 train_time:156732ms step_avg:156.26ms
step:1014/1480 train_time:156899ms step_avg:156.27ms
step:1015/1480 train_time:157067ms step_avg:156.29ms
step:1016/1480 train_time:157236ms step_avg:156.30ms
step:1017/1480 train_time:157407ms step_avg:156.31ms
step:1018/1480 train_time:157576ms step_avg:156.33ms
step:1019/1480 train_time:157745ms step_avg:156.34ms
step:1020/1480 train_time:157914ms step_avg:156.35ms
step:1021/1480 train_time:158079ms step_avg:156.36ms
step:1022/1480 train_time:158247ms step_avg:156.37ms
step:1023/1480 train_time:158415ms step_avg:156.38ms
step:1024/1480 train_time:158582ms step_avg:156.39ms
step:1025/1480 train_time:158753ms step_avg:156.41ms
step:1026/1480 train_time:158919ms step_avg:156.42ms
step:1027/1480 train_time:159086ms step_avg:156.43ms
step:1028/1480 train_time:159263ms step_avg:156.45ms
step:1029/1480 train_time:159435ms step_avg:156.46ms
step:1030/1480 train_time:159602ms step_avg:156.47ms
step:1031/1480 train_time:159766ms step_avg:156.48ms
step:1032/1480 train_time:159939ms step_avg:156.50ms
step:1033/1480 train_time:160106ms step_avg:156.51ms
step:1034/1480 train_time:160274ms step_avg:156.52ms
step:1035/1480 train_time:160442ms step_avg:156.53ms
step:1036/1480 train_time:160607ms step_avg:156.54ms
step:1037/1480 train_time:160776ms step_avg:156.55ms
step:1038/1480 train_time:160943ms step_avg:156.56ms
step:1039/1480 train_time:161114ms step_avg:156.57ms
step:1040/1480 train_time:161281ms step_avg:156.58ms
step:1041/1480 train_time:161448ms step_avg:156.59ms
step:1042/1480 train_time:161612ms step_avg:156.60ms
step:1043/1480 train_time:161778ms step_avg:156.61ms
step:1044/1480 train_time:161943ms step_avg:156.62ms
step:1045/1480 train_time:162112ms step_avg:156.63ms
step:1046/1480 train_time:162282ms step_avg:156.64ms
step:1047/1480 train_time:162449ms step_avg:156.65ms
step:1048/1480 train_time:162615ms step_avg:156.66ms
step:1049/1480 train_time:162782ms step_avg:156.67ms
step:1050/1480 train_time:162952ms step_avg:156.68ms
step:1051/1480 train_time:163121ms step_avg:156.70ms
step:1052/1480 train_time:163288ms step_avg:156.71ms
step:1053/1480 train_time:163455ms step_avg:156.72ms
step:1054/1480 train_time:163623ms step_avg:156.73ms
step:1055/1480 train_time:163788ms step_avg:156.74ms
step:1056/1480 train_time:163954ms step_avg:156.74ms
step:1057/1480 train_time:164121ms step_avg:156.75ms
step:1058/1480 train_time:164289ms step_avg:156.76ms
step:1059/1480 train_time:164463ms step_avg:156.78ms
step:1060/1480 train_time:164631ms step_avg:156.79ms
step:1061/1480 train_time:164796ms step_avg:156.80ms
step:1062/1480 train_time:164963ms step_avg:156.81ms
step:1063/1480 train_time:165128ms step_avg:156.82ms
step:1064/1480 train_time:165290ms step_avg:156.82ms
step:1065/1480 train_time:165458ms step_avg:156.83ms
step:1066/1480 train_time:165626ms step_avg:156.84ms
step:1067/1480 train_time:165797ms step_avg:156.86ms
step:1068/1480 train_time:165965ms step_avg:156.87ms
step:1069/1480 train_time:166136ms step_avg:156.88ms
step:1070/1480 train_time:166304ms step_avg:156.89ms
step:1071/1480 train_time:166477ms step_avg:156.91ms
step:1072/1480 train_time:166644ms step_avg:156.92ms
step:1073/1480 train_time:166806ms step_avg:156.92ms
step:1074/1480 train_time:166972ms step_avg:156.93ms
step:1075/1480 train_time:167143ms step_avg:156.94ms
step:1076/1480 train_time:167308ms step_avg:156.95ms
step:1077/1480 train_time:167473ms step_avg:156.96ms
step:1078/1480 train_time:167648ms step_avg:156.97ms
step:1079/1480 train_time:167821ms step_avg:156.99ms
step:1080/1480 train_time:167991ms step_avg:157.00ms
step:1081/1480 train_time:168158ms step_avg:157.01ms
step:1082/1480 train_time:168325ms step_avg:157.02ms
step:1083/1480 train_time:168491ms step_avg:157.03ms
step:1084/1480 train_time:168659ms step_avg:157.04ms
step:1085/1480 train_time:168827ms step_avg:157.05ms
step:1086/1480 train_time:168994ms step_avg:157.06ms
step:1087/1480 train_time:169161ms step_avg:157.07ms
step:1088/1480 train_time:169330ms step_avg:157.08ms
step:1089/1480 train_time:169502ms step_avg:157.09ms
step:1090/1480 train_time:169673ms step_avg:157.10ms
step:1091/1480 train_time:169842ms step_avg:157.12ms
step:1092/1480 train_time:170009ms step_avg:157.12ms
step:1093/1480 train_time:170176ms step_avg:157.13ms
step:1094/1480 train_time:170344ms step_avg:157.14ms
step:1095/1480 train_time:170507ms step_avg:157.15ms
step:1096/1480 train_time:170677ms step_avg:157.16ms
step:1097/1480 train_time:170846ms step_avg:157.17ms
step:1098/1480 train_time:171016ms step_avg:157.18ms
step:1099/1480 train_time:171186ms step_avg:157.20ms
step:1100/1480 train_time:171359ms step_avg:157.21ms
step:1101/1480 train_time:171528ms step_avg:157.22ms
step:1102/1480 train_time:171699ms step_avg:157.23ms
step:1103/1480 train_time:171873ms step_avg:157.25ms
step:1104/1480 train_time:172041ms step_avg:157.26ms
step:1105/1480 train_time:172210ms step_avg:157.27ms
step:1106/1480 train_time:172379ms step_avg:157.28ms
step:1107/1480 train_time:172547ms step_avg:157.29ms
step:1108/1480 train_time:172712ms step_avg:157.30ms
step:1109/1480 train_time:172878ms step_avg:157.31ms
step:1110/1480 train_time:173045ms step_avg:157.31ms
step:1111/1480 train_time:173211ms step_avg:157.32ms
step:1112/1480 train_time:173381ms step_avg:157.33ms
step:1113/1480 train_time:173561ms step_avg:157.35ms
step:1114/1480 train_time:173733ms step_avg:157.37ms
step:1115/1480 train_time:173904ms step_avg:157.38ms
step:1116/1480 train_time:174070ms step_avg:157.39ms
step:1117/1480 train_time:174244ms step_avg:157.40ms
step:1118/1480 train_time:174418ms step_avg:157.42ms
step:1119/1480 train_time:174584ms step_avg:157.42ms
step:1120/1480 train_time:174753ms step_avg:157.43ms
step:1121/1480 train_time:174924ms step_avg:157.45ms
step:1122/1480 train_time:175089ms step_avg:157.45ms
step:1123/1480 train_time:175257ms step_avg:157.46ms
step:1124/1480 train_time:175425ms step_avg:157.47ms
step:1125/1480 train_time:175593ms step_avg:157.48ms
step:1125/1480 val_loss:3.3860 train_time:175660ms step_avg:157.54ms
step:1126/1480 train_time:175764ms step_avg:157.49ms
step:1127/1480 train_time:175933ms step_avg:157.50ms
step:1128/1480 train_time:176106ms step_avg:157.52ms
step:1129/1480 train_time:176280ms step_avg:157.53ms
step:1130/1480 train_time:176449ms step_avg:157.54ms
step:1131/1480 train_time:176627ms step_avg:157.56ms
step:1132/1480 train_time:176792ms step_avg:157.57ms
step:1133/1480 train_time:176964ms step_avg:157.58ms
step:1134/1480 train_time:177134ms step_avg:157.59ms
step:1135/1480 train_time:177304ms step_avg:157.60ms
step:1136/1480 train_time:177474ms step_avg:157.61ms
step:1137/1480 train_time:177643ms step_avg:157.62ms
step:1138/1480 train_time:177812ms step_avg:157.64ms
step:1139/1480 train_time:177983ms step_avg:157.65ms
step:1140/1480 train_time:178151ms step_avg:157.66ms
step:1141/1480 train_time:178325ms step_avg:157.67ms
step:1142/1480 train_time:178493ms step_avg:157.68ms
step:1143/1480 train_time:178665ms step_avg:157.69ms
step:1144/1480 train_time:178833ms step_avg:157.70ms
step:1145/1480 train_time:178998ms step_avg:157.71ms
step:1146/1480 train_time:179169ms step_avg:157.72ms
step:1147/1480 train_time:179337ms step_avg:157.73ms
step:1148/1480 train_time:179505ms step_avg:157.74ms
step:1149/1480 train_time:179675ms step_avg:157.75ms
step:1150/1480 train_time:179842ms step_avg:157.76ms
step:1151/1480 train_time:180013ms step_avg:157.77ms
step:1152/1480 train_time:180186ms step_avg:157.78ms
step:1153/1480 train_time:180359ms step_avg:157.79ms
step:1154/1480 train_time:180526ms step_avg:157.80ms
step:1155/1480 train_time:180698ms step_avg:157.81ms
step:1156/1480 train_time:180877ms step_avg:157.83ms
step:1157/1480 train_time:181047ms step_avg:157.84ms
step:1158/1480 train_time:181213ms step_avg:157.85ms
step:1159/1480 train_time:181381ms step_avg:157.86ms
step:1160/1480 train_time:181547ms step_avg:157.87ms
step:1161/1480 train_time:181716ms step_avg:157.88ms
step:1162/1480 train_time:181887ms step_avg:157.89ms
step:1163/1480 train_time:182056ms step_avg:157.90ms
step:1164/1480 train_time:182224ms step_avg:157.91ms
step:1165/1480 train_time:182390ms step_avg:157.91ms
step:1166/1480 train_time:182558ms step_avg:157.92ms
step:1167/1480 train_time:182726ms step_avg:157.93ms
step:1168/1480 train_time:182895ms step_avg:157.94ms
step:1169/1480 train_time:183065ms step_avg:157.95ms
step:1170/1480 train_time:183233ms step_avg:157.96ms
step:1171/1480 train_time:183399ms step_avg:157.97ms
step:1172/1480 train_time:183568ms step_avg:157.98ms
step:1173/1480 train_time:183738ms step_avg:157.99ms
step:1174/1480 train_time:183921ms step_avg:158.01ms
step:1175/1480 train_time:184093ms step_avg:158.02ms
step:1176/1480 train_time:184265ms step_avg:158.03ms
step:1177/1480 train_time:184441ms step_avg:158.05ms
step:1178/1480 train_time:184610ms step_avg:158.06ms
step:1179/1480 train_time:184775ms step_avg:158.06ms
step:1180/1480 train_time:184956ms step_avg:158.08ms
step:1181/1480 train_time:185125ms step_avg:158.09ms
step:1182/1480 train_time:185292ms step_avg:158.10ms
step:1183/1480 train_time:185463ms step_avg:158.11ms
step:1184/1480 train_time:185630ms step_avg:158.12ms
step:1185/1480 train_time:185804ms step_avg:158.13ms
step:1186/1480 train_time:185975ms step_avg:158.14ms
step:1187/1480 train_time:186155ms step_avg:158.16ms
step:1188/1480 train_time:186322ms step_avg:158.17ms
step:1189/1480 train_time:186494ms step_avg:158.18ms
step:1190/1480 train_time:186661ms step_avg:158.19ms
step:1191/1480 train_time:186831ms step_avg:158.20ms
step:1192/1480 train_time:186998ms step_avg:158.20ms
step:1193/1480 train_time:187166ms step_avg:158.21ms
step:1194/1480 train_time:187334ms step_avg:158.22ms
step:1195/1480 train_time:187508ms step_avg:158.23ms
step:1196/1480 train_time:187690ms step_avg:158.25ms
step:1197/1480 train_time:187861ms step_avg:158.27ms
step:1198/1480 train_time:188044ms step_avg:158.29ms
step:1199/1480 train_time:188213ms step_avg:158.30ms
step:1200/1480 train_time:188382ms step_avg:158.30ms
step:1201/1480 train_time:188549ms step_avg:158.31ms
step:1202/1480 train_time:188731ms step_avg:158.33ms
step:1203/1480 train_time:188908ms step_avg:158.35ms
step:1204/1480 train_time:189082ms step_avg:158.36ms
step:1205/1480 train_time:189250ms step_avg:158.37ms
step:1206/1480 train_time:189417ms step_avg:158.38ms
step:1207/1480 train_time:189588ms step_avg:158.39ms
step:1208/1480 train_time:189754ms step_avg:158.39ms
step:1209/1480 train_time:189927ms step_avg:158.40ms
step:1210/1480 train_time:190103ms step_avg:158.42ms
step:1211/1480 train_time:190278ms step_avg:158.43ms
step:1212/1480 train_time:190450ms step_avg:158.44ms
step:1213/1480 train_time:190623ms step_avg:158.46ms
step:1214/1480 train_time:190800ms step_avg:158.47ms
step:1215/1480 train_time:190975ms step_avg:158.49ms
step:1216/1480 train_time:191147ms step_avg:158.50ms
step:1217/1480 train_time:191324ms step_avg:158.51ms
step:1218/1480 train_time:191494ms step_avg:158.52ms
step:1219/1480 train_time:191674ms step_avg:158.54ms
step:1220/1480 train_time:191844ms step_avg:158.55ms
step:1221/1480 train_time:192012ms step_avg:158.56ms
step:1222/1480 train_time:192178ms step_avg:158.56ms
step:1223/1480 train_time:192349ms step_avg:158.57ms
step:1224/1480 train_time:192527ms step_avg:158.59ms
step:1225/1480 train_time:192698ms step_avg:158.60ms
step:1226/1480 train_time:192871ms step_avg:158.61ms
step:1227/1480 train_time:193045ms step_avg:158.62ms
step:1228/1480 train_time:193214ms step_avg:158.63ms
step:1229/1480 train_time:193388ms step_avg:158.64ms
step:1230/1480 train_time:193568ms step_avg:158.66ms
step:1231/1480 train_time:193744ms step_avg:158.68ms
step:1232/1480 train_time:193918ms step_avg:158.69ms
step:1233/1480 train_time:194089ms step_avg:158.70ms
step:1234/1480 train_time:194259ms step_avg:158.71ms
step:1235/1480 train_time:194434ms step_avg:158.72ms
step:1236/1480 train_time:194602ms step_avg:158.73ms
step:1237/1480 train_time:194773ms step_avg:158.74ms
step:1238/1480 train_time:194958ms step_avg:158.76ms
step:1239/1480 train_time:195128ms step_avg:158.77ms
step:1240/1480 train_time:195299ms step_avg:158.78ms
step:1241/1480 train_time:195473ms step_avg:158.79ms
step:1242/1480 train_time:195642ms step_avg:158.80ms
step:1243/1480 train_time:195815ms step_avg:158.81ms
step:1244/1480 train_time:195983ms step_avg:158.82ms
step:1245/1480 train_time:196151ms step_avg:158.83ms
step:1246/1480 train_time:196321ms step_avg:158.84ms
step:1247/1480 train_time:196490ms step_avg:158.84ms
step:1248/1480 train_time:196658ms step_avg:158.85ms
step:1249/1480 train_time:196827ms step_avg:158.86ms
step:1250/1480 train_time:196994ms step_avg:158.87ms
step:1250/1480 val_loss:3.3360 train_time:197066ms step_avg:158.92ms
step:1251/1480 train_time:197175ms step_avg:158.88ms
step:1252/1480 train_time:197345ms step_avg:158.89ms
step:1253/1480 train_time:197514ms step_avg:158.90ms
step:1254/1480 train_time:197685ms step_avg:158.91ms
step:1255/1480 train_time:197871ms step_avg:158.93ms
step:1256/1480 train_time:198045ms step_avg:158.94ms
step:1257/1480 train_time:198215ms step_avg:158.95ms
step:1258/1480 train_time:198391ms step_avg:158.97ms
step:1259/1480 train_time:198564ms step_avg:158.98ms
step:1260/1480 train_time:198731ms step_avg:158.98ms
step:1261/1480 train_time:198903ms step_avg:159.00ms
step:1262/1480 train_time:199080ms step_avg:159.01ms
step:1263/1480 train_time:199254ms step_avg:159.02ms
step:1264/1480 train_time:199420ms step_avg:159.03ms
step:1265/1480 train_time:199589ms step_avg:159.04ms
step:1266/1480 train_time:199761ms step_avg:159.05ms
step:1267/1480 train_time:199931ms step_avg:159.05ms
step:1268/1480 train_time:200104ms step_avg:159.07ms
step:1269/1480 train_time:200278ms step_avg:159.08ms
step:1270/1480 train_time:200447ms step_avg:159.09ms
step:1271/1480 train_time:200617ms step_avg:159.09ms
step:1272/1480 train_time:200783ms step_avg:159.10ms
step:1273/1480 train_time:200954ms step_avg:159.11ms
step:1274/1480 train_time:201128ms step_avg:159.12ms
step:1275/1480 train_time:201295ms step_avg:159.13ms
step:1276/1480 train_time:201462ms step_avg:159.13ms
step:1277/1480 train_time:201635ms step_avg:159.14ms
step:1278/1480 train_time:201803ms step_avg:159.15ms
step:1279/1480 train_time:201974ms step_avg:159.16ms
step:1280/1480 train_time:202152ms step_avg:159.18ms
step:1281/1480 train_time:202321ms step_avg:159.18ms
step:1282/1480 train_time:202487ms step_avg:159.19ms
step:1283/1480 train_time:202657ms step_avg:159.20ms
step:1284/1480 train_time:202827ms step_avg:159.20ms
step:1285/1480 train_time:202996ms step_avg:159.21ms
step:1286/1480 train_time:203166ms step_avg:159.22ms
step:1287/1480 train_time:203340ms step_avg:159.23ms
step:1288/1480 train_time:203513ms step_avg:159.24ms
step:1289/1480 train_time:203695ms step_avg:159.26ms
step:1290/1480 train_time:203875ms step_avg:159.28ms
step:1291/1480 train_time:204048ms step_avg:159.29ms
step:1292/1480 train_time:204222ms step_avg:159.30ms
step:1293/1480 train_time:204396ms step_avg:159.31ms
step:1294/1480 train_time:204568ms step_avg:159.32ms
step:1295/1480 train_time:204739ms step_avg:159.33ms
step:1296/1480 train_time:204914ms step_avg:159.34ms
step:1297/1480 train_time:205085ms step_avg:159.35ms
step:1298/1480 train_time:205255ms step_avg:159.36ms
step:1299/1480 train_time:205426ms step_avg:159.37ms
step:1300/1480 train_time:205593ms step_avg:159.37ms
step:1301/1480 train_time:205762ms step_avg:159.38ms
step:1302/1480 train_time:205936ms step_avg:159.39ms
step:1303/1480 train_time:206113ms step_avg:159.41ms
step:1304/1480 train_time:206288ms step_avg:159.42ms
step:1305/1480 train_time:206456ms step_avg:159.43ms
step:1306/1480 train_time:206631ms step_avg:159.44ms
step:1307/1480 train_time:206798ms step_avg:159.44ms
step:1308/1480 train_time:206968ms step_avg:159.45ms
step:1309/1480 train_time:207138ms step_avg:159.46ms
step:1310/1480 train_time:207309ms step_avg:159.47ms
step:1311/1480 train_time:207477ms step_avg:159.48ms
step:1312/1480 train_time:207652ms step_avg:159.49ms
step:1313/1480 train_time:207821ms step_avg:159.49ms
step:1314/1480 train_time:207994ms step_avg:159.50ms
step:1315/1480 train_time:208165ms step_avg:159.51ms
step:1316/1480 train_time:208332ms step_avg:159.52ms
step:1317/1480 train_time:208505ms step_avg:159.53ms
step:1318/1480 train_time:208687ms step_avg:159.55ms
step:1319/1480 train_time:208864ms step_avg:159.56ms
step:1320/1480 train_time:209040ms step_avg:159.57ms
step:1321/1480 train_time:209213ms step_avg:159.58ms
step:1322/1480 train_time:209394ms step_avg:159.60ms
step:1323/1480 train_time:209568ms step_avg:159.61ms
step:1324/1480 train_time:209744ms step_avg:159.62ms
step:1325/1480 train_time:209924ms step_avg:159.64ms
step:1326/1480 train_time:210099ms step_avg:159.65ms
step:1327/1480 train_time:210269ms step_avg:159.66ms
step:1328/1480 train_time:210438ms step_avg:159.66ms
step:1329/1480 train_time:210634ms step_avg:159.69ms
step:1330/1480 train_time:210814ms step_avg:159.71ms
step:1331/1480 train_time:210983ms step_avg:159.71ms
step:1332/1480 train_time:211157ms step_avg:159.73ms
step:1333/1480 train_time:211332ms step_avg:159.74ms
step:1334/1480 train_time:211505ms step_avg:159.75ms
step:1335/1480 train_time:211674ms step_avg:159.75ms
step:1336/1480 train_time:211858ms step_avg:159.77ms
step:1337/1480 train_time:212035ms step_avg:159.79ms
step:1338/1480 train_time:212209ms step_avg:159.80ms
step:1339/1480 train_time:212382ms step_avg:159.81ms
step:1340/1480 train_time:212554ms step_avg:159.81ms
step:1341/1480 train_time:212723ms step_avg:159.82ms
step:1342/1480 train_time:212897ms step_avg:159.83ms
step:1343/1480 train_time:213068ms step_avg:159.84ms
step:1344/1480 train_time:213239ms step_avg:159.85ms
step:1345/1480 train_time:213418ms step_avg:159.86ms
step:1346/1480 train_time:213588ms step_avg:159.87ms
step:1347/1480 train_time:213757ms step_avg:159.88ms
step:1348/1480 train_time:213928ms step_avg:159.89ms
step:1349/1480 train_time:214099ms step_avg:159.89ms
step:1350/1480 train_time:214275ms step_avg:159.91ms
step:1351/1480 train_time:214445ms step_avg:159.91ms
step:1352/1480 train_time:214615ms step_avg:159.92ms
step:1353/1480 train_time:214792ms step_avg:159.93ms
step:1354/1480 train_time:214964ms step_avg:159.94ms
step:1355/1480 train_time:215131ms step_avg:159.95ms
step:1356/1480 train_time:215305ms step_avg:159.96ms
step:1357/1480 train_time:215478ms step_avg:159.97ms
step:1358/1480 train_time:215649ms step_avg:159.98ms
step:1359/1480 train_time:215820ms step_avg:159.99ms
step:1360/1480 train_time:215995ms step_avg:160.00ms
step:1361/1480 train_time:216174ms step_avg:160.01ms
step:1362/1480 train_time:216349ms step_avg:160.02ms
step:1363/1480 train_time:216530ms step_avg:160.04ms
step:1364/1480 train_time:216698ms step_avg:160.04ms
step:1365/1480 train_time:216866ms step_avg:160.05ms
step:1366/1480 train_time:217038ms step_avg:160.06ms
step:1367/1480 train_time:217209ms step_avg:160.07ms
step:1368/1480 train_time:217383ms step_avg:160.08ms
step:1369/1480 train_time:217563ms step_avg:160.09ms
step:1370/1480 train_time:217741ms step_avg:160.10ms
step:1371/1480 train_time:217913ms step_avg:160.11ms
step:1372/1480 train_time:218089ms step_avg:160.12ms
step:1373/1480 train_time:218257ms step_avg:160.13ms
step:1374/1480 train_time:218433ms step_avg:160.14ms
step:1375/1480 train_time:218605ms step_avg:160.15ms
step:1375/1480 val_loss:3.2972 train_time:218673ms step_avg:160.20ms
step:1376/1480 train_time:218781ms step_avg:160.16ms
step:1377/1480 train_time:218953ms step_avg:160.17ms
step:1378/1480 train_time:219122ms step_avg:160.18ms
step:1379/1480 train_time:219297ms step_avg:160.19ms
step:1380/1480 train_time:219470ms step_avg:160.20ms
step:1381/1480 train_time:219650ms step_avg:160.21ms
step:1382/1480 train_time:219822ms step_avg:160.22ms
step:1383/1480 train_time:219994ms step_avg:160.23ms
step:1384/1480 train_time:220172ms step_avg:160.24ms
step:1385/1480 train_time:220338ms step_avg:160.25ms
step:1386/1480 train_time:220510ms step_avg:160.25ms
step:1387/1480 train_time:220682ms step_avg:160.26ms
step:1388/1480 train_time:220851ms step_avg:160.27ms
step:1389/1480 train_time:221025ms step_avg:160.28ms
step:1390/1480 train_time:221192ms step_avg:160.28ms
step:1391/1480 train_time:221362ms step_avg:160.29ms
step:1392/1480 train_time:221534ms step_avg:160.30ms
step:1393/1480 train_time:221705ms step_avg:160.31ms
step:1394/1480 train_time:221876ms step_avg:160.31ms
step:1395/1480 train_time:222045ms step_avg:160.32ms
step:1396/1480 train_time:222212ms step_avg:160.33ms
step:1397/1480 train_time:222380ms step_avg:160.33ms
step:1398/1480 train_time:222547ms step_avg:160.34ms
step:1399/1480 train_time:222717ms step_avg:160.34ms
step:1400/1480 train_time:222894ms step_avg:160.36ms
step:1401/1480 train_time:223060ms step_avg:160.36ms
step:1402/1480 train_time:223231ms step_avg:160.37ms
step:1403/1480 train_time:223409ms step_avg:160.38ms
step:1404/1480 train_time:223580ms step_avg:160.39ms
step:1405/1480 train_time:223753ms step_avg:160.40ms
step:1406/1480 train_time:223927ms step_avg:160.41ms
step:1407/1480 train_time:224096ms step_avg:160.41ms
step:1408/1480 train_time:224265ms step_avg:160.42ms
step:1409/1480 train_time:224448ms step_avg:160.43ms
step:1410/1480 train_time:224618ms step_avg:160.44ms
step:1411/1480 train_time:224786ms step_avg:160.45ms
step:1412/1480 train_time:224957ms step_avg:160.45ms
step:1413/1480 train_time:225127ms step_avg:160.46ms
step:1414/1480 train_time:225299ms step_avg:160.47ms
step:1415/1480 train_time:225473ms step_avg:160.48ms
step:1416/1480 train_time:225659ms step_avg:160.50ms
step:1417/1480 train_time:225832ms step_avg:160.51ms
step:1418/1480 train_time:226004ms step_avg:160.51ms
step:1419/1480 train_time:226179ms step_avg:160.52ms
step:1420/1480 train_time:226353ms step_avg:160.53ms
step:1421/1480 train_time:226528ms step_avg:160.54ms
step:1422/1480 train_time:226701ms step_avg:160.55ms
step:1423/1480 train_time:226871ms step_avg:160.56ms
step:1424/1480 train_time:227048ms step_avg:160.57ms
step:1425/1480 train_time:227228ms step_avg:160.59ms
step:1426/1480 train_time:227399ms step_avg:160.59ms
step:1427/1480 train_time:227574ms step_avg:160.60ms
step:1428/1480 train_time:227745ms step_avg:160.61ms
step:1429/1480 train_time:227914ms step_avg:160.62ms
step:1430/1480 train_time:228088ms step_avg:160.63ms
step:1431/1480 train_time:228263ms step_avg:160.64ms
step:1432/1480 train_time:228439ms step_avg:160.65ms
step:1433/1480 train_time:228618ms step_avg:160.66ms
step:1434/1480 train_time:228799ms step_avg:160.67ms
step:1435/1480 train_time:228975ms step_avg:160.68ms
step:1436/1480 train_time:229148ms step_avg:160.69ms
step:1437/1480 train_time:229318ms step_avg:160.70ms
step:1438/1480 train_time:229487ms step_avg:160.71ms
step:1439/1480 train_time:229662ms step_avg:160.72ms
step:1440/1480 train_time:229831ms step_avg:160.72ms
step:1441/1480 train_time:230003ms step_avg:160.73ms
step:1442/1480 train_time:230181ms step_avg:160.74ms
step:1443/1480 train_time:230370ms step_avg:160.76ms
step:1444/1480 train_time:230541ms step_avg:160.77ms
step:1445/1480 train_time:230712ms step_avg:160.77ms
step:1446/1480 train_time:230886ms step_avg:160.78ms
step:1447/1480 train_time:231063ms step_avg:160.80ms
step:1448/1480 train_time:231234ms step_avg:160.80ms
step:1449/1480 train_time:231408ms step_avg:160.81ms
step:1450/1480 train_time:231582ms step_avg:160.82ms
step:1451/1480 train_time:231751ms step_avg:160.83ms
step:1452/1480 train_time:231926ms step_avg:160.84ms
step:1453/1480 train_time:232096ms step_avg:160.84ms
step:1454/1480 train_time:232270ms step_avg:160.85ms
step:1455/1480 train_time:232449ms step_avg:160.86ms
step:1456/1480 train_time:232622ms step_avg:160.87ms
step:1457/1480 train_time:232792ms step_avg:160.88ms
step:1458/1480 train_time:232962ms step_avg:160.89ms
step:1459/1480 train_time:233140ms step_avg:160.90ms
step:1460/1480 train_time:233312ms step_avg:160.90ms
step:1461/1480 train_time:233487ms step_avg:160.91ms
step:1462/1480 train_time:233659ms step_avg:160.92ms
step:1463/1480 train_time:233836ms step_avg:160.93ms
step:1464/1480 train_time:234009ms step_avg:160.94ms
step:1465/1480 train_time:234184ms step_avg:160.95ms
step:1466/1480 train_time:234354ms step_avg:160.96ms
step:1467/1480 train_time:234529ms step_avg:160.97ms
step:1468/1480 train_time:234700ms step_avg:160.97ms
step:1469/1480 train_time:234872ms step_avg:160.98ms
step:1470/1480 train_time:235051ms step_avg:160.99ms
step:1471/1480 train_time:235237ms step_avg:161.01ms
step:1472/1480 train_time:235420ms step_avg:161.03ms
step:1473/1480 train_time:235591ms step_avg:161.03ms
step:1474/1480 train_time:235769ms step_avg:161.04ms
step:1475/1480 train_time:235950ms step_avg:161.06ms
step:1476/1480 train_time:236123ms step_avg:161.07ms
step:1477/1480 train_time:236304ms step_avg:161.08ms
step:1478/1480 train_time:236487ms step_avg:161.09ms
step:1479/1480 train_time:236663ms step_avg:161.10ms
step:1480/1480 train_time:236836ms step_avg:161.11ms
step:1480/1480 val_loss:3.2785 train_time:236907ms step_avg:161.16ms
