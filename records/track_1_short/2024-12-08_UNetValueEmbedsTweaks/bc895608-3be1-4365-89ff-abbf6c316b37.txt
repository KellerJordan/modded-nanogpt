import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
from dataclasses import dataclass
from pathlib import Path

import torch
from torch import nn
import torch.nn.functional as F
import torch.distributed as dist
import torch._inductor.config as config
from torch.nn.parallel import DistributedDataParallel as DDP
# Use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention

# -----------------------------------------------------------------------------
# Muon optimizer

def zeropower_via_svd(G, steps=None):
    U, S, V = G.svd()
    return U @ V.T

@torch.compile
def zeropower_via_newtonschulz5(G, steps=10, eps=1e-7):
    """
    Newton-Schulz iteration to compute the zeroth power / orthogonalization of G. We opt to use a
    quintic iteration whose coefficients are selected to maximize the slope at zero. For the purpose
    of minimizing steps, it turns out to be empirically effective to keep increasing the slope at
    zero even beyond the point where the iteration no longer converges all the way to one everywhere
    on the interval. This iteration therefore does not produce UV^T but rather something like US'V^T
    where S' is diagonal with S_{ii}' ~ Uniform(0.5, 1.5), which turns out not to hurt model
    performance at all relative to UV^T, where USV^T = G is the SVD.
    """
    assert len(G.shape) == 2
    a, b, c = (3.4445, -4.7750,  2.0315)
    X = G.bfloat16()
    X /= (X.norm() + eps) # ensure top singular value <= 1
    if G.size(0) > G.size(1):
        X = X.T
    for _ in range(steps):
        A = X @ X.T
        B = b * A + c * A @ A # adapted from suggestion by @jxbz, @leloykun, and @YouJiacheng
        X = a * X + B @ X
    if G.size(0) > G.size(1):
        X = X.T
    return X

zeropower_backends = dict(svd=zeropower_via_svd, newtonschulz5=zeropower_via_newtonschulz5)

class Muon(torch.optim.Optimizer):
    """
    Muon - MomentUm Orthogonalized by Newton-schulz

    Muon internally runs standard SGD-momentum, and then performs an orthogonalization post-
    processing step, in which each 2D parameter's update is replaced with the nearest orthogonal
    matrix. To efficiently orthogonalize each update, we use a Newton-Schulz iteration, which has
    the advantage that it can be stably run in bfloat16 on the GPU.

    Some warnings:
    - This optimizer assumes that all parameters passed in are 2D.
    - It should not be used for the embedding layer, the final fully connected layer, or any {0,1}-D
    parameters; those should all be optimized by a standard method (e.g., AdamW).
    - To use it with 4D convolutional filters, it works well to just flatten their last 3 dimensions.
    - We believe it is unlikely to work well for training with small batch size.
    - We believe it may not work well for finetuning pretrained models, but we haven't tested this.
    - We have not yet tried this optimizer for training scenarios larger than NanoGPT (124M).

    Arguments:
        lr: The learning rate used by the internal SGD.
        momentum: The momentum used by the internal SGD.
        nesterov: Whether to use Nesterov-style momentum in the internal SGD. (recommended)
        backend: The chosen backend for the orthogonalization step. (recommended: 'newtonschulz5')
        backend_steps: The number of iteration steps to use in the backend, if it is iterative.
    """
    def __init__(self, params, lr=0.02, momentum=0.95, nesterov=True,
                 backend='newtonschulz5', backend_steps=5):
        self.num_process = int(os.environ['WORLD_SIZE'])
        self.rank = int(os.environ["RANK"])
        defaults = dict(lr=lr, momentum=momentum, nesterov=nesterov, backend=backend, backend_steps=backend_steps)
        params: "list[torch.Tensor]" = list(params)
        assert all(isinstance(p, torch.Tensor) for p in params)
        sizes = {p.numel() for p in params}
        param_groups = [
            {
                "params": [p for p in params if p.numel() == size],
                "update_buffer": [
                    torch.empty(size, device="cuda", dtype=torch.bfloat16)
                    for _ in range(self.num_process)
                ],
            }
            for size in sizes
        ]
        super().__init__(param_groups, defaults)

    def step(self):
        for group in self.param_groups:
            lr: float = group["lr"]
            momentum: float = group["momentum"]
            nesterov: bool = group["nesterov"]
            zeropower_backend = zeropower_backends[group["backend"]]
            backend_steps: int = group["backend_steps"]
            update_buffers: "list[torch.Tensor]" = group["update_buffer"]
            # generate weight updates in distributed fashion
            params: "list[torch.Tensor]" = group["params"]
            assert len(params) % self.num_process == 0
            handle = None
            params_world = None
            def update_prev():
                if params_world is None:
                    return
                assert handle is not None
                handle.wait()
                for p_world, g_world in zip(params_world, update_buffers):
                    p_world.data.add_(
                        g_world.view_as(p_world),
                        alpha=-lr * max(1, p_world.size(0) / p_world.size(1)) ** 0.5,
                    )
            for base_i in range(len(params))[::self.num_process]:
                p = params[base_i + self.rank]
                g = p.grad
                assert g is not None
                state = self.state[p] 
                if "momentum_buffer" not in state:
                    state["momentum_buffer"] = torch.zeros_like(g)
                buf: torch.Tensor = state["momentum_buffer"]
                buf.lerp_(g, 1 - momentum)
                g = g.lerp_(buf, momentum) if nesterov else buf
                g = zeropower_backend(g, steps=backend_steps).flatten()
                update_prev()
                handle = dist.all_gather(update_buffers, g, async_op=True)
                params_world = params[base_i : base_i + self.num_process]
            update_prev()


# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the GPT-2 model

def norm(x):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):

    def __init__(self, in_features, out_features):
        super().__init__(in_features, out_features, bias=False)

    def forward(self, x):
        return F.linear(x, self.weight.to(x.dtype))

class Rotary(torch.nn.Module):

    def __init__(self, dim, base=10000):
        super().__init__()
        self.register_buffer('inv_freq', (1 / base) ** (torch.arange(0, dim, 2) / dim))
        self.seq_len_cached = None
        self.cos_cached = None
        self.sin_cached = None

    def forward(self, x):
        seq_len = x.shape[1]
        if seq_len != self.seq_len_cached:
            t = torch.arange(seq_len, device=x.device)
            freqs = torch.outer(t, self.inv_freq)
            self.seq_len_cached = seq_len
            self.cos_cached = freqs.cos()
            self.sin_cached = freqs.sin()
        cos, sin = self.cos_cached[None, :, None, :], self.sin_cached[None, :, None, :]
        # apply_rotary_emb(x, cos, sin)
        x1, x2 = x.chunk(2, dim=3)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x)

class CausalSelfAttention(nn.Module):

    def __init__(self, dim, n_head):
        super().__init__()
        assert dim % n_head == 0
        self.n_head = n_head
        self.c_q = CastedLinear(dim, dim)
        self.c_k = CastedLinear(dim, dim)
        self.c_v = CastedLinear(dim, dim)
        # value residual lambda
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5])) # @Grad62304977
        # rotary embeddings
        self.rotary = Rotary(dim // n_head) # dim // n_head = head_dim
        # output projection
        self.c_proj = CastedLinear(dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor, vi: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q: torch.Tensor = self.c_q(x).view(B, T, self.n_head, -1)
        k: torch.Tensor = self.c_k(x).view(B, T, self.n_head, -1)
        v: torch.Tensor = self.c_v(x).view(B, T, self.n_head, -1)
        v = self.lambdas[0] * v + self.lambdas[1] * vi.view_as(v) # @Grad62304977
        q, k = norm(q), norm(k) # QK norm suggested by @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask)
        y = y.transpose(1, 2).contiguous().view_as(x) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):

    def __init__(self, dim: int):
        super().__init__()
        self.c_fc   = CastedLinear(dim, 4 * dim)
        self.c_proj = CastedLinear(4 * dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor) -> torch.Tensor:
        x = self.c_fc(x)
        x = F.relu(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.attn = CausalSelfAttention(config.n_embd, config.n_head)
        self.mlp = MLP(config.n_embd)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: torch.Tensor, vi: torch.Tensor, x0: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        x = x + self.attn(norm(x), vi, block_mask)
        x = x + self.mlp(norm(x))
        return x

# -----------------------------------------------------------------------------
# The main GPT-2 model

@dataclass
class GPTConfig:
    vocab_size : int = 50304
    n_layer : int = 12
    n_head : int = 6 # head dim 128 suggested by @Grad62304977
    n_embd : int = 768
    lm_head_softcap : int = 30

class GPT(nn.Module):

    def __init__(self, config: GPTConfig):
        super().__init__()
        self.n_layer = config.n_layer
        self.lm_head_softcap = config.lm_head_softcap

        # U-net design by @brendanh0gan
        self.num_encoder_layers = config.n_layer // 2 # Half of the layers for encoder
        self.num_decoder_layers = config.n_layer - self.num_encoder_layers # Remaining for decoder
        # Add learnable skip connection weights for decoder layers
        self.skip_weights = nn.Parameter(torch.ones(self.num_decoder_layers))

        self.transformer = nn.ModuleDict(dict(
            wte = nn.Embedding(config.vocab_size, config.n_embd),
            # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual learning
            # U-net structure on token value embeddings by @leloykun
            vte = nn.Embedding(config.vocab_size, config.n_embd*self.num_encoder_layers),
            h = nn.ModuleList([Block(config) for _ in range(config.n_layer)]),
        ))
        self.lm_head = CastedLinear(config.n_embd, config.vocab_size)
        self.lm_head.weight.data.zero_() # @Grad62304977

    def forward(self, idx: torch.Tensor, target: torch.Tensor, sliding_window: torch.Tensor) -> torch.Tensor:
        BLOCK_SIZE = 128
        assert idx.ndim == 1
        docs = (idx == 50256).cumsum(0)
        docs_low = docs.reshape(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.reshape(-1, BLOCK_SIZE)[:, -1].contiguous()
        def document_sliding_window_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            window_mask = q_idx - kv_idx < sliding_window
            return causal_mask & document_mask & window_mask

        S = len(idx)
        def create_sliding_window_causal_mask(S: int, sliding_window: torch.Tensor):
            kv_idx = block_idx = torch.arange(S // BLOCK_SIZE, dtype=torch.int32, device="cuda")
            q_idx = block_idx[:, None]
            causal_mask = q_idx >= kv_idx
            document_mask = (docs_low[q_idx] <= docs_high[kv_idx]) & (docs_low[kv_idx] <= docs_high[q_idx])
            window_mask = q_idx - kv_idx < ((sliding_window + BLOCK_SIZE - 1) // BLOCK_SIZE)
            dense_mask = causal_mask & document_mask & window_mask
            dense_mask = dense_mask.to(torch.int32)
            num_blocks = dense_mask.sum(dim=-1).to(torch.int32)
            indices = torch.argsort(dense_mask, dim=-1, descending=True, stable=True).to(torch.int32)
            num_blocks = num_blocks[None, None, :].contiguous()
            indices = indices[None, None, :].contiguous()
            return BlockMask.from_kv_blocks(num_blocks, indices, BLOCK_SIZE=BLOCK_SIZE, mask_mod=document_sliding_window_causal)
        block_mask = create_sliding_window_causal_mask(S, sliding_window)

        # forward the GPT model itself
        x = self.transformer.wte(idx[None]) # token embeddings of shape (b, t, n_embd)
        x = norm(x) # @Grad62304977
        x0 = x
        vi = self.transformer.vte(idx[None]).chunk(self.num_encoder_layers, dim=-1)

        # Store outputs for U-Net skip connections
        skip_connections = []
        # Encoder pass - process only the first half of the blocks
        for i in range(self.num_encoder_layers):
            x = self.transformer.h[i](x, vi[i], x0, block_mask)
            skip_connections.append(x)
        # Decoder pass - process the remaining blocks with weighted skip connections
        for i in range(self.num_decoder_layers):
            x = x + self.skip_weights[i] * skip_connections.pop()
            # U-net structure on token value embeddings by @leloykun
            x = self.transformer.h[self.num_encoder_layers + i](x, vi[self.num_encoder_layers-1-i], x0, block_mask)

        x = norm(x)
        logits = self.lm_head(x)
        logits = self.lm_head_softcap * torch.tanh(logits / self.lm_head_softcap) # @Grad62304977
        logits = logits.float()
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target.view(-1))
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _peek_data_shard(file: Path):
    # only reads the header, returns header data
    # header is 256 int32
    header = torch.from_file(f"{file}", False, 256, dtype=torch.int32)
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    return int(header[2]) # number of tokens (claimed)

def _load_data_shard(file: Path, ntok: int):
    with file.open("rb") as f:
        tokens = torch.empty(ntok, dtype=torch.uint16, pin_memory=True)
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy())
        assert nbytes == 2 * ntok, "number of tokens read does not match header?"
    return tokens

class DistributedDataLoader:
    def __init__(self, filename_pattern, T, process_rank, num_processes):
        self.process_rank = process_rank
        self.num_processes = num_processes
        self.T = T

        # glob files that match the pattern
        self.files = sorted(Path.cwd().glob(filename_pattern))
        assert len(self.files) > 0, f"did not find any files that match the pattern {filename_pattern}"

        # load and validate all data shards, count number of tokens in total
        self.ntoks = [_peek_data_shard(file) for file in self.files]
        assert min(self.ntoks) >= num_processes * T + 1
        self.ntok_total = sum(self.ntoks)

        self.reset()

    def reset(self):
        self.current_shard = -1
        self.advance()

    def advance(self): # advance to next data shard
        self.current_shard = (self.current_shard + 1) % len(self.files)
        self.current_position = self.process_rank * self.T
        self.tokens = _load_data_shard(self.files[self.current_shard], self.ntoks[self.current_shard])

    def next_batch(self):
        batch_size = self.T * self.num_processes
        buf = self.tokens[self.current_position:self.current_position+self.T+1]
        # host side async is sufficient;
        # no performance improvement was observed when introducing a separate stream.
        x = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # inputs
        y = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # targets
        # advance current position and load next shard if necessary
        self.current_position += batch_size
        if self.current_position + batch_size + 1 >= len(self.tokens):
            self.advance()
        return x, y

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data hyperparams
    input_bin : str = 'data/fineweb10B/fineweb_train_*.bin' # input .bin to train on
    input_val_bin : str = 'data/fineweb10B/fineweb_val_*.bin' # input .bin to eval validation loss on
    # optimization hyperparams
    batch_size : int = 8 # batch size, in sequences, across all devices
    sequence_length : int = 64*1024 # sequence length, in tokens
    num_iterations : int = 1480 # number of iterations to run
    warmup_iters : int = 0
    cooldown_iters : int = 600 # number of iterations of linear warmup/cooldown for triangular or trapezoidal schedule
    weight_decay : float = 0
    # evaluation and logging hyperparams
    val_loss_every : int = 125 # every how many steps to evaluate val loss? 0 for only at the end
    val_tokens : int = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    save_every : int = 0 # every how many steps to save the checkpoint? 0 for only at the end
args = Hyperparameters()

# set up DDP (distributed data parallel). torchrun sets this env variable
assert torch.cuda.is_available()
dist.init_process_group(backend='nccl')
ddp_rank = int(os.environ['RANK'])
ddp_local_rank = int(os.environ['LOCAL_RANK'])
ddp_world_size = int(os.environ['WORLD_SIZE'])
device = f'cuda:{ddp_local_rank}'
torch.cuda.set_device(device)
print(f"using device: {device}")
master_process = (ddp_rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = str(uuid.uuid4())
    logdir = 'logs/%s/' % run_id
    # os.makedirs(logdir, exist_ok=True)
    logfile = 'logs/%s.txt' % run_id
    # create the log file
    with open(logfile, "w") as f:
        # begin the log by printing this file (the Python code)
        f.write(code)
        f.write('='*100 + '\n')
def print0(s, logonly=False):
    if master_process:
        with open(logfile, "a") as f:
            if not logonly:
                print(s)
            f.write(s+'\n')
# log information about the hardware/software environment this is running on
# and print the full `nvidia-smi` to file
print0(f"Running pytorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}\nnvidia-smi:")
import subprocess
result = subprocess.run(['nvidia-smi'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
print0(f'{result.stdout}', logonly=True)
print0('='*100, logonly=True)

# convenience variables
T = args.sequence_length
# calculate the number of steps to take in the val loop.
assert args.val_tokens % (T * ddp_world_size) == 0
val_steps = args.val_tokens // (T * ddp_world_size)
# calculate the steps of gradient accumulation required to attain the desired global batch size.
assert args.batch_size % (ddp_world_size) == 0
train_accumulation_steps = args.batch_size // ddp_world_size
assert train_accumulation_steps == 1

# load tokens
train_loader = DistributedDataLoader(args.input_bin, T, ddp_rank, ddp_world_size)
val_loader = DistributedDataLoader(args.input_val_bin, T, ddp_rank, ddp_world_size)
print0(f"Training DataLoader: total number of tokens: {train_loader.ntok_total} across {len(train_loader.files)} files")
print0(f"Validation DataLoader: total number of tokens: {val_loader.ntok_total} across {len(val_loader.files)} files")
print0('='*100, logonly=True)
x, y = train_loader.next_batch()

# there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency. suggested to me by @Grad62304977.
# this originates from Karpathy's experiments.
num_vocab = 50304
model = GPT(GPTConfig(vocab_size=num_vocab, n_layer=12, n_head=6, n_embd=768))
model = model.cuda().bfloat16()
for m in model.modules():
    if isinstance(m, CastedLinear):
        m.float()
if hasattr(config, "coordinate_descent_tuning"):
    config.coordinate_descent_tuning = True # suggested by @Chillee
model = torch.compile(model)
# here we wrap model into DDP container
model = DDP(model, device_ids=[ddp_local_rank])
raw_model = model.module # always contains the "raw" unwrapped model

# init the optimizer(s)
optimizer1 = torch.optim.Adam([raw_model.transformer.wte.weight, raw_model.transformer.vte.weight], lr=0.6, betas=(0.8, 0.95), fused=True)
optimizer2 = torch.optim.Adam([raw_model.lm_head.weight], lr=0.008, betas=(0.8, 0.95), fused=True)
params = list(raw_model.transformer.h.parameters())
matrix_params = [p for p in params if p.ndim == 2]
scalar_params = [p for p in params if p.ndim < 2] + [raw_model.skip_weights]
optimizer3 = Muon(matrix_params, lr=0.05, momentum=0.95)
optimizer4 = torch.optim.Adam(scalar_params, lr=0.04, betas=(0.8, 0.95), fused=True)
optimizers = [optimizer1, optimizer2, optimizer3, optimizer4]
# learning rate decay scheduler (linear warmup and cooldown)
def get_lr(it):
    assert it <= args.num_iterations
    # 1) linear warmup for warmup_iters steps
    if it < args.warmup_iters:
        return (it+1) / args.warmup_iters
    # 2) constant lr for a while
    elif it < args.num_iterations - args.cooldown_iters:
        return 1.0
    # 3) linear cooldown
    else:
        decay_ratio = (args.num_iterations - it) / args.cooldown_iters
        return decay_ratio
schedulers = [torch.optim.lr_scheduler.LambdaLR(opt, get_lr) for opt in optimizers]

sliding_window_size = torch.tensor(64, dtype=torch.int32, device="cuda")
sw_size_prev = 64
# Start training loop
training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
for step in range(args.num_iterations + 1):
    last_step = (step == args.num_iterations)
    # This effectively ignores timing first 10 steps, which are slower for weird reasons.
    # Alternately, and slightly more correctly in terms of benchmarking, we could do 10
    # steps with dummy data first, and then re-initialize the model and reset the loader.
    if step == 10:
        training_time_ms = 0
        t0 = time.perf_counter()
    timed_steps = float('nan') if step <= 11 else (step - 10) + 1 # <= 11 to avoid bug in val

    # Set the sliding window size for the current step, in chunks of 64. By @fernbear.bsky.social
    sw_size =  64 * int((64 + (1792 - 64) * step / args.num_iterations) // 64)
    if sw_size != sw_size_prev:
        sliding_window_size.copy_(sw_size, non_blocking=True)
        sw_size_prev = sw_size

    # once in a while evaluate the validation dataset
    if (last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # run validation batches
        model.eval()
        val_loader.reset()
        val_loss = 0.0
        for _ in range(val_steps):
            with torch.no_grad():
                x_val, y_val = val_loader.next_batch()
                val_loss += model(x_val, y_val, sliding_window=sliding_window_size)
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        val_loss /= val_steps
        # log val loss to console and to logfile
        print0(f'step:{step}/{args.num_iterations} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/(timed_steps-1):.2f}ms')
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if master_process and (last_step or (args.save_every > 0 and step % args.save_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # save the state of the training process
        log = dict(step=step, code=code, model=raw_model.state_dict(), optimizers=[opt.state_dict() for opt in optimizers])
        # torch.save(log, 'logs/%s/state_step%06d.pt' % (run_id, step))
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    # bit confusing: we want to make sure to eval on 0th iteration
    # but also after the very last iteration. so we loop for step <= num_iterations
    # instead of just < num_iterations (one extra due to <=), only to do
    # the validation/sampling one last time, and then we break right here as we're done.
    if last_step:
        break

    # --------------- TRAINING SECTION BEGIN -----------------
    model.train()
    loss = model(x, y, sliding_window=sliding_window_size)
    loss.backward()
    del loss
    # advance the dataset for the next batch
    x, y = train_loader.next_batch()
    # momentum warmup for Muon
    frac = min(step/300, 1)
    for group in optimizer3.param_groups:
        group['momentum'] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizers and schedulers
    for opt, sched in zip(optimizers, schedulers):
        opt.step()
        sched.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # --------------- TRAINING SECTION END -------------------
    # everything that follows now is just diagnostics, prints, logging, etc.
    approx_time = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{args.num_iterations} train_time:{approx_time:.0f}ms step_avg:{approx_time/timed_steps:.2f}ms")

if master_process:
    print(f"peak memory consumption: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB")

# -------------------------------------------------------------------------
# clean up nice
dist.destroy_process_group()
====================================================================================================
Running pytorch 2.6.0.dev20241203+cu124 compiled for CUDA 12.4
nvidia-smi:
Sun Dec  8 08:22:27 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.6     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA H100 80GB HBM3          On  | 00000000:65:02.0 Off |                    0 |
| N/A   36C    P0              74W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  | 00000000:67:02.0 Off |                    0 |
| N/A   45C    P0             129W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  | 00000000:69:02.0 Off |                    0 |
| N/A   45C    P0             108W / 700W |     35MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  | 00000000:6B:02.0 Off |                    0 |
| N/A   39C    P0             106W / 700W |     47MiB / 81559MiB |      1%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  | 00000000:6F:02.0 Off |                    0 |
| N/A   38C    P0             117W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  | 00000000:71:02.0 Off |                    0 |
| N/A   45C    P0             121W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  | 00000000:73:02.0 Off |                    0 |
| N/A   45C    P0             117W / 700W |    533MiB / 81559MiB |      1%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  | 00000000:75:02.0 Off |                    0 |
| N/A   38C    P0             123W / 700W |    533MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
+---------------------------------------------------------------------------------------+

====================================================================================================
Training DataLoader: total number of tokens: 3200000000 across 32 files
Validation DataLoader: total number of tokens: 100000000 across 1 files
====================================================================================================
step:0/1480 val_loss:10.8258 train_time:0ms step_avg:nanms
step:1/1480 train_time:23454ms step_avg:nanms
step:2/1480 train_time:23545ms step_avg:nanms
step:3/1480 train_time:23685ms step_avg:nanms
step:4/1480 train_time:23827ms step_avg:nanms
step:5/1480 train_time:23968ms step_avg:nanms
step:6/1480 train_time:24110ms step_avg:nanms
step:7/1480 train_time:24250ms step_avg:nanms
step:8/1480 train_time:24393ms step_avg:nanms
step:9/1480 train_time:24538ms step_avg:nanms
step:10/1480 train_time:24684ms step_avg:nanms
step:11/1480 train_time:142ms step_avg:nanms
step:12/1480 train_time:284ms step_avg:nanms
step:13/1480 train_time:424ms step_avg:141.44ms
step:14/1480 train_time:565ms step_avg:141.32ms
step:15/1480 train_time:707ms step_avg:141.47ms
step:16/1480 train_time:851ms step_avg:141.77ms
step:17/1480 train_time:995ms step_avg:142.16ms
step:18/1480 train_time:1140ms step_avg:142.55ms
step:19/1480 train_time:1284ms step_avg:142.68ms
step:20/1480 train_time:1425ms step_avg:142.51ms
step:21/1480 train_time:1566ms step_avg:142.39ms
step:22/1480 train_time:1707ms step_avg:142.23ms
step:23/1480 train_time:1851ms step_avg:142.36ms
step:24/1480 train_time:1995ms step_avg:142.53ms
step:25/1480 train_time:2140ms step_avg:142.67ms
step:26/1480 train_time:2284ms step_avg:142.73ms
step:27/1480 train_time:2425ms step_avg:142.67ms
step:28/1480 train_time:2567ms step_avg:142.60ms
step:29/1480 train_time:2707ms step_avg:142.48ms
step:30/1480 train_time:2848ms step_avg:142.42ms
step:31/1480 train_time:2992ms step_avg:142.49ms
step:32/1480 train_time:3134ms step_avg:142.47ms
step:33/1480 train_time:3280ms step_avg:142.60ms
step:34/1480 train_time:3423ms step_avg:142.64ms
step:35/1480 train_time:3565ms step_avg:142.60ms
step:36/1480 train_time:3707ms step_avg:142.57ms
step:37/1480 train_time:3848ms step_avg:142.53ms
step:38/1480 train_time:3992ms step_avg:142.56ms
step:39/1480 train_time:4135ms step_avg:142.60ms
step:40/1480 train_time:4280ms step_avg:142.68ms
step:41/1480 train_time:4421ms step_avg:142.62ms
step:42/1480 train_time:4563ms step_avg:142.58ms
step:43/1480 train_time:4705ms step_avg:142.59ms
step:44/1480 train_time:4847ms step_avg:142.57ms
step:45/1480 train_time:4991ms step_avg:142.60ms
step:46/1480 train_time:5135ms step_avg:142.65ms
step:47/1480 train_time:5281ms step_avg:142.74ms
step:48/1480 train_time:5425ms step_avg:142.77ms
step:49/1480 train_time:5567ms step_avg:142.75ms
step:50/1480 train_time:5708ms step_avg:142.70ms
step:51/1480 train_time:5849ms step_avg:142.66ms
step:52/1480 train_time:5991ms step_avg:142.65ms
step:53/1480 train_time:6134ms step_avg:142.64ms
step:54/1480 train_time:6279ms step_avg:142.69ms
step:55/1480 train_time:6422ms step_avg:142.72ms
step:56/1480 train_time:6564ms step_avg:142.70ms
step:57/1480 train_time:6706ms step_avg:142.68ms
step:58/1480 train_time:6847ms step_avg:142.64ms
step:59/1480 train_time:6989ms step_avg:142.63ms
step:60/1480 train_time:7131ms step_avg:142.62ms
step:61/1480 train_time:7275ms step_avg:142.65ms
step:62/1480 train_time:7418ms step_avg:142.66ms
step:63/1480 train_time:7563ms step_avg:142.69ms
step:64/1480 train_time:7704ms step_avg:142.67ms
step:65/1480 train_time:7845ms step_avg:142.64ms
step:66/1480 train_time:7989ms step_avg:142.66ms
step:67/1480 train_time:8133ms step_avg:142.68ms
step:68/1480 train_time:8278ms step_avg:142.72ms
step:69/1480 train_time:8421ms step_avg:142.73ms
step:70/1480 train_time:8564ms step_avg:142.74ms
step:71/1480 train_time:8706ms step_avg:142.72ms
step:72/1480 train_time:8847ms step_avg:142.69ms
step:73/1480 train_time:8989ms step_avg:142.67ms
step:74/1480 train_time:9130ms step_avg:142.65ms
step:75/1480 train_time:9272ms step_avg:142.65ms
step:76/1480 train_time:9414ms step_avg:142.64ms
step:77/1480 train_time:9558ms step_avg:142.66ms
step:78/1480 train_time:9702ms step_avg:142.68ms
step:79/1480 train_time:9844ms step_avg:142.67ms
step:80/1480 train_time:9986ms step_avg:142.66ms
step:81/1480 train_time:10128ms step_avg:142.64ms
step:82/1480 train_time:10269ms step_avg:142.63ms
step:83/1480 train_time:10409ms step_avg:142.59ms
step:84/1480 train_time:10551ms step_avg:142.59ms
step:85/1480 train_time:10694ms step_avg:142.59ms
step:86/1480 train_time:10839ms step_avg:142.61ms
step:87/1480 train_time:10982ms step_avg:142.62ms
step:88/1480 train_time:11124ms step_avg:142.61ms
step:89/1480 train_time:11266ms step_avg:142.61ms
step:90/1480 train_time:11407ms step_avg:142.59ms
step:91/1480 train_time:11548ms step_avg:142.57ms
step:92/1480 train_time:11690ms step_avg:142.56ms
step:93/1480 train_time:11833ms step_avg:142.56ms
step:94/1480 train_time:11975ms step_avg:142.56ms
step:95/1480 train_time:12118ms step_avg:142.57ms
step:96/1480 train_time:12260ms step_avg:142.56ms
step:97/1480 train_time:12403ms step_avg:142.56ms
step:98/1480 train_time:12544ms step_avg:142.54ms
step:99/1480 train_time:12686ms step_avg:142.53ms
step:100/1480 train_time:12829ms step_avg:142.54ms
step:101/1480 train_time:12969ms step_avg:142.52ms
step:102/1480 train_time:13110ms step_avg:142.50ms
step:103/1480 train_time:13254ms step_avg:142.51ms
step:104/1480 train_time:13397ms step_avg:142.52ms
step:105/1480 train_time:13539ms step_avg:142.52ms
step:106/1480 train_time:13683ms step_avg:142.53ms
step:107/1480 train_time:13826ms step_avg:142.53ms
step:108/1480 train_time:13967ms step_avg:142.52ms
step:109/1480 train_time:14108ms step_avg:142.50ms
step:110/1480 train_time:14250ms step_avg:142.50ms
step:111/1480 train_time:14396ms step_avg:142.54ms
step:112/1480 train_time:14544ms step_avg:142.59ms
step:113/1480 train_time:14690ms step_avg:142.62ms
step:114/1480 train_time:14837ms step_avg:142.66ms
step:115/1480 train_time:14984ms step_avg:142.70ms
step:116/1480 train_time:15129ms step_avg:142.73ms
step:117/1480 train_time:15275ms step_avg:142.76ms
step:118/1480 train_time:15423ms step_avg:142.80ms
step:119/1480 train_time:15569ms step_avg:142.84ms
step:120/1480 train_time:15714ms step_avg:142.86ms
step:121/1480 train_time:15863ms step_avg:142.91ms
step:122/1480 train_time:16009ms step_avg:142.94ms
step:123/1480 train_time:16156ms step_avg:142.97ms
step:124/1480 train_time:16302ms step_avg:143.00ms
step:125/1480 train_time:16449ms step_avg:143.03ms
step:125/1480 val_loss:4.4290 train_time:16507ms step_avg:143.54ms
step:126/1480 train_time:16601ms step_avg:143.11ms
step:127/1480 train_time:16749ms step_avg:143.16ms
step:128/1480 train_time:16896ms step_avg:143.19ms
step:129/1480 train_time:17040ms step_avg:143.19ms
step:130/1480 train_time:17186ms step_avg:143.21ms
step:131/1480 train_time:17333ms step_avg:143.24ms
step:132/1480 train_time:17478ms step_avg:143.26ms
step:133/1480 train_time:17627ms step_avg:143.31ms
step:134/1480 train_time:17775ms step_avg:143.35ms
step:135/1480 train_time:17922ms step_avg:143.37ms
step:136/1480 train_time:18069ms step_avg:143.41ms
step:137/1480 train_time:18217ms step_avg:143.44ms
step:138/1480 train_time:18362ms step_avg:143.45ms
step:139/1480 train_time:18510ms step_avg:143.49ms
step:140/1480 train_time:18658ms step_avg:143.52ms
step:141/1480 train_time:18804ms step_avg:143.54ms
step:142/1480 train_time:18952ms step_avg:143.58ms
step:143/1480 train_time:19098ms step_avg:143.60ms
step:144/1480 train_time:19243ms step_avg:143.60ms
step:145/1480 train_time:19389ms step_avg:143.62ms
step:146/1480 train_time:19536ms step_avg:143.65ms
step:147/1480 train_time:19681ms step_avg:143.66ms
step:148/1480 train_time:19828ms step_avg:143.68ms
step:149/1480 train_time:19975ms step_avg:143.71ms
step:150/1480 train_time:20121ms step_avg:143.72ms
step:151/1480 train_time:20267ms step_avg:143.74ms
step:152/1480 train_time:20416ms step_avg:143.77ms
step:153/1480 train_time:20561ms step_avg:143.79ms
step:154/1480 train_time:20708ms step_avg:143.80ms
step:155/1480 train_time:20855ms step_avg:143.83ms
step:156/1480 train_time:21001ms step_avg:143.84ms
step:157/1480 train_time:21147ms step_avg:143.86ms
step:158/1480 train_time:21294ms step_avg:143.88ms
step:159/1480 train_time:21440ms step_avg:143.89ms
step:160/1480 train_time:21588ms step_avg:143.92ms
step:161/1480 train_time:21735ms step_avg:143.94ms
step:162/1480 train_time:21880ms step_avg:143.95ms
step:163/1480 train_time:22027ms step_avg:143.97ms
step:164/1480 train_time:22173ms step_avg:143.98ms
step:165/1480 train_time:22319ms step_avg:143.99ms
step:166/1480 train_time:22464ms step_avg:144.00ms
step:167/1480 train_time:22612ms step_avg:144.02ms
step:168/1480 train_time:22759ms step_avg:144.04ms
step:169/1480 train_time:22904ms step_avg:144.05ms
step:170/1480 train_time:23052ms step_avg:144.07ms
step:171/1480 train_time:23198ms step_avg:144.09ms
step:172/1480 train_time:23344ms step_avg:144.10ms
step:173/1480 train_time:23491ms step_avg:144.12ms
step:174/1480 train_time:23638ms step_avg:144.14ms
step:175/1480 train_time:23786ms step_avg:144.15ms
step:176/1480 train_time:23934ms step_avg:144.18ms
step:177/1480 train_time:24079ms step_avg:144.18ms
step:178/1480 train_time:24225ms step_avg:144.20ms
step:179/1480 train_time:24373ms step_avg:144.22ms
step:180/1480 train_time:24520ms step_avg:144.23ms
step:181/1480 train_time:24667ms step_avg:144.25ms
step:182/1480 train_time:24813ms step_avg:144.26ms
step:183/1480 train_time:24959ms step_avg:144.27ms
step:184/1480 train_time:25105ms step_avg:144.28ms
step:185/1480 train_time:25252ms step_avg:144.30ms
step:186/1480 train_time:25399ms step_avg:144.31ms
step:187/1480 train_time:25544ms step_avg:144.32ms
step:188/1480 train_time:25693ms step_avg:144.34ms
step:189/1480 train_time:25840ms step_avg:144.36ms
step:190/1480 train_time:25984ms step_avg:144.36ms
step:191/1480 train_time:26132ms step_avg:144.37ms
step:192/1480 train_time:26277ms step_avg:144.38ms
step:193/1480 train_time:26422ms step_avg:144.38ms
step:194/1480 train_time:26569ms step_avg:144.40ms
step:195/1480 train_time:26718ms step_avg:144.42ms
step:196/1480 train_time:26863ms step_avg:144.42ms
step:197/1480 train_time:27010ms step_avg:144.44ms
step:198/1480 train_time:27157ms step_avg:144.45ms
step:199/1480 train_time:27303ms step_avg:144.46ms
step:200/1480 train_time:27450ms step_avg:144.47ms
step:201/1480 train_time:27597ms step_avg:144.49ms
step:202/1480 train_time:27743ms step_avg:144.49ms
step:203/1480 train_time:27890ms step_avg:144.51ms
step:204/1480 train_time:28036ms step_avg:144.52ms
step:205/1480 train_time:28182ms step_avg:144.52ms
step:206/1480 train_time:28329ms step_avg:144.54ms
step:207/1480 train_time:28476ms step_avg:144.55ms
step:208/1480 train_time:28622ms step_avg:144.56ms
step:209/1480 train_time:28770ms step_avg:144.57ms
step:210/1480 train_time:28917ms step_avg:144.59ms
step:211/1480 train_time:29063ms step_avg:144.59ms
step:212/1480 train_time:29209ms step_avg:144.60ms
step:213/1480 train_time:29356ms step_avg:144.61ms
step:214/1480 train_time:29500ms step_avg:144.61ms
step:215/1480 train_time:29647ms step_avg:144.62ms
step:216/1480 train_time:29796ms step_avg:144.64ms
step:217/1480 train_time:29941ms step_avg:144.64ms
step:218/1480 train_time:30088ms step_avg:144.66ms
step:219/1480 train_time:30236ms step_avg:144.67ms
step:220/1480 train_time:30381ms step_avg:144.67ms
step:221/1480 train_time:30529ms step_avg:144.69ms
step:222/1480 train_time:30680ms step_avg:144.72ms
step:223/1480 train_time:30832ms step_avg:144.75ms
step:224/1480 train_time:30982ms step_avg:144.77ms
step:225/1480 train_time:31133ms step_avg:144.81ms
step:226/1480 train_time:31282ms step_avg:144.83ms
step:227/1480 train_time:31433ms step_avg:144.85ms
step:228/1480 train_time:31584ms step_avg:144.88ms
step:229/1480 train_time:31735ms step_avg:144.91ms
step:230/1480 train_time:31882ms step_avg:144.92ms
step:231/1480 train_time:32034ms step_avg:144.95ms
step:232/1480 train_time:32183ms step_avg:144.97ms
step:233/1480 train_time:32334ms step_avg:145.00ms
step:234/1480 train_time:32484ms step_avg:145.02ms
step:235/1480 train_time:32636ms step_avg:145.05ms
step:236/1480 train_time:32786ms step_avg:145.07ms
step:237/1480 train_time:32937ms step_avg:145.10ms
step:238/1480 train_time:33087ms step_avg:145.12ms
step:239/1480 train_time:33238ms step_avg:145.14ms
step:240/1480 train_time:33386ms step_avg:145.15ms
step:241/1480 train_time:33535ms step_avg:145.18ms
step:242/1480 train_time:33686ms step_avg:145.20ms
step:243/1480 train_time:33837ms step_avg:145.22ms
step:244/1480 train_time:33987ms step_avg:145.24ms
step:245/1480 train_time:34138ms step_avg:145.27ms
step:246/1480 train_time:34289ms step_avg:145.29ms
step:247/1480 train_time:34439ms step_avg:145.31ms
step:248/1480 train_time:34590ms step_avg:145.34ms
step:249/1480 train_time:34740ms step_avg:145.36ms
step:250/1480 train_time:34890ms step_avg:145.37ms
step:250/1480 val_loss:3.9887 train_time:34949ms step_avg:145.62ms
step:251/1480 train_time:35048ms step_avg:145.43ms
step:252/1480 train_time:35200ms step_avg:145.46ms
step:253/1480 train_time:35351ms step_avg:145.48ms
step:254/1480 train_time:35500ms step_avg:145.49ms
step:255/1480 train_time:35649ms step_avg:145.51ms
step:256/1480 train_time:35797ms step_avg:145.51ms
step:257/1480 train_time:35948ms step_avg:145.54ms
step:258/1480 train_time:36101ms step_avg:145.57ms
step:259/1480 train_time:36253ms step_avg:145.60ms
step:260/1480 train_time:36404ms step_avg:145.62ms
step:261/1480 train_time:36554ms step_avg:145.63ms
step:262/1480 train_time:36704ms step_avg:145.65ms
step:263/1480 train_time:36853ms step_avg:145.66ms
step:264/1480 train_time:37003ms step_avg:145.68ms
step:265/1480 train_time:37154ms step_avg:145.70ms
step:266/1480 train_time:37305ms step_avg:145.72ms
step:267/1480 train_time:37455ms step_avg:145.74ms
step:268/1480 train_time:37606ms step_avg:145.76ms
step:269/1480 train_time:37755ms step_avg:145.77ms
step:270/1480 train_time:37906ms step_avg:145.79ms
step:271/1480 train_time:38055ms step_avg:145.80ms
step:272/1480 train_time:38208ms step_avg:145.83ms
step:273/1480 train_time:38357ms step_avg:145.85ms
step:274/1480 train_time:38508ms step_avg:145.87ms
step:275/1480 train_time:38658ms step_avg:145.88ms
step:276/1480 train_time:38809ms step_avg:145.90ms
step:277/1480 train_time:38957ms step_avg:145.91ms
step:278/1480 train_time:39108ms step_avg:145.92ms
step:279/1480 train_time:39255ms step_avg:145.93ms
step:280/1480 train_time:39407ms step_avg:145.95ms
step:281/1480 train_time:39557ms step_avg:145.97ms
step:282/1480 train_time:39709ms step_avg:145.99ms
step:283/1480 train_time:39858ms step_avg:146.00ms
step:284/1480 train_time:40011ms step_avg:146.03ms
step:285/1480 train_time:40161ms step_avg:146.04ms
step:286/1480 train_time:40312ms step_avg:146.06ms
step:287/1480 train_time:40462ms step_avg:146.07ms
step:288/1480 train_time:40612ms step_avg:146.09ms
step:289/1480 train_time:40763ms step_avg:146.10ms
step:290/1480 train_time:40914ms step_avg:146.12ms
step:291/1480 train_time:41065ms step_avg:146.14ms
step:292/1480 train_time:41216ms step_avg:146.15ms
step:293/1480 train_time:41367ms step_avg:146.17ms
step:294/1480 train_time:41518ms step_avg:146.19ms
step:295/1480 train_time:41669ms step_avg:146.21ms
step:296/1480 train_time:41818ms step_avg:146.22ms
step:297/1480 train_time:41969ms step_avg:146.23ms
step:298/1480 train_time:42119ms step_avg:146.25ms
step:299/1480 train_time:42271ms step_avg:146.27ms
step:300/1480 train_time:42421ms step_avg:146.28ms
step:301/1480 train_time:42571ms step_avg:146.29ms
step:302/1480 train_time:42721ms step_avg:146.31ms
step:303/1480 train_time:42872ms step_avg:146.32ms
step:304/1480 train_time:43024ms step_avg:146.34ms
step:305/1480 train_time:43172ms step_avg:146.35ms
step:306/1480 train_time:43322ms step_avg:146.36ms
step:307/1480 train_time:43473ms step_avg:146.37ms
step:308/1480 train_time:43625ms step_avg:146.39ms
step:309/1480 train_time:43774ms step_avg:146.40ms
step:310/1480 train_time:43926ms step_avg:146.42ms
step:311/1480 train_time:44077ms step_avg:146.44ms
step:312/1480 train_time:44227ms step_avg:146.45ms
step:313/1480 train_time:44377ms step_avg:146.46ms
step:314/1480 train_time:44527ms step_avg:146.47ms
step:315/1480 train_time:44676ms step_avg:146.48ms
step:316/1480 train_time:44827ms step_avg:146.49ms
step:317/1480 train_time:44978ms step_avg:146.51ms
step:318/1480 train_time:45129ms step_avg:146.52ms
step:319/1480 train_time:45279ms step_avg:146.53ms
step:320/1480 train_time:45429ms step_avg:146.55ms
step:321/1480 train_time:45578ms step_avg:146.55ms
step:322/1480 train_time:45731ms step_avg:146.57ms
step:323/1480 train_time:45881ms step_avg:146.58ms
step:324/1480 train_time:46031ms step_avg:146.60ms
step:325/1480 train_time:46182ms step_avg:146.61ms
step:326/1480 train_time:46334ms step_avg:146.63ms
step:327/1480 train_time:46485ms step_avg:146.64ms
step:328/1480 train_time:46636ms step_avg:146.65ms
step:329/1480 train_time:46788ms step_avg:146.67ms
step:330/1480 train_time:46940ms step_avg:146.69ms
step:331/1480 train_time:47093ms step_avg:146.71ms
step:332/1480 train_time:47248ms step_avg:146.73ms
step:333/1480 train_time:47402ms step_avg:146.76ms
step:334/1480 train_time:47555ms step_avg:146.78ms
step:335/1480 train_time:47711ms step_avg:146.80ms
step:336/1480 train_time:47865ms step_avg:146.82ms
step:337/1480 train_time:48020ms step_avg:146.85ms
step:338/1480 train_time:48173ms step_avg:146.87ms
step:339/1480 train_time:48327ms step_avg:146.89ms
step:340/1480 train_time:48481ms step_avg:146.91ms
step:341/1480 train_time:48635ms step_avg:146.93ms
step:342/1480 train_time:48788ms step_avg:146.95ms
step:343/1480 train_time:48943ms step_avg:146.98ms
step:344/1480 train_time:49096ms step_avg:146.99ms
step:345/1480 train_time:49251ms step_avg:147.02ms
step:346/1480 train_time:49405ms step_avg:147.04ms
step:347/1480 train_time:49557ms step_avg:147.05ms
step:348/1480 train_time:49710ms step_avg:147.07ms
step:349/1480 train_time:49862ms step_avg:147.09ms
step:350/1480 train_time:50016ms step_avg:147.11ms
step:351/1480 train_time:50171ms step_avg:147.13ms
step:352/1480 train_time:50325ms step_avg:147.15ms
step:353/1480 train_time:50479ms step_avg:147.17ms
step:354/1480 train_time:50632ms step_avg:147.19ms
step:355/1480 train_time:50787ms step_avg:147.21ms
step:356/1480 train_time:50941ms step_avg:147.23ms
step:357/1480 train_time:51094ms step_avg:147.25ms
step:358/1480 train_time:51248ms step_avg:147.26ms
step:359/1480 train_time:51402ms step_avg:147.29ms
step:360/1480 train_time:51557ms step_avg:147.31ms
step:361/1480 train_time:51711ms step_avg:147.33ms
step:362/1480 train_time:51864ms step_avg:147.34ms
step:363/1480 train_time:52018ms step_avg:147.36ms
step:364/1480 train_time:52171ms step_avg:147.38ms
step:365/1480 train_time:52324ms step_avg:147.39ms
step:366/1480 train_time:52478ms step_avg:147.41ms
step:367/1480 train_time:52635ms step_avg:147.44ms
step:368/1480 train_time:52785ms step_avg:147.44ms
step:369/1480 train_time:52939ms step_avg:147.46ms
step:370/1480 train_time:53092ms step_avg:147.48ms
step:371/1480 train_time:53246ms step_avg:147.50ms
step:372/1480 train_time:53400ms step_avg:147.51ms
step:373/1480 train_time:53553ms step_avg:147.53ms
step:374/1480 train_time:53708ms step_avg:147.55ms
step:375/1480 train_time:53862ms step_avg:147.57ms
step:375/1480 val_loss:3.8091 train_time:53924ms step_avg:147.74ms
step:376/1480 train_time:54023ms step_avg:147.60ms
step:377/1480 train_time:54178ms step_avg:147.62ms
step:378/1480 train_time:54331ms step_avg:147.64ms
step:379/1480 train_time:54484ms step_avg:147.65ms
step:380/1480 train_time:54638ms step_avg:147.67ms
step:381/1480 train_time:54790ms step_avg:147.68ms
step:382/1480 train_time:54943ms step_avg:147.70ms
step:383/1480 train_time:55098ms step_avg:147.72ms
step:384/1480 train_time:55252ms step_avg:147.73ms
step:385/1480 train_time:55407ms step_avg:147.75ms
step:386/1480 train_time:55559ms step_avg:147.76ms
step:387/1480 train_time:55712ms step_avg:147.78ms
step:388/1480 train_time:55865ms step_avg:147.79ms
step:389/1480 train_time:56019ms step_avg:147.81ms
step:390/1480 train_time:56173ms step_avg:147.82ms
step:391/1480 train_time:56326ms step_avg:147.84ms
step:392/1480 train_time:56480ms step_avg:147.85ms
step:393/1480 train_time:56634ms step_avg:147.87ms
step:394/1480 train_time:56786ms step_avg:147.88ms
step:395/1480 train_time:56940ms step_avg:147.90ms
step:396/1480 train_time:57094ms step_avg:147.91ms
step:397/1480 train_time:57248ms step_avg:147.93ms
step:398/1480 train_time:57403ms step_avg:147.95ms
step:399/1480 train_time:57557ms step_avg:147.96ms
step:400/1480 train_time:57712ms step_avg:147.98ms
step:401/1480 train_time:57864ms step_avg:147.99ms
step:402/1480 train_time:58017ms step_avg:148.00ms
step:403/1480 train_time:58170ms step_avg:148.02ms
step:404/1480 train_time:58325ms step_avg:148.03ms
step:405/1480 train_time:58478ms step_avg:148.05ms
step:406/1480 train_time:58634ms step_avg:148.07ms
step:407/1480 train_time:58787ms step_avg:148.08ms
step:408/1480 train_time:58940ms step_avg:148.09ms
step:409/1480 train_time:59093ms step_avg:148.10ms
step:410/1480 train_time:59247ms step_avg:148.12ms
step:411/1480 train_time:59400ms step_avg:148.13ms
step:412/1480 train_time:59553ms step_avg:148.14ms
step:413/1480 train_time:59706ms step_avg:148.15ms
step:414/1480 train_time:59859ms step_avg:148.17ms
step:415/1480 train_time:60014ms step_avg:148.18ms
step:416/1480 train_time:60168ms step_avg:148.20ms
step:417/1480 train_time:60322ms step_avg:148.21ms
step:418/1480 train_time:60477ms step_avg:148.23ms
step:419/1480 train_time:60631ms step_avg:148.24ms
step:420/1480 train_time:60785ms step_avg:148.26ms
step:421/1480 train_time:60938ms step_avg:148.27ms
step:422/1480 train_time:61092ms step_avg:148.28ms
step:423/1480 train_time:61246ms step_avg:148.30ms
step:424/1480 train_time:61400ms step_avg:148.31ms
step:425/1480 train_time:61554ms step_avg:148.32ms
step:426/1480 train_time:61707ms step_avg:148.33ms
step:427/1480 train_time:61862ms step_avg:148.35ms
step:428/1480 train_time:62014ms step_avg:148.36ms
step:429/1480 train_time:62167ms step_avg:148.37ms
step:430/1480 train_time:62322ms step_avg:148.39ms
step:431/1480 train_time:62476ms step_avg:148.40ms
step:432/1480 train_time:62629ms step_avg:148.41ms
step:433/1480 train_time:62782ms step_avg:148.42ms
step:434/1480 train_time:62935ms step_avg:148.43ms
step:435/1480 train_time:63088ms step_avg:148.44ms
step:436/1480 train_time:63243ms step_avg:148.46ms
step:437/1480 train_time:63397ms step_avg:148.47ms
step:438/1480 train_time:63551ms step_avg:148.48ms
step:439/1480 train_time:63705ms step_avg:148.50ms
step:440/1480 train_time:63860ms step_avg:148.51ms
step:441/1480 train_time:64018ms step_avg:148.53ms
step:442/1480 train_time:64175ms step_avg:148.55ms
step:443/1480 train_time:64332ms step_avg:148.57ms
step:444/1480 train_time:64487ms step_avg:148.59ms
step:445/1480 train_time:64643ms step_avg:148.60ms
step:446/1480 train_time:64799ms step_avg:148.62ms
step:447/1480 train_time:64955ms step_avg:148.64ms
step:448/1480 train_time:65111ms step_avg:148.66ms
step:449/1480 train_time:65268ms step_avg:148.67ms
step:450/1480 train_time:65425ms step_avg:148.69ms
step:451/1480 train_time:65582ms step_avg:148.71ms
step:452/1480 train_time:65738ms step_avg:148.73ms
step:453/1480 train_time:65896ms step_avg:148.75ms
step:454/1480 train_time:66051ms step_avg:148.76ms
step:455/1480 train_time:66207ms step_avg:148.78ms
step:456/1480 train_time:66363ms step_avg:148.80ms
step:457/1480 train_time:66520ms step_avg:148.81ms
step:458/1480 train_time:66677ms step_avg:148.83ms
step:459/1480 train_time:66836ms step_avg:148.85ms
step:460/1480 train_time:66993ms step_avg:148.87ms
step:461/1480 train_time:67151ms step_avg:148.89ms
step:462/1480 train_time:67308ms step_avg:148.91ms
step:463/1480 train_time:67463ms step_avg:148.93ms
step:464/1480 train_time:67620ms step_avg:148.94ms
step:465/1480 train_time:67775ms step_avg:148.96ms
step:466/1480 train_time:67933ms step_avg:148.98ms
step:467/1480 train_time:68090ms step_avg:148.99ms
step:468/1480 train_time:68246ms step_avg:149.01ms
step:469/1480 train_time:68402ms step_avg:149.02ms
step:470/1480 train_time:68557ms step_avg:149.04ms
step:471/1480 train_time:68715ms step_avg:149.06ms
step:472/1480 train_time:68871ms step_avg:149.07ms
step:473/1480 train_time:69028ms step_avg:149.09ms
step:474/1480 train_time:69184ms step_avg:149.10ms
step:475/1480 train_time:69342ms step_avg:149.12ms
step:476/1480 train_time:69498ms step_avg:149.14ms
step:477/1480 train_time:69655ms step_avg:149.15ms
step:478/1480 train_time:69810ms step_avg:149.17ms
step:479/1480 train_time:69966ms step_avg:149.18ms
step:480/1480 train_time:70124ms step_avg:149.20ms
step:481/1480 train_time:70281ms step_avg:149.22ms
step:482/1480 train_time:70438ms step_avg:149.23ms
step:483/1480 train_time:70594ms step_avg:149.25ms
step:484/1480 train_time:70750ms step_avg:149.26ms
step:485/1480 train_time:70907ms step_avg:149.28ms
step:486/1480 train_time:71064ms step_avg:149.29ms
step:487/1480 train_time:71222ms step_avg:149.31ms
step:488/1480 train_time:71380ms step_avg:149.33ms
step:489/1480 train_time:71535ms step_avg:149.34ms
step:490/1480 train_time:71690ms step_avg:149.35ms
step:491/1480 train_time:71847ms step_avg:149.37ms
step:492/1480 train_time:72003ms step_avg:149.38ms
step:493/1480 train_time:72160ms step_avg:149.40ms
step:494/1480 train_time:72319ms step_avg:149.42ms
step:495/1480 train_time:72476ms step_avg:149.44ms
step:496/1480 train_time:72634ms step_avg:149.45ms
step:497/1480 train_time:72790ms step_avg:149.47ms
step:498/1480 train_time:72947ms step_avg:149.48ms
step:499/1480 train_time:73104ms step_avg:149.50ms
step:500/1480 train_time:73261ms step_avg:149.51ms
step:500/1480 val_loss:3.6834 train_time:73323ms step_avg:149.64ms
step:501/1480 train_time:73423ms step_avg:149.54ms
step:502/1480 train_time:73581ms step_avg:149.55ms
step:503/1480 train_time:73737ms step_avg:149.57ms
step:504/1480 train_time:73893ms step_avg:149.58ms
step:505/1480 train_time:74048ms step_avg:149.59ms
step:506/1480 train_time:74205ms step_avg:149.61ms
step:507/1480 train_time:74362ms step_avg:149.62ms
step:508/1480 train_time:74523ms step_avg:149.64ms
step:509/1480 train_time:74681ms step_avg:149.66ms
step:510/1480 train_time:74838ms step_avg:149.68ms
step:511/1480 train_time:74994ms step_avg:149.69ms
step:512/1480 train_time:75151ms step_avg:149.70ms
step:513/1480 train_time:75306ms step_avg:149.71ms
step:514/1480 train_time:75463ms step_avg:149.73ms
step:515/1480 train_time:75621ms step_avg:149.74ms
step:516/1480 train_time:75781ms step_avg:149.76ms
step:517/1480 train_time:75938ms step_avg:149.78ms
step:518/1480 train_time:76095ms step_avg:149.79ms
step:519/1480 train_time:76252ms step_avg:149.81ms
step:520/1480 train_time:76409ms step_avg:149.82ms
step:521/1480 train_time:76565ms step_avg:149.83ms
step:522/1480 train_time:76724ms step_avg:149.85ms
step:523/1480 train_time:76882ms step_avg:149.87ms
step:524/1480 train_time:77040ms step_avg:149.88ms
step:525/1480 train_time:77197ms step_avg:149.90ms
step:526/1480 train_time:77354ms step_avg:149.91ms
step:527/1480 train_time:77509ms step_avg:149.92ms
step:528/1480 train_time:77664ms step_avg:149.93ms
step:529/1480 train_time:77822ms step_avg:149.95ms
step:530/1480 train_time:77980ms step_avg:149.96ms
step:531/1480 train_time:78138ms step_avg:149.98ms
step:532/1480 train_time:78295ms step_avg:149.99ms
step:533/1480 train_time:78451ms step_avg:150.00ms
step:534/1480 train_time:78606ms step_avg:150.01ms
step:535/1480 train_time:78763ms step_avg:150.02ms
step:536/1480 train_time:78921ms step_avg:150.04ms
step:537/1480 train_time:79078ms step_avg:150.05ms
step:538/1480 train_time:79235ms step_avg:150.07ms
step:539/1480 train_time:79392ms step_avg:150.08ms
step:540/1480 train_time:79549ms step_avg:150.09ms
step:541/1480 train_time:79704ms step_avg:150.10ms
step:542/1480 train_time:79861ms step_avg:150.12ms
step:543/1480 train_time:80019ms step_avg:150.13ms
step:544/1480 train_time:80175ms step_avg:150.14ms
step:545/1480 train_time:80331ms step_avg:150.15ms
step:546/1480 train_time:80487ms step_avg:150.16ms
step:547/1480 train_time:80643ms step_avg:150.17ms
step:548/1480 train_time:80801ms step_avg:150.19ms
step:549/1480 train_time:80958ms step_avg:150.20ms
step:550/1480 train_time:81117ms step_avg:150.22ms
step:551/1480 train_time:81275ms step_avg:150.23ms
step:552/1480 train_time:81433ms step_avg:150.25ms
step:553/1480 train_time:81593ms step_avg:150.26ms
step:554/1480 train_time:81752ms step_avg:150.28ms
step:555/1480 train_time:81912ms step_avg:150.30ms
step:556/1480 train_time:82068ms step_avg:150.31ms
step:557/1480 train_time:82228ms step_avg:150.32ms
step:558/1480 train_time:82386ms step_avg:150.34ms
step:559/1480 train_time:82544ms step_avg:150.35ms
step:560/1480 train_time:82705ms step_avg:150.37ms
step:561/1480 train_time:82864ms step_avg:150.39ms
step:562/1480 train_time:83024ms step_avg:150.41ms
step:563/1480 train_time:83183ms step_avg:150.42ms
step:564/1480 train_time:83342ms step_avg:150.44ms
step:565/1480 train_time:83502ms step_avg:150.45ms
step:566/1480 train_time:83662ms step_avg:150.47ms
step:567/1480 train_time:83822ms step_avg:150.49ms
step:568/1480 train_time:83981ms step_avg:150.50ms
step:569/1480 train_time:84140ms step_avg:150.52ms
step:570/1480 train_time:84300ms step_avg:150.54ms
step:571/1480 train_time:84461ms step_avg:150.55ms
step:572/1480 train_time:84623ms step_avg:150.57ms
step:573/1480 train_time:84785ms step_avg:150.59ms
step:574/1480 train_time:84944ms step_avg:150.61ms
step:575/1480 train_time:85105ms step_avg:150.63ms
step:576/1480 train_time:85263ms step_avg:150.64ms
step:577/1480 train_time:85423ms step_avg:150.66ms
step:578/1480 train_time:85583ms step_avg:150.67ms
step:579/1480 train_time:85742ms step_avg:150.69ms
step:580/1480 train_time:85902ms step_avg:150.71ms
step:581/1480 train_time:86063ms step_avg:150.72ms
step:582/1480 train_time:86224ms step_avg:150.74ms
step:583/1480 train_time:86383ms step_avg:150.76ms
step:584/1480 train_time:86542ms step_avg:150.77ms
step:585/1480 train_time:86702ms step_avg:150.79ms
step:586/1480 train_time:86862ms step_avg:150.80ms
step:587/1480 train_time:87023ms step_avg:150.82ms
step:588/1480 train_time:87182ms step_avg:150.83ms
step:589/1480 train_time:87342ms step_avg:150.85ms
step:590/1480 train_time:87504ms step_avg:150.87ms
step:591/1480 train_time:87662ms step_avg:150.88ms
step:592/1480 train_time:87822ms step_avg:150.90ms
step:593/1480 train_time:87983ms step_avg:150.91ms
step:594/1480 train_time:88144ms step_avg:150.93ms
step:595/1480 train_time:88305ms step_avg:150.95ms
step:596/1480 train_time:88467ms step_avg:150.97ms
step:597/1480 train_time:88626ms step_avg:150.98ms
step:598/1480 train_time:88785ms step_avg:150.99ms
step:599/1480 train_time:88943ms step_avg:151.01ms
step:600/1480 train_time:89103ms step_avg:151.02ms
step:601/1480 train_time:89262ms step_avg:151.04ms
step:602/1480 train_time:89422ms step_avg:151.05ms
step:603/1480 train_time:89583ms step_avg:151.07ms
step:604/1480 train_time:89743ms step_avg:151.08ms
step:605/1480 train_time:89903ms step_avg:151.10ms
step:606/1480 train_time:90065ms step_avg:151.12ms
step:607/1480 train_time:90227ms step_avg:151.13ms
step:608/1480 train_time:90386ms step_avg:151.15ms
step:609/1480 train_time:90545ms step_avg:151.16ms
step:610/1480 train_time:90704ms step_avg:151.17ms
step:611/1480 train_time:90863ms step_avg:151.19ms
step:612/1480 train_time:91024ms step_avg:151.20ms
step:613/1480 train_time:91185ms step_avg:151.22ms
step:614/1480 train_time:91345ms step_avg:151.23ms
step:615/1480 train_time:91504ms step_avg:151.25ms
step:616/1480 train_time:91662ms step_avg:151.26ms
step:617/1480 train_time:91823ms step_avg:151.27ms
step:618/1480 train_time:91984ms step_avg:151.29ms
step:619/1480 train_time:92144ms step_avg:151.30ms
step:620/1480 train_time:92304ms step_avg:151.32ms
step:621/1480 train_time:92463ms step_avg:151.33ms
step:622/1480 train_time:92624ms step_avg:151.35ms
step:623/1480 train_time:92785ms step_avg:151.36ms
step:624/1480 train_time:92944ms step_avg:151.37ms
step:625/1480 train_time:93103ms step_avg:151.39ms
step:625/1480 val_loss:3.6060 train_time:93165ms step_avg:151.49ms
step:626/1480 train_time:93263ms step_avg:151.40ms
step:627/1480 train_time:93422ms step_avg:151.41ms
step:628/1480 train_time:93580ms step_avg:151.42ms
step:629/1480 train_time:93737ms step_avg:151.43ms
step:630/1480 train_time:93895ms step_avg:151.44ms
step:631/1480 train_time:94052ms step_avg:151.45ms
step:632/1480 train_time:94211ms step_avg:151.46ms
step:633/1480 train_time:94371ms step_avg:151.48ms
step:634/1480 train_time:94532ms step_avg:151.49ms
step:635/1480 train_time:94692ms step_avg:151.51ms
step:636/1480 train_time:94852ms step_avg:151.52ms
step:637/1480 train_time:95012ms step_avg:151.53ms
step:638/1480 train_time:95172ms step_avg:151.55ms
step:639/1480 train_time:95331ms step_avg:151.56ms
step:640/1480 train_time:95491ms step_avg:151.57ms
step:641/1480 train_time:95651ms step_avg:151.59ms
step:642/1480 train_time:95810ms step_avg:151.60ms
step:643/1480 train_time:95970ms step_avg:151.61ms
step:644/1480 train_time:96128ms step_avg:151.62ms
step:645/1480 train_time:96287ms step_avg:151.63ms
step:646/1480 train_time:96446ms step_avg:151.64ms
step:647/1480 train_time:96605ms step_avg:151.66ms
step:648/1480 train_time:96767ms step_avg:151.67ms
step:649/1480 train_time:96927ms step_avg:151.69ms
step:650/1480 train_time:97088ms step_avg:151.70ms
step:651/1480 train_time:97248ms step_avg:151.71ms
step:652/1480 train_time:97407ms step_avg:151.72ms
step:653/1480 train_time:97566ms step_avg:151.74ms
step:654/1480 train_time:97726ms step_avg:151.75ms
step:655/1480 train_time:97884ms step_avg:151.76ms
step:656/1480 train_time:98044ms step_avg:151.77ms
step:657/1480 train_time:98204ms step_avg:151.78ms
step:658/1480 train_time:98362ms step_avg:151.79ms
step:659/1480 train_time:98523ms step_avg:151.81ms
step:660/1480 train_time:98687ms step_avg:151.83ms
step:661/1480 train_time:98850ms step_avg:151.84ms
step:662/1480 train_time:99010ms step_avg:151.86ms
step:663/1480 train_time:99170ms step_avg:151.87ms
step:664/1480 train_time:99332ms step_avg:151.88ms
step:665/1480 train_time:99496ms step_avg:151.90ms
step:666/1480 train_time:99656ms step_avg:151.91ms
step:667/1480 train_time:99817ms step_avg:151.93ms
step:668/1480 train_time:99978ms step_avg:151.94ms
step:669/1480 train_time:100138ms step_avg:151.95ms
step:670/1480 train_time:100298ms step_avg:151.97ms
step:671/1480 train_time:100458ms step_avg:151.98ms
step:672/1480 train_time:100618ms step_avg:151.99ms
step:673/1480 train_time:100781ms step_avg:152.01ms
step:674/1480 train_time:100942ms step_avg:152.02ms
step:675/1480 train_time:101105ms step_avg:152.04ms
step:676/1480 train_time:101269ms step_avg:152.05ms
step:677/1480 train_time:101430ms step_avg:152.07ms
step:678/1480 train_time:101592ms step_avg:152.08ms
step:679/1480 train_time:101755ms step_avg:152.10ms
step:680/1480 train_time:101915ms step_avg:152.11ms
step:681/1480 train_time:102075ms step_avg:152.12ms
step:682/1480 train_time:102237ms step_avg:152.14ms
step:683/1480 train_time:102397ms step_avg:152.15ms
step:684/1480 train_time:102558ms step_avg:152.16ms
step:685/1480 train_time:102720ms step_avg:152.18ms
step:686/1480 train_time:102880ms step_avg:152.19ms
step:687/1480 train_time:103041ms step_avg:152.20ms
step:688/1480 train_time:103204ms step_avg:152.22ms
step:689/1480 train_time:103367ms step_avg:152.23ms
step:690/1480 train_time:103531ms step_avg:152.25ms
step:691/1480 train_time:103693ms step_avg:152.27ms
step:692/1480 train_time:103855ms step_avg:152.28ms
step:693/1480 train_time:104016ms step_avg:152.29ms
step:694/1480 train_time:104176ms step_avg:152.30ms
step:695/1480 train_time:104335ms step_avg:152.31ms
step:696/1480 train_time:104495ms step_avg:152.33ms
step:697/1480 train_time:104657ms step_avg:152.34ms
step:698/1480 train_time:104817ms step_avg:152.35ms
step:699/1480 train_time:104980ms step_avg:152.37ms
step:700/1480 train_time:105140ms step_avg:152.38ms
step:701/1480 train_time:105300ms step_avg:152.39ms
step:702/1480 train_time:105461ms step_avg:152.40ms
step:703/1480 train_time:105621ms step_avg:152.41ms
step:704/1480 train_time:105782ms step_avg:152.42ms
step:705/1480 train_time:105946ms step_avg:152.44ms
step:706/1480 train_time:106110ms step_avg:152.46ms
step:707/1480 train_time:106271ms step_avg:152.47ms
step:708/1480 train_time:106432ms step_avg:152.48ms
step:709/1480 train_time:106594ms step_avg:152.50ms
step:710/1480 train_time:106755ms step_avg:152.51ms
step:711/1480 train_time:106916ms step_avg:152.52ms
step:712/1480 train_time:107080ms step_avg:152.54ms
step:713/1480 train_time:107242ms step_avg:152.55ms
step:714/1480 train_time:107401ms step_avg:152.56ms
step:715/1480 train_time:107561ms step_avg:152.57ms
step:716/1480 train_time:107719ms step_avg:152.58ms
step:717/1480 train_time:107882ms step_avg:152.59ms
step:718/1480 train_time:108040ms step_avg:152.60ms
step:719/1480 train_time:108199ms step_avg:152.61ms
step:720/1480 train_time:108361ms step_avg:152.62ms
step:721/1480 train_time:108522ms step_avg:152.63ms
step:722/1480 train_time:108684ms step_avg:152.65ms
step:723/1480 train_time:108844ms step_avg:152.66ms
step:724/1480 train_time:109007ms step_avg:152.67ms
step:725/1480 train_time:109172ms step_avg:152.69ms
step:726/1480 train_time:109334ms step_avg:152.70ms
step:727/1480 train_time:109498ms step_avg:152.72ms
step:728/1480 train_time:109658ms step_avg:152.73ms
step:729/1480 train_time:109818ms step_avg:152.74ms
step:730/1480 train_time:109981ms step_avg:152.75ms
step:731/1480 train_time:110141ms step_avg:152.76ms
step:732/1480 train_time:110301ms step_avg:152.77ms
step:733/1480 train_time:110463ms step_avg:152.78ms
step:734/1480 train_time:110624ms step_avg:152.80ms
step:735/1480 train_time:110786ms step_avg:152.81ms
step:736/1480 train_time:110948ms step_avg:152.82ms
step:737/1480 train_time:111110ms step_avg:152.83ms
step:738/1480 train_time:111272ms step_avg:152.85ms
step:739/1480 train_time:111432ms step_avg:152.86ms
step:740/1480 train_time:111598ms step_avg:152.87ms
step:741/1480 train_time:111760ms step_avg:152.89ms
step:742/1480 train_time:111920ms step_avg:152.90ms
step:743/1480 train_time:112080ms step_avg:152.91ms
step:744/1480 train_time:112242ms step_avg:152.92ms
step:745/1480 train_time:112406ms step_avg:152.93ms
step:746/1480 train_time:112568ms step_avg:152.95ms
step:747/1480 train_time:112731ms step_avg:152.96ms
step:748/1480 train_time:112896ms step_avg:152.98ms
step:749/1480 train_time:113058ms step_avg:152.99ms
step:750/1480 train_time:113217ms step_avg:153.00ms
step:750/1480 val_loss:3.5501 train_time:113281ms step_avg:153.08ms
step:751/1480 train_time:113381ms step_avg:153.01ms
step:752/1480 train_time:113542ms step_avg:153.02ms
step:753/1480 train_time:113702ms step_avg:153.03ms
step:754/1480 train_time:113862ms step_avg:153.04ms
step:755/1480 train_time:114022ms step_avg:153.05ms
step:756/1480 train_time:114183ms step_avg:153.06ms
step:757/1480 train_time:114348ms step_avg:153.08ms
step:758/1480 train_time:114512ms step_avg:153.09ms
step:759/1480 train_time:114675ms step_avg:153.10ms
step:760/1480 train_time:114836ms step_avg:153.12ms
step:761/1480 train_time:114997ms step_avg:153.13ms
step:762/1480 train_time:115159ms step_avg:153.14ms
step:763/1480 train_time:115320ms step_avg:153.15ms
step:764/1480 train_time:115482ms step_avg:153.16ms
step:765/1480 train_time:115642ms step_avg:153.17ms
step:766/1480 train_time:115805ms step_avg:153.18ms
step:767/1480 train_time:115968ms step_avg:153.19ms
step:768/1480 train_time:116131ms step_avg:153.21ms
step:769/1480 train_time:116295ms step_avg:153.22ms
step:770/1480 train_time:116457ms step_avg:153.23ms
step:771/1480 train_time:116621ms step_avg:153.25ms
step:772/1480 train_time:116784ms step_avg:153.26ms
step:773/1480 train_time:116946ms step_avg:153.27ms
step:774/1480 train_time:117109ms step_avg:153.28ms
step:775/1480 train_time:117271ms step_avg:153.30ms
step:776/1480 train_time:117438ms step_avg:153.31ms
step:777/1480 train_time:117603ms step_avg:153.33ms
step:778/1480 train_time:117766ms step_avg:153.34ms
step:779/1480 train_time:117929ms step_avg:153.35ms
step:780/1480 train_time:118093ms step_avg:153.37ms
step:781/1480 train_time:118257ms step_avg:153.38ms
step:782/1480 train_time:118419ms step_avg:153.39ms
step:783/1480 train_time:118579ms step_avg:153.40ms
step:784/1480 train_time:118742ms step_avg:153.41ms
step:785/1480 train_time:118903ms step_avg:153.42ms
step:786/1480 train_time:119068ms step_avg:153.44ms
step:787/1480 train_time:119232ms step_avg:153.45ms
step:788/1480 train_time:119396ms step_avg:153.47ms
step:789/1480 train_time:119559ms step_avg:153.48ms
step:790/1480 train_time:119723ms step_avg:153.49ms
step:791/1480 train_time:119889ms step_avg:153.51ms
step:792/1480 train_time:120056ms step_avg:153.52ms
step:793/1480 train_time:120218ms step_avg:153.53ms
step:794/1480 train_time:120382ms step_avg:153.55ms
step:795/1480 train_time:120547ms step_avg:153.56ms
step:796/1480 train_time:120714ms step_avg:153.58ms
step:797/1480 train_time:120878ms step_avg:153.59ms
step:798/1480 train_time:121042ms step_avg:153.61ms
step:799/1480 train_time:121210ms step_avg:153.62ms
step:800/1480 train_time:121375ms step_avg:153.64ms
step:801/1480 train_time:121538ms step_avg:153.65ms
step:802/1480 train_time:121705ms step_avg:153.67ms
step:803/1480 train_time:121867ms step_avg:153.68ms
step:804/1480 train_time:122029ms step_avg:153.69ms
step:805/1480 train_time:122194ms step_avg:153.70ms
step:806/1480 train_time:122357ms step_avg:153.71ms
step:807/1480 train_time:122519ms step_avg:153.72ms
step:808/1480 train_time:122681ms step_avg:153.74ms
step:809/1480 train_time:122842ms step_avg:153.75ms
step:810/1480 train_time:123003ms step_avg:153.75ms
step:811/1480 train_time:123165ms step_avg:153.76ms
step:812/1480 train_time:123330ms step_avg:153.78ms
step:813/1480 train_time:123491ms step_avg:153.79ms
step:814/1480 train_time:123655ms step_avg:153.80ms
step:815/1480 train_time:123816ms step_avg:153.81ms
step:816/1480 train_time:123981ms step_avg:153.82ms
step:817/1480 train_time:124142ms step_avg:153.83ms
step:818/1480 train_time:124304ms step_avg:153.84ms
step:819/1480 train_time:124468ms step_avg:153.85ms
step:820/1480 train_time:124632ms step_avg:153.87ms
step:821/1480 train_time:124794ms step_avg:153.88ms
step:822/1480 train_time:124958ms step_avg:153.89ms
step:823/1480 train_time:125120ms step_avg:153.90ms
step:824/1480 train_time:125280ms step_avg:153.91ms
step:825/1480 train_time:125444ms step_avg:153.92ms
step:826/1480 train_time:125611ms step_avg:153.94ms
step:827/1480 train_time:125776ms step_avg:153.95ms
step:828/1480 train_time:125939ms step_avg:153.96ms
step:829/1480 train_time:126101ms step_avg:153.97ms
step:830/1480 train_time:126265ms step_avg:153.98ms
step:831/1480 train_time:126431ms step_avg:154.00ms
step:832/1480 train_time:126595ms step_avg:154.01ms
step:833/1480 train_time:126760ms step_avg:154.02ms
step:834/1480 train_time:126923ms step_avg:154.03ms
step:835/1480 train_time:127085ms step_avg:154.04ms
step:836/1480 train_time:127251ms step_avg:154.06ms
step:837/1480 train_time:127416ms step_avg:154.07ms
step:838/1480 train_time:127580ms step_avg:154.08ms
step:839/1480 train_time:127742ms step_avg:154.09ms
step:840/1480 train_time:127902ms step_avg:154.10ms
step:841/1480 train_time:128063ms step_avg:154.11ms
step:842/1480 train_time:128228ms step_avg:154.12ms
step:843/1480 train_time:128390ms step_avg:154.13ms
step:844/1480 train_time:128553ms step_avg:154.14ms
step:845/1480 train_time:128717ms step_avg:154.15ms
step:846/1480 train_time:128881ms step_avg:154.16ms
step:847/1480 train_time:129044ms step_avg:154.17ms
step:848/1480 train_time:129206ms step_avg:154.18ms
step:849/1480 train_time:129368ms step_avg:154.19ms
step:850/1480 train_time:129531ms step_avg:154.20ms
step:851/1480 train_time:129696ms step_avg:154.22ms
step:852/1480 train_time:129858ms step_avg:154.23ms
step:853/1480 train_time:130020ms step_avg:154.23ms
step:854/1480 train_time:130183ms step_avg:154.25ms
step:855/1480 train_time:130345ms step_avg:154.25ms
step:856/1480 train_time:130508ms step_avg:154.26ms
step:857/1480 train_time:130674ms step_avg:154.28ms
step:858/1480 train_time:130839ms step_avg:154.29ms
step:859/1480 train_time:131003ms step_avg:154.30ms
step:860/1480 train_time:131164ms step_avg:154.31ms
step:861/1480 train_time:131330ms step_avg:154.32ms
step:862/1480 train_time:131499ms step_avg:154.34ms
step:863/1480 train_time:131664ms step_avg:154.35ms
step:864/1480 train_time:131830ms step_avg:154.37ms
step:865/1480 train_time:131992ms step_avg:154.38ms
step:866/1480 train_time:132160ms step_avg:154.39ms
step:867/1480 train_time:132323ms step_avg:154.40ms
step:868/1480 train_time:132483ms step_avg:154.41ms
step:869/1480 train_time:132644ms step_avg:154.42ms
step:870/1480 train_time:132810ms step_avg:154.43ms
step:871/1480 train_time:132973ms step_avg:154.44ms
step:872/1480 train_time:133137ms step_avg:154.45ms
step:873/1480 train_time:133300ms step_avg:154.46ms
step:874/1480 train_time:133466ms step_avg:154.47ms
step:875/1480 train_time:133630ms step_avg:154.49ms
step:875/1480 val_loss:3.5061 train_time:133695ms step_avg:154.56ms
step:876/1480 train_time:133795ms step_avg:154.50ms
step:877/1480 train_time:133963ms step_avg:154.51ms
step:878/1480 train_time:134126ms step_avg:154.52ms
step:879/1480 train_time:134289ms step_avg:154.53ms
step:880/1480 train_time:134451ms step_avg:154.54ms
step:881/1480 train_time:134613ms step_avg:154.55ms
step:882/1480 train_time:134780ms step_avg:154.56ms
step:883/1480 train_time:134946ms step_avg:154.58ms
step:884/1480 train_time:135111ms step_avg:154.59ms
step:885/1480 train_time:135276ms step_avg:154.60ms
step:886/1480 train_time:135443ms step_avg:154.62ms
step:887/1480 train_time:135610ms step_avg:154.63ms
step:888/1480 train_time:135783ms step_avg:154.65ms
step:889/1480 train_time:135950ms step_avg:154.66ms
step:890/1480 train_time:136112ms step_avg:154.67ms
step:891/1480 train_time:136279ms step_avg:154.69ms
step:892/1480 train_time:136444ms step_avg:154.70ms
step:893/1480 train_time:136606ms step_avg:154.71ms
step:894/1480 train_time:136772ms step_avg:154.72ms
step:895/1480 train_time:136938ms step_avg:154.73ms
step:896/1480 train_time:137104ms step_avg:154.74ms
step:897/1480 train_time:137268ms step_avg:154.76ms
step:898/1480 train_time:137436ms step_avg:154.77ms
step:899/1480 train_time:137601ms step_avg:154.78ms
step:900/1480 train_time:137765ms step_avg:154.79ms
step:901/1480 train_time:137930ms step_avg:154.80ms
step:902/1480 train_time:138092ms step_avg:154.81ms
step:903/1480 train_time:138265ms step_avg:154.83ms
step:904/1480 train_time:138429ms step_avg:154.84ms
step:905/1480 train_time:138591ms step_avg:154.85ms
step:906/1480 train_time:138760ms step_avg:154.87ms
step:907/1480 train_time:138928ms step_avg:154.88ms
step:908/1480 train_time:139090ms step_avg:154.89ms
step:909/1480 train_time:139253ms step_avg:154.90ms
step:910/1480 train_time:139424ms step_avg:154.92ms
step:911/1480 train_time:139589ms step_avg:154.93ms
step:912/1480 train_time:139754ms step_avg:154.94ms
step:913/1480 train_time:139922ms step_avg:154.95ms
step:914/1480 train_time:140089ms step_avg:154.97ms
step:915/1480 train_time:140258ms step_avg:154.98ms
step:916/1480 train_time:140423ms step_avg:154.99ms
step:917/1480 train_time:140586ms step_avg:155.00ms
step:918/1480 train_time:140754ms step_avg:155.02ms
step:919/1480 train_time:140924ms step_avg:155.03ms
step:920/1480 train_time:141089ms step_avg:155.04ms
step:921/1480 train_time:141255ms step_avg:155.05ms
step:922/1480 train_time:141423ms step_avg:155.07ms
step:923/1480 train_time:141585ms step_avg:155.08ms
step:924/1480 train_time:141749ms step_avg:155.09ms
step:925/1480 train_time:141913ms step_avg:155.10ms
step:926/1480 train_time:142076ms step_avg:155.11ms
step:927/1480 train_time:142241ms step_avg:155.12ms
step:928/1480 train_time:142407ms step_avg:155.13ms
step:929/1480 train_time:142571ms step_avg:155.14ms
step:930/1480 train_time:142735ms step_avg:155.15ms
step:931/1480 train_time:142899ms step_avg:155.16ms
step:932/1480 train_time:143065ms step_avg:155.17ms
step:933/1480 train_time:143233ms step_avg:155.18ms
step:934/1480 train_time:143401ms step_avg:155.20ms
step:935/1480 train_time:143571ms step_avg:155.21ms
step:936/1480 train_time:143738ms step_avg:155.22ms
step:937/1480 train_time:143907ms step_avg:155.24ms
step:938/1480 train_time:144070ms step_avg:155.25ms
step:939/1480 train_time:144239ms step_avg:155.26ms
step:940/1480 train_time:144406ms step_avg:155.27ms
step:941/1480 train_time:144569ms step_avg:155.28ms
step:942/1480 train_time:144733ms step_avg:155.29ms
step:943/1480 train_time:144903ms step_avg:155.31ms
step:944/1480 train_time:145076ms step_avg:155.33ms
step:945/1480 train_time:145240ms step_avg:155.34ms
step:946/1480 train_time:145410ms step_avg:155.35ms
step:947/1480 train_time:145577ms step_avg:155.36ms
step:948/1480 train_time:145742ms step_avg:155.38ms
step:949/1480 train_time:145908ms step_avg:155.39ms
step:950/1480 train_time:146070ms step_avg:155.39ms
step:951/1480 train_time:146238ms step_avg:155.41ms
step:952/1480 train_time:146405ms step_avg:155.42ms
step:953/1480 train_time:146571ms step_avg:155.43ms
step:954/1480 train_time:146740ms step_avg:155.44ms
step:955/1480 train_time:146904ms step_avg:155.45ms
step:956/1480 train_time:147069ms step_avg:155.46ms
step:957/1480 train_time:147237ms step_avg:155.48ms
step:958/1480 train_time:147407ms step_avg:155.49ms
step:959/1480 train_time:147572ms step_avg:155.50ms
step:960/1480 train_time:147738ms step_avg:155.51ms
step:961/1480 train_time:147904ms step_avg:155.52ms
step:962/1480 train_time:148067ms step_avg:155.53ms
step:963/1480 train_time:148231ms step_avg:155.54ms
step:964/1480 train_time:148399ms step_avg:155.55ms
step:965/1480 train_time:148565ms step_avg:155.57ms
step:966/1480 train_time:148728ms step_avg:155.57ms
step:967/1480 train_time:148891ms step_avg:155.58ms
step:968/1480 train_time:149056ms step_avg:155.59ms
step:969/1480 train_time:149224ms step_avg:155.60ms
step:970/1480 train_time:149387ms step_avg:155.61ms
step:971/1480 train_time:149552ms step_avg:155.62ms
step:972/1480 train_time:149716ms step_avg:155.63ms
step:973/1480 train_time:149880ms step_avg:155.64ms
step:974/1480 train_time:150048ms step_avg:155.65ms
step:975/1480 train_time:150214ms step_avg:155.66ms
step:976/1480 train_time:150379ms step_avg:155.67ms
step:977/1480 train_time:150544ms step_avg:155.68ms
step:978/1480 train_time:150710ms step_avg:155.69ms
step:979/1480 train_time:150874ms step_avg:155.70ms
step:980/1480 train_time:151040ms step_avg:155.71ms
step:981/1480 train_time:151208ms step_avg:155.72ms
step:982/1480 train_time:151370ms step_avg:155.73ms
step:983/1480 train_time:151534ms step_avg:155.74ms
step:984/1480 train_time:151699ms step_avg:155.75ms
step:985/1480 train_time:151867ms step_avg:155.76ms
step:986/1480 train_time:152031ms step_avg:155.77ms
step:987/1480 train_time:152194ms step_avg:155.78ms
step:988/1480 train_time:152364ms step_avg:155.79ms
step:989/1480 train_time:152528ms step_avg:155.80ms
step:990/1480 train_time:152697ms step_avg:155.81ms
step:991/1480 train_time:152864ms step_avg:155.83ms
step:992/1480 train_time:153039ms step_avg:155.84ms
step:993/1480 train_time:153213ms step_avg:155.86ms
step:994/1480 train_time:153378ms step_avg:155.87ms
step:995/1480 train_time:153543ms step_avg:155.88ms
step:996/1480 train_time:153706ms step_avg:155.89ms
step:997/1480 train_time:153870ms step_avg:155.90ms
step:998/1480 train_time:154034ms step_avg:155.90ms
step:999/1480 train_time:154200ms step_avg:155.92ms
step:1000/1480 train_time:154369ms step_avg:155.93ms
step:1000/1480 val_loss:3.4439 train_time:154437ms step_avg:156.00ms
step:1001/1480 train_time:154538ms step_avg:155.94ms
step:1002/1480 train_time:154705ms step_avg:155.95ms
step:1003/1480 train_time:154876ms step_avg:155.97ms
step:1004/1480 train_time:155043ms step_avg:155.98ms
step:1005/1480 train_time:155211ms step_avg:155.99ms
step:1006/1480 train_time:155377ms step_avg:156.00ms
step:1007/1480 train_time:155542ms step_avg:156.01ms
step:1008/1480 train_time:155711ms step_avg:156.02ms
step:1009/1480 train_time:155882ms step_avg:156.04ms
step:1010/1480 train_time:156047ms step_avg:156.05ms
step:1011/1480 train_time:156212ms step_avg:156.06ms
step:1012/1480 train_time:156378ms step_avg:156.07ms
step:1013/1480 train_time:156549ms step_avg:156.08ms
step:1014/1480 train_time:156716ms step_avg:156.09ms
step:1015/1480 train_time:156885ms step_avg:156.10ms
step:1016/1480 train_time:157055ms step_avg:156.12ms
step:1017/1480 train_time:157226ms step_avg:156.13ms
step:1018/1480 train_time:157395ms step_avg:156.15ms
step:1019/1480 train_time:157561ms step_avg:156.16ms
step:1020/1480 train_time:157731ms step_avg:156.17ms
step:1021/1480 train_time:157897ms step_avg:156.18ms
step:1022/1480 train_time:158063ms step_avg:156.19ms
step:1023/1480 train_time:158233ms step_avg:156.20ms
step:1024/1480 train_time:158399ms step_avg:156.21ms
step:1025/1480 train_time:158569ms step_avg:156.23ms
step:1026/1480 train_time:158735ms step_avg:156.24ms
step:1027/1480 train_time:158901ms step_avg:156.24ms
step:1028/1480 train_time:159074ms step_avg:156.26ms
step:1029/1480 train_time:159250ms step_avg:156.28ms
step:1030/1480 train_time:159418ms step_avg:156.29ms
step:1031/1480 train_time:159581ms step_avg:156.30ms
step:1032/1480 train_time:159754ms step_avg:156.32ms
step:1033/1480 train_time:159920ms step_avg:156.32ms
step:1034/1480 train_time:160087ms step_avg:156.33ms
step:1035/1480 train_time:160256ms step_avg:156.35ms
step:1036/1480 train_time:160420ms step_avg:156.36ms
step:1037/1480 train_time:160587ms step_avg:156.37ms
step:1038/1480 train_time:160756ms step_avg:156.38ms
step:1039/1480 train_time:160926ms step_avg:156.39ms
step:1040/1480 train_time:161094ms step_avg:156.40ms
step:1041/1480 train_time:161260ms step_avg:156.41ms
step:1042/1480 train_time:161422ms step_avg:156.42ms
step:1043/1480 train_time:161585ms step_avg:156.42ms
step:1044/1480 train_time:161750ms step_avg:156.43ms
step:1045/1480 train_time:161920ms step_avg:156.44ms
step:1046/1480 train_time:162087ms step_avg:156.45ms
step:1047/1480 train_time:162254ms step_avg:156.46ms
step:1048/1480 train_time:162420ms step_avg:156.47ms
step:1049/1480 train_time:162585ms step_avg:156.48ms
step:1050/1480 train_time:162756ms step_avg:156.50ms
step:1051/1480 train_time:162925ms step_avg:156.51ms
step:1052/1480 train_time:163094ms step_avg:156.52ms
step:1053/1480 train_time:163261ms step_avg:156.53ms
step:1054/1480 train_time:163429ms step_avg:156.54ms
step:1055/1480 train_time:163595ms step_avg:156.55ms
step:1056/1480 train_time:163760ms step_avg:156.56ms
step:1057/1480 train_time:163926ms step_avg:156.57ms
step:1058/1480 train_time:164097ms step_avg:156.58ms
step:1059/1480 train_time:164269ms step_avg:156.60ms
step:1060/1480 train_time:164438ms step_avg:156.61ms
step:1061/1480 train_time:164601ms step_avg:156.61ms
step:1062/1480 train_time:164767ms step_avg:156.62ms
step:1063/1480 train_time:164932ms step_avg:156.63ms
step:1064/1480 train_time:165096ms step_avg:156.64ms
step:1065/1480 train_time:165262ms step_avg:156.65ms
step:1066/1480 train_time:165432ms step_avg:156.66ms
step:1067/1480 train_time:165600ms step_avg:156.67ms
step:1068/1480 train_time:165766ms step_avg:156.68ms
step:1069/1480 train_time:165938ms step_avg:156.69ms
step:1070/1480 train_time:166103ms step_avg:156.70ms
step:1071/1480 train_time:166276ms step_avg:156.72ms
step:1072/1480 train_time:166442ms step_avg:156.72ms
step:1073/1480 train_time:166606ms step_avg:156.73ms
step:1074/1480 train_time:166772ms step_avg:156.74ms
step:1075/1480 train_time:166943ms step_avg:156.75ms
step:1076/1480 train_time:167110ms step_avg:156.76ms
step:1077/1480 train_time:167276ms step_avg:156.77ms
step:1078/1480 train_time:167448ms step_avg:156.79ms
step:1079/1480 train_time:167620ms step_avg:156.80ms
step:1080/1480 train_time:167789ms step_avg:156.81ms
step:1081/1480 train_time:167955ms step_avg:156.82ms
step:1082/1480 train_time:168120ms step_avg:156.83ms
step:1083/1480 train_time:168285ms step_avg:156.84ms
step:1084/1480 train_time:168454ms step_avg:156.85ms
step:1085/1480 train_time:168623ms step_avg:156.86ms
step:1086/1480 train_time:168791ms step_avg:156.87ms
step:1087/1480 train_time:168958ms step_avg:156.88ms
step:1088/1480 train_time:169128ms step_avg:156.89ms
step:1089/1480 train_time:169299ms step_avg:156.90ms
step:1090/1480 train_time:169472ms step_avg:156.92ms
step:1091/1480 train_time:169641ms step_avg:156.93ms
step:1092/1480 train_time:169810ms step_avg:156.94ms
step:1093/1480 train_time:169977ms step_avg:156.95ms
step:1094/1480 train_time:170142ms step_avg:156.96ms
step:1095/1480 train_time:170306ms step_avg:156.96ms
step:1096/1480 train_time:170475ms step_avg:156.98ms
step:1097/1480 train_time:170642ms step_avg:156.98ms
step:1098/1480 train_time:170815ms step_avg:157.00ms
step:1099/1480 train_time:170984ms step_avg:157.01ms
step:1100/1480 train_time:171158ms step_avg:157.03ms
step:1101/1480 train_time:171328ms step_avg:157.04ms
step:1102/1480 train_time:171499ms step_avg:157.05ms
step:1103/1480 train_time:171674ms step_avg:157.07ms
step:1104/1480 train_time:171842ms step_avg:157.08ms
step:1105/1480 train_time:172011ms step_avg:157.09ms
step:1106/1480 train_time:172179ms step_avg:157.10ms
step:1107/1480 train_time:172347ms step_avg:157.11ms
step:1108/1480 train_time:172512ms step_avg:157.11ms
step:1109/1480 train_time:172678ms step_avg:157.12ms
step:1110/1480 train_time:172843ms step_avg:157.13ms
step:1111/1480 train_time:173009ms step_avg:157.14ms
step:1112/1480 train_time:173178ms step_avg:157.15ms
step:1113/1480 train_time:173358ms step_avg:157.17ms
step:1114/1480 train_time:173532ms step_avg:157.18ms
step:1115/1480 train_time:173704ms step_avg:157.20ms
step:1116/1480 train_time:173870ms step_avg:157.21ms
step:1117/1480 train_time:174042ms step_avg:157.22ms
step:1118/1480 train_time:174217ms step_avg:157.24ms
step:1119/1480 train_time:174383ms step_avg:157.24ms
step:1120/1480 train_time:174553ms step_avg:157.25ms
step:1121/1480 train_time:174723ms step_avg:157.27ms
step:1122/1480 train_time:174890ms step_avg:157.28ms
step:1123/1480 train_time:175056ms step_avg:157.28ms
step:1124/1480 train_time:175225ms step_avg:157.29ms
step:1125/1480 train_time:175393ms step_avg:157.30ms
step:1125/1480 val_loss:3.3864 train_time:175462ms step_avg:157.36ms
step:1126/1480 train_time:175563ms step_avg:157.31ms
step:1127/1480 train_time:175732ms step_avg:157.32ms
step:1128/1480 train_time:175902ms step_avg:157.34ms
step:1129/1480 train_time:176075ms step_avg:157.35ms
step:1130/1480 train_time:176245ms step_avg:157.36ms
step:1131/1480 train_time:176422ms step_avg:157.38ms
step:1132/1480 train_time:176587ms step_avg:157.39ms
step:1133/1480 train_time:176761ms step_avg:157.40ms
step:1134/1480 train_time:176932ms step_avg:157.41ms
step:1135/1480 train_time:177100ms step_avg:157.42ms
step:1136/1480 train_time:177268ms step_avg:157.43ms
step:1137/1480 train_time:177439ms step_avg:157.44ms
step:1138/1480 train_time:177609ms step_avg:157.45ms
step:1139/1480 train_time:177778ms step_avg:157.47ms
step:1140/1480 train_time:177945ms step_avg:157.47ms
step:1141/1480 train_time:178118ms step_avg:157.49ms
step:1142/1480 train_time:178285ms step_avg:157.50ms
step:1143/1480 train_time:178458ms step_avg:157.51ms
step:1144/1480 train_time:178626ms step_avg:157.52ms
step:1145/1480 train_time:178789ms step_avg:157.52ms
step:1146/1480 train_time:178961ms step_avg:157.54ms
step:1147/1480 train_time:179129ms step_avg:157.54ms
step:1148/1480 train_time:179297ms step_avg:157.55ms
step:1149/1480 train_time:179468ms step_avg:157.57ms
step:1150/1480 train_time:179637ms step_avg:157.58ms
step:1151/1480 train_time:179809ms step_avg:157.59ms
step:1152/1480 train_time:179980ms step_avg:157.60ms
step:1153/1480 train_time:180154ms step_avg:157.61ms
step:1154/1480 train_time:180322ms step_avg:157.62ms
step:1155/1480 train_time:180491ms step_avg:157.63ms
step:1156/1480 train_time:180672ms step_avg:157.65ms
step:1157/1480 train_time:180842ms step_avg:157.66ms
step:1158/1480 train_time:181008ms step_avg:157.67ms
step:1159/1480 train_time:181177ms step_avg:157.68ms
step:1160/1480 train_time:181343ms step_avg:157.69ms
step:1161/1480 train_time:181512ms step_avg:157.70ms
step:1162/1480 train_time:181681ms step_avg:157.71ms
step:1163/1480 train_time:181850ms step_avg:157.72ms
step:1164/1480 train_time:182019ms step_avg:157.73ms
step:1165/1480 train_time:182184ms step_avg:157.74ms
step:1166/1480 train_time:182354ms step_avg:157.75ms
step:1167/1480 train_time:182521ms step_avg:157.75ms
step:1168/1480 train_time:182688ms step_avg:157.76ms
step:1169/1480 train_time:182859ms step_avg:157.77ms
step:1170/1480 train_time:183028ms step_avg:157.78ms
step:1171/1480 train_time:183195ms step_avg:157.79ms
step:1172/1480 train_time:183362ms step_avg:157.80ms
step:1173/1480 train_time:183533ms step_avg:157.81ms
step:1174/1480 train_time:183717ms step_avg:157.83ms
step:1175/1480 train_time:183890ms step_avg:157.85ms
step:1176/1480 train_time:184064ms step_avg:157.86ms
step:1177/1480 train_time:184239ms step_avg:157.87ms
step:1178/1480 train_time:184406ms step_avg:157.88ms
step:1179/1480 train_time:184571ms step_avg:157.89ms
step:1180/1480 train_time:184751ms step_avg:157.91ms
step:1181/1480 train_time:184922ms step_avg:157.92ms
step:1182/1480 train_time:185089ms step_avg:157.93ms
step:1183/1480 train_time:185262ms step_avg:157.94ms
step:1184/1480 train_time:185429ms step_avg:157.95ms
step:1185/1480 train_time:185602ms step_avg:157.96ms
step:1186/1480 train_time:185772ms step_avg:157.97ms
step:1187/1480 train_time:185958ms step_avg:157.99ms
step:1188/1480 train_time:186126ms step_avg:158.00ms
step:1189/1480 train_time:186297ms step_avg:158.01ms
step:1190/1480 train_time:186465ms step_avg:158.02ms
step:1191/1480 train_time:186636ms step_avg:158.03ms
step:1192/1480 train_time:186802ms step_avg:158.04ms
step:1193/1480 train_time:186970ms step_avg:158.05ms
step:1194/1480 train_time:187140ms step_avg:158.06ms
step:1195/1480 train_time:187312ms step_avg:158.07ms
step:1196/1480 train_time:187497ms step_avg:158.09ms
step:1197/1480 train_time:187668ms step_avg:158.10ms
step:1198/1480 train_time:187850ms step_avg:158.12ms
step:1199/1480 train_time:188021ms step_avg:158.13ms
step:1200/1480 train_time:188189ms step_avg:158.14ms
step:1201/1480 train_time:188359ms step_avg:158.15ms
step:1202/1480 train_time:188541ms step_avg:158.17ms
step:1203/1480 train_time:188718ms step_avg:158.19ms
step:1204/1480 train_time:188893ms step_avg:158.20ms
step:1205/1480 train_time:189061ms step_avg:158.21ms
step:1206/1480 train_time:189228ms step_avg:158.22ms
step:1207/1480 train_time:189398ms step_avg:158.23ms
step:1208/1480 train_time:189566ms step_avg:158.24ms
step:1209/1480 train_time:189739ms step_avg:158.25ms
step:1210/1480 train_time:189914ms step_avg:158.26ms
step:1211/1480 train_time:190087ms step_avg:158.27ms
step:1212/1480 train_time:190259ms step_avg:158.29ms
step:1213/1480 train_time:190431ms step_avg:158.30ms
step:1214/1480 train_time:190608ms step_avg:158.31ms
step:1215/1480 train_time:190780ms step_avg:158.32ms
step:1216/1480 train_time:190949ms step_avg:158.33ms
step:1217/1480 train_time:191121ms step_avg:158.34ms
step:1218/1480 train_time:191290ms step_avg:158.35ms
step:1219/1480 train_time:191470ms step_avg:158.37ms
step:1220/1480 train_time:191641ms step_avg:158.38ms
step:1221/1480 train_time:191808ms step_avg:158.39ms
step:1222/1480 train_time:191977ms step_avg:158.40ms
step:1223/1480 train_time:192146ms step_avg:158.41ms
step:1224/1480 train_time:192324ms step_avg:158.42ms
step:1225/1480 train_time:192496ms step_avg:158.43ms
step:1226/1480 train_time:192669ms step_avg:158.44ms
step:1227/1480 train_time:192844ms step_avg:158.46ms
step:1228/1480 train_time:193014ms step_avg:158.47ms
step:1229/1480 train_time:193186ms step_avg:158.48ms
step:1230/1480 train_time:193367ms step_avg:158.50ms
step:1231/1480 train_time:193541ms step_avg:158.51ms
step:1232/1480 train_time:193715ms step_avg:158.52ms
step:1233/1480 train_time:193885ms step_avg:158.53ms
step:1234/1480 train_time:194054ms step_avg:158.54ms
step:1235/1480 train_time:194228ms step_avg:158.55ms
step:1236/1480 train_time:194397ms step_avg:158.56ms
step:1237/1480 train_time:194568ms step_avg:158.57ms
step:1238/1480 train_time:194753ms step_avg:158.59ms
step:1239/1480 train_time:194924ms step_avg:158.60ms
step:1240/1480 train_time:195094ms step_avg:158.61ms
step:1241/1480 train_time:195266ms step_avg:158.62ms
step:1242/1480 train_time:195434ms step_avg:158.63ms
step:1243/1480 train_time:195608ms step_avg:158.64ms
step:1244/1480 train_time:195776ms step_avg:158.65ms
step:1245/1480 train_time:195946ms step_avg:158.66ms
step:1246/1480 train_time:196114ms step_avg:158.67ms
step:1247/1480 train_time:196283ms step_avg:158.68ms
step:1248/1480 train_time:196451ms step_avg:158.68ms
step:1249/1480 train_time:196620ms step_avg:158.69ms
step:1250/1480 train_time:196789ms step_avg:158.70ms
step:1250/1480 val_loss:3.3370 train_time:196861ms step_avg:158.76ms
step:1251/1480 train_time:196968ms step_avg:158.72ms
step:1252/1480 train_time:197138ms step_avg:158.73ms
step:1253/1480 train_time:197305ms step_avg:158.73ms
step:1254/1480 train_time:197479ms step_avg:158.74ms
step:1255/1480 train_time:197664ms step_avg:158.77ms
step:1256/1480 train_time:197839ms step_avg:158.78ms
step:1257/1480 train_time:198009ms step_avg:158.79ms
step:1258/1480 train_time:198184ms step_avg:158.80ms
step:1259/1480 train_time:198356ms step_avg:158.81ms
step:1260/1480 train_time:198522ms step_avg:158.82ms
step:1261/1480 train_time:198695ms step_avg:158.83ms
step:1262/1480 train_time:198871ms step_avg:158.84ms
step:1263/1480 train_time:199045ms step_avg:158.85ms
step:1264/1480 train_time:199212ms step_avg:158.86ms
step:1265/1480 train_time:199380ms step_avg:158.87ms
step:1266/1480 train_time:199550ms step_avg:158.88ms
step:1267/1480 train_time:199721ms step_avg:158.89ms
step:1268/1480 train_time:199892ms step_avg:158.90ms
step:1269/1480 train_time:200068ms step_avg:158.91ms
step:1270/1480 train_time:200237ms step_avg:158.92ms
step:1271/1480 train_time:200406ms step_avg:158.93ms
step:1272/1480 train_time:200573ms step_avg:158.93ms
step:1273/1480 train_time:200743ms step_avg:158.94ms
step:1274/1480 train_time:200916ms step_avg:158.95ms
step:1275/1480 train_time:201083ms step_avg:158.96ms
step:1276/1480 train_time:201250ms step_avg:158.97ms
step:1277/1480 train_time:201422ms step_avg:158.98ms
step:1278/1480 train_time:201590ms step_avg:158.98ms
step:1279/1480 train_time:201763ms step_avg:158.99ms
step:1280/1480 train_time:201942ms step_avg:159.01ms
step:1281/1480 train_time:202110ms step_avg:159.02ms
step:1282/1480 train_time:202277ms step_avg:159.02ms
step:1283/1480 train_time:202446ms step_avg:159.03ms
step:1284/1480 train_time:202616ms step_avg:159.04ms
step:1285/1480 train_time:202785ms step_avg:159.05ms
step:1286/1480 train_time:202957ms step_avg:159.06ms
step:1287/1480 train_time:203127ms step_avg:159.07ms
step:1288/1480 train_time:203299ms step_avg:159.08ms
step:1289/1480 train_time:203481ms step_avg:159.09ms
step:1290/1480 train_time:203662ms step_avg:159.11ms
step:1291/1480 train_time:203835ms step_avg:159.12ms
step:1292/1480 train_time:204010ms step_avg:159.13ms
step:1293/1480 train_time:204186ms step_avg:159.15ms
step:1294/1480 train_time:204359ms step_avg:159.16ms
step:1295/1480 train_time:204531ms step_avg:159.17ms
step:1296/1480 train_time:204704ms step_avg:159.18ms
step:1297/1480 train_time:204877ms step_avg:159.19ms
step:1298/1480 train_time:205046ms step_avg:159.20ms
step:1299/1480 train_time:205216ms step_avg:159.21ms
step:1300/1480 train_time:205384ms step_avg:159.21ms
step:1301/1480 train_time:205553ms step_avg:159.22ms
step:1302/1480 train_time:205726ms step_avg:159.23ms
step:1303/1480 train_time:205902ms step_avg:159.24ms
step:1304/1480 train_time:206076ms step_avg:159.26ms
step:1305/1480 train_time:206245ms step_avg:159.26ms
step:1306/1480 train_time:206419ms step_avg:159.27ms
step:1307/1480 train_time:206586ms step_avg:159.28ms
step:1308/1480 train_time:206756ms step_avg:159.29ms
step:1309/1480 train_time:206926ms step_avg:159.30ms
step:1310/1480 train_time:207094ms step_avg:159.30ms
step:1311/1480 train_time:207262ms step_avg:159.31ms
step:1312/1480 train_time:207436ms step_avg:159.32ms
step:1313/1480 train_time:207604ms step_avg:159.33ms
step:1314/1480 train_time:207780ms step_avg:159.34ms
step:1315/1480 train_time:207950ms step_avg:159.35ms
step:1316/1480 train_time:208118ms step_avg:159.36ms
step:1317/1480 train_time:208287ms step_avg:159.36ms
step:1318/1480 train_time:208467ms step_avg:159.38ms
step:1319/1480 train_time:208642ms step_avg:159.39ms
step:1320/1480 train_time:208818ms step_avg:159.40ms
step:1321/1480 train_time:208989ms step_avg:159.41ms
step:1322/1480 train_time:209173ms step_avg:159.43ms
step:1323/1480 train_time:209344ms step_avg:159.44ms
step:1324/1480 train_time:209519ms step_avg:159.45ms
step:1325/1480 train_time:209699ms step_avg:159.47ms
step:1326/1480 train_time:209875ms step_avg:159.48ms
step:1327/1480 train_time:210046ms step_avg:159.49ms
step:1328/1480 train_time:210217ms step_avg:159.50ms
step:1329/1480 train_time:210412ms step_avg:159.52ms
step:1330/1480 train_time:210591ms step_avg:159.54ms
step:1331/1480 train_time:210761ms step_avg:159.55ms
step:1332/1480 train_time:210936ms step_avg:159.56ms
step:1333/1480 train_time:211112ms step_avg:159.57ms
step:1334/1480 train_time:211283ms step_avg:159.58ms
step:1335/1480 train_time:211451ms step_avg:159.59ms
step:1336/1480 train_time:211637ms step_avg:159.61ms
step:1337/1480 train_time:211812ms step_avg:159.62ms
step:1338/1480 train_time:211983ms step_avg:159.63ms
step:1339/1480 train_time:212157ms step_avg:159.64ms
step:1340/1480 train_time:212328ms step_avg:159.65ms
step:1341/1480 train_time:212497ms step_avg:159.65ms
step:1342/1480 train_time:212668ms step_avg:159.66ms
step:1343/1480 train_time:212839ms step_avg:159.67ms
step:1344/1480 train_time:213011ms step_avg:159.68ms
step:1345/1480 train_time:213190ms step_avg:159.69ms
step:1346/1480 train_time:213358ms step_avg:159.70ms
step:1347/1480 train_time:213527ms step_avg:159.71ms
step:1348/1480 train_time:213697ms step_avg:159.71ms
step:1349/1480 train_time:213866ms step_avg:159.72ms
step:1350/1480 train_time:214041ms step_avg:159.73ms
step:1351/1480 train_time:214212ms step_avg:159.74ms
step:1352/1480 train_time:214383ms step_avg:159.75ms
step:1353/1480 train_time:214560ms step_avg:159.76ms
step:1354/1480 train_time:214730ms step_avg:159.77ms
step:1355/1480 train_time:214897ms step_avg:159.77ms
step:1356/1480 train_time:215069ms step_avg:159.78ms
step:1357/1480 train_time:215242ms step_avg:159.79ms
step:1358/1480 train_time:215414ms step_avg:159.80ms
step:1359/1480 train_time:215587ms step_avg:159.81ms
step:1360/1480 train_time:215762ms step_avg:159.82ms
step:1361/1480 train_time:215940ms step_avg:159.84ms
step:1362/1480 train_time:216117ms step_avg:159.85ms
step:1363/1480 train_time:216298ms step_avg:159.87ms
step:1364/1480 train_time:216466ms step_avg:159.87ms
step:1365/1480 train_time:216635ms step_avg:159.88ms
step:1366/1480 train_time:216807ms step_avg:159.89ms
step:1367/1480 train_time:216978ms step_avg:159.90ms
step:1368/1480 train_time:217150ms step_avg:159.90ms
step:1369/1480 train_time:217330ms step_avg:159.92ms
step:1370/1480 train_time:217509ms step_avg:159.93ms
step:1371/1480 train_time:217682ms step_avg:159.94ms
step:1372/1480 train_time:217860ms step_avg:159.96ms
step:1373/1480 train_time:218028ms step_avg:159.96ms
step:1374/1480 train_time:218205ms step_avg:159.97ms
step:1375/1480 train_time:218377ms step_avg:159.98ms
step:1375/1480 val_loss:3.2982 train_time:218445ms step_avg:160.03ms
step:1376/1480 train_time:218552ms step_avg:159.99ms
step:1377/1480 train_time:218724ms step_avg:160.00ms
step:1378/1480 train_time:218893ms step_avg:160.01ms
step:1379/1480 train_time:219066ms step_avg:160.02ms
step:1380/1480 train_time:219239ms step_avg:160.03ms
step:1381/1480 train_time:219419ms step_avg:160.04ms
step:1382/1480 train_time:219592ms step_avg:160.05ms
step:1383/1480 train_time:219762ms step_avg:160.06ms
step:1384/1480 train_time:219937ms step_avg:160.07ms
step:1385/1480 train_time:220102ms step_avg:160.07ms
step:1386/1480 train_time:220274ms step_avg:160.08ms
step:1387/1480 train_time:220445ms step_avg:160.09ms
step:1388/1480 train_time:220613ms step_avg:160.10ms
step:1389/1480 train_time:220787ms step_avg:160.11ms
step:1390/1480 train_time:220955ms step_avg:160.11ms
step:1391/1480 train_time:221124ms step_avg:160.12ms
step:1392/1480 train_time:221297ms step_avg:160.13ms
step:1393/1480 train_time:221467ms step_avg:160.14ms
step:1394/1480 train_time:221637ms step_avg:160.14ms
step:1395/1480 train_time:221806ms step_avg:160.15ms
step:1396/1480 train_time:221974ms step_avg:160.15ms
step:1397/1480 train_time:222141ms step_avg:160.16ms
step:1398/1480 train_time:222309ms step_avg:160.17ms
step:1399/1480 train_time:222478ms step_avg:160.17ms
step:1400/1480 train_time:222655ms step_avg:160.18ms
step:1401/1480 train_time:222820ms step_avg:160.19ms
step:1402/1480 train_time:222992ms step_avg:160.20ms
step:1403/1480 train_time:223170ms step_avg:160.21ms
step:1404/1480 train_time:223341ms step_avg:160.22ms
step:1405/1480 train_time:223516ms step_avg:160.23ms
step:1406/1480 train_time:223692ms step_avg:160.24ms
step:1407/1480 train_time:223858ms step_avg:160.24ms
step:1408/1480 train_time:224027ms step_avg:160.25ms
step:1409/1480 train_time:224209ms step_avg:160.26ms
step:1410/1480 train_time:224377ms step_avg:160.27ms
step:1411/1480 train_time:224547ms step_avg:160.28ms
step:1412/1480 train_time:224717ms step_avg:160.28ms
step:1413/1480 train_time:224890ms step_avg:160.29ms
step:1414/1480 train_time:225060ms step_avg:160.30ms
step:1415/1480 train_time:225235ms step_avg:160.31ms
step:1416/1480 train_time:225421ms step_avg:160.33ms
step:1417/1480 train_time:225595ms step_avg:160.34ms
step:1418/1480 train_time:225766ms step_avg:160.35ms
step:1419/1480 train_time:225940ms step_avg:160.35ms
step:1420/1480 train_time:226115ms step_avg:160.37ms
step:1421/1480 train_time:226291ms step_avg:160.38ms
step:1422/1480 train_time:226461ms step_avg:160.38ms
step:1423/1480 train_time:226631ms step_avg:160.39ms
step:1424/1480 train_time:226807ms step_avg:160.40ms
step:1425/1480 train_time:226988ms step_avg:160.42ms
step:1426/1480 train_time:227159ms step_avg:160.42ms
step:1427/1480 train_time:227334ms step_avg:160.43ms
step:1428/1480 train_time:227506ms step_avg:160.44ms
step:1429/1480 train_time:227675ms step_avg:160.45ms
step:1430/1480 train_time:227850ms step_avg:160.46ms
step:1431/1480 train_time:228025ms step_avg:160.47ms
step:1432/1480 train_time:228201ms step_avg:160.48ms
step:1433/1480 train_time:228381ms step_avg:160.49ms
step:1434/1480 train_time:228560ms step_avg:160.51ms
step:1435/1480 train_time:228735ms step_avg:160.52ms
step:1436/1480 train_time:228908ms step_avg:160.52ms
step:1437/1480 train_time:229079ms step_avg:160.53ms
step:1438/1480 train_time:229248ms step_avg:160.54ms
step:1439/1480 train_time:229422ms step_avg:160.55ms
step:1440/1480 train_time:229594ms step_avg:160.56ms
step:1441/1480 train_time:229765ms step_avg:160.56ms
step:1442/1480 train_time:229941ms step_avg:160.57ms
step:1443/1480 train_time:230132ms step_avg:160.59ms
step:1444/1480 train_time:230303ms step_avg:160.60ms
step:1445/1480 train_time:230475ms step_avg:160.61ms
step:1446/1480 train_time:230651ms step_avg:160.62ms
step:1447/1480 train_time:230827ms step_avg:160.63ms
step:1448/1480 train_time:230999ms step_avg:160.64ms
step:1449/1480 train_time:231172ms step_avg:160.65ms
step:1450/1480 train_time:231343ms step_avg:160.65ms
step:1451/1480 train_time:231514ms step_avg:160.66ms
step:1452/1480 train_time:231690ms step_avg:160.67ms
step:1453/1480 train_time:231859ms step_avg:160.68ms
step:1454/1480 train_time:232032ms step_avg:160.69ms
step:1455/1480 train_time:232212ms step_avg:160.70ms
step:1456/1480 train_time:232386ms step_avg:160.71ms
step:1457/1480 train_time:232557ms step_avg:160.72ms
step:1458/1480 train_time:232729ms step_avg:160.72ms
step:1459/1480 train_time:232905ms step_avg:160.73ms
step:1460/1480 train_time:233076ms step_avg:160.74ms
step:1461/1480 train_time:233251ms step_avg:160.75ms
step:1462/1480 train_time:233420ms step_avg:160.76ms
step:1463/1480 train_time:233597ms step_avg:160.77ms
step:1464/1480 train_time:233771ms step_avg:160.78ms
step:1465/1480 train_time:233943ms step_avg:160.79ms
step:1466/1480 train_time:234114ms step_avg:160.79ms
step:1467/1480 train_time:234287ms step_avg:160.80ms
step:1468/1480 train_time:234455ms step_avg:160.81ms
step:1469/1480 train_time:234629ms step_avg:160.81ms
step:1470/1480 train_time:234808ms step_avg:160.83ms
step:1471/1480 train_time:234994ms step_avg:160.84ms
step:1472/1480 train_time:235176ms step_avg:160.86ms
step:1473/1480 train_time:235347ms step_avg:160.87ms
step:1474/1480 train_time:235525ms step_avg:160.88ms
step:1475/1480 train_time:235704ms step_avg:160.89ms
step:1476/1480 train_time:235876ms step_avg:160.90ms
step:1477/1480 train_time:236057ms step_avg:160.91ms
step:1478/1480 train_time:236239ms step_avg:160.93ms
step:1479/1480 train_time:236413ms step_avg:160.93ms
step:1480/1480 train_time:236585ms step_avg:160.94ms
step:1480/1480 val_loss:3.2789 train_time:236656ms step_avg:160.99ms
