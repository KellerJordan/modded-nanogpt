import os
import sys
with open(sys.argv[0]) as f:
    code = f.read() # read the code of this file ASAP, for logging
import uuid
import time
from dataclasses import dataclass
from pathlib import Path

import torch
from torch import nn
import torch.nn.functional as F
import torch.distributed as dist
import torch._inductor.config as config
from torch.nn.parallel import DistributedDataParallel as DDP
# Use of FlexAttention contributed by @KoszarskyB
from torch.nn.attention.flex_attention import BlockMask, flex_attention

# -----------------------------------------------------------------------------
# Muon optimizer

def zeropower_via_svd(G, steps=None):
    U, S, V = G.svd()
    return U @ V.T

@torch.compile
def zeropower_via_newtonschulz5(G, steps=10, eps=1e-7):
    """
    Newton-Schulz iteration to compute the zeroth power / orthogonalization of G. We opt to use a
    quintic iteration whose coefficients are selected to maximize the slope at zero. For the purpose
    of minimizing steps, it turns out to be empirically effective to keep increasing the slope at
    zero even beyond the point where the iteration no longer converges all the way to one everywhere
    on the interval. This iteration therefore does not produce UV^T but rather something like US'V^T
    where S' is diagonal with S_{ii}' ~ Uniform(0.5, 1.5), which turns out not to hurt model
    performance at all relative to UV^T, where USV^T = G is the SVD.
    """
    assert len(G.shape) == 2
    a, b, c = (3.4445, -4.7750,  2.0315)
    X = G.bfloat16()
    X /= (X.norm() + eps) # ensure top singular value <= 1
    if G.size(0) > G.size(1):
        X = X.T
    for _ in range(steps):
        A = X @ X.T
        B = b * A + c * A @ A # adapted from suggestion by @jxbz, @leloykun, and @YouJiacheng
        X = a * X + B @ X
    if G.size(0) > G.size(1):
        X = X.T
    return X

zeropower_backends = dict(svd=zeropower_via_svd, newtonschulz5=zeropower_via_newtonschulz5)

class Muon(torch.optim.Optimizer):
    """
    Muon - MomentUm Orthogonalized by Newton-schulz

    Muon internally runs standard SGD-momentum, and then performs an orthogonalization post-
    processing step, in which each 2D parameter's update is replaced with the nearest orthogonal
    matrix. To efficiently orthogonalize each update, we use a Newton-Schulz iteration, which has
    the advantage that it can be stably run in bfloat16 on the GPU.

    Some warnings:
    - This optimizer assumes that all parameters passed in are 2D.
    - It should not be used for the embedding layer, the final fully connected layer, or any {0,1}-D
    parameters; those should all be optimized by a standard method (e.g., AdamW).
    - To use it with 4D convolutional filters, it works well to just flatten their last 3 dimensions.
    - We believe it is unlikely to work well for training with small batch size.
    - We believe it may not work well for finetuning pretrained models, but we haven't tested this.
    - We have not yet tried this optimizer for training scenarios larger than NanoGPT (124M).

    Arguments:
        lr: The learning rate used by the internal SGD.
        momentum: The momentum used by the internal SGD.
        nesterov: Whether to use Nesterov-style momentum in the internal SGD. (recommended)
        backend: The chosen backend for the orthogonalization step. (recommended: 'newtonschulz5')
        backend_steps: The number of iteration steps to use in the backend, if it is iterative.
    """
    def __init__(self, params, lr=0.02, momentum=0.95, nesterov=True,
                 backend='newtonschulz5', backend_steps=5):
        self.num_process = int(os.environ['WORLD_SIZE'])
        self.rank = int(os.environ["RANK"])
        defaults = dict(lr=lr, momentum=momentum, nesterov=nesterov, backend=backend, backend_steps=backend_steps)
        params: "list[torch.Tensor]" = list(params)
        assert all(isinstance(p, torch.Tensor) for p in params)
        sizes = {p.numel() for p in params}
        param_groups = [
            {
                "params": [p for p in params if p.numel() == size],
                "update_buffer": [
                    torch.empty(size, device="cuda", dtype=torch.bfloat16)
                    for _ in range(self.num_process)
                ],
            }
            for size in sizes
        ]
        super().__init__(param_groups, defaults)

    def step(self):
        for group in self.param_groups:
            lr: float = group["lr"]
            momentum: float = group["momentum"]
            nesterov: bool = group["nesterov"]
            zeropower_backend = zeropower_backends[group["backend"]]
            backend_steps: int = group["backend_steps"]
            update_buffers: "list[torch.Tensor]" = group["update_buffer"]
            # generate weight updates in distributed fashion
            params: "list[torch.Tensor]" = group["params"]
            assert len(params) % self.num_process == 0
            handle = None
            params_world = None
            def update_prev():
                if params_world is None:
                    return
                assert handle is not None
                handle.wait()
                for p_world, g_world in zip(params_world, update_buffers):
                    p_world.data.add_(
                        g_world.view_as(p_world),
                        alpha=-lr * max(1, p_world.size(0) / p_world.size(1)) ** 0.5,
                    )
            for base_i in range(len(params))[::self.num_process]:
                p = params[base_i + self.rank]
                g = p.grad
                assert g is not None
                state = self.state[p] 
                if "momentum_buffer" not in state:
                    state["momentum_buffer"] = torch.zeros_like(g)
                buf: torch.Tensor = state["momentum_buffer"]
                buf.lerp_(g, 1 - momentum)
                g = g.lerp_(buf, momentum) if nesterov else buf
                g = zeropower_backend(g, steps=backend_steps).flatten()
                update_prev()
                handle = dist.all_gather(update_buffers, g, async_op=True)
                params_world = params[base_i : base_i + self.num_process]
            update_prev()


# -----------------------------------------------------------------------------
# PyTorch nn.Module definitions for the GPT-2 model

def norm(x):
    return F.rms_norm(x, (x.size(-1),))

class CastedLinear(nn.Linear):

    def __init__(self, in_features, out_features):
        super().__init__(in_features, out_features, bias=False)

    def forward(self, x):
        return F.linear(x, self.weight.to(x.dtype))

class Rotary(torch.nn.Module):

    def __init__(self, dim, base=10000):
        super().__init__()
        self.register_buffer('inv_freq', (1 / base) ** (torch.arange(0, dim, 2) / dim))
        self.seq_len_cached = None
        self.cos_cached = None
        self.sin_cached = None

    def forward(self, x):
        seq_len = x.shape[1]
        if seq_len != self.seq_len_cached:
            t = torch.arange(seq_len, device=x.device)
            freqs = torch.outer(t, self.inv_freq)
            self.seq_len_cached = seq_len
            self.cos_cached = freqs.cos()
            self.sin_cached = freqs.sin()
        cos, sin = self.cos_cached[None, :, None, :], self.sin_cached[None, :, None, :]
        # apply_rotary_emb(x, cos, sin)
        x1, x2 = x.chunk(2, dim=3)
        y1 = x1 * cos + x2 * sin
        y2 = x1 * (-sin) + x2 * cos
        return torch.cat((y1, y2), 3).type_as(x)

class CausalSelfAttention(nn.Module):

    def __init__(self, dim, n_head):
        super().__init__()
        assert dim % n_head == 0
        self.n_head = n_head
        self.c_q = CastedLinear(dim, dim)
        self.c_k = CastedLinear(dim, dim)
        self.c_v = CastedLinear(dim, dim)
        # value residual lambda
        self.lambdas = nn.Parameter(torch.tensor([0.5, 0.5])) # @Grad62304977
        # rotary embeddings
        self.rotary = Rotary(dim // n_head) # dim // n_head = head_dim
        # output projection
        self.c_proj = CastedLinear(dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor, vi: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        B, T = x.size(0), x.size(1) # batch size, sequence length
        assert B == 1, "Must use batch size = 1 for FlexAttention"
        q: torch.Tensor = self.c_q(x).view(B, T, self.n_head, -1)
        k: torch.Tensor = self.c_k(x).view(B, T, self.n_head, -1)
        v: torch.Tensor = self.c_v(x).view(B, T, self.n_head, -1)
        v = self.lambdas[0] * v + self.lambdas[1] * vi.view_as(v) # @Grad62304977
        q, k = norm(q), norm(k) # QK norm suggested by @Grad62304977
        q, k = self.rotary(q), self.rotary(k)
        y = flex_attention(q.transpose(1, 2), k.transpose(1, 2), v.transpose(1, 2), block_mask=block_mask)
        y = y.transpose(1, 2).contiguous().view_as(x) # re-assemble all head outputs side by side
        y = self.c_proj(y)
        return y

class MLP(nn.Module):

    def __init__(self, dim: int):
        super().__init__()
        self.c_fc   = CastedLinear(dim, 4 * dim)
        self.c_proj = CastedLinear(4 * dim, dim)
        self.c_proj.weight.data.zero_() # zero init suggested by @Grad62304977

    def forward(self, x: torch.Tensor) -> torch.Tensor:
        x = self.c_fc(x)
        x = F.relu(x).square() # https://arxiv.org/abs/2109.08668v2; ~1-2% better than GELU; suggested by @SKYLINEZ007 and @Grad62304977
        x = self.c_proj(x)
        return x

class Block(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.attn = CausalSelfAttention(config.n_embd, config.n_head)
        self.mlp = MLP(config.n_embd)
        self.lambdas = nn.Parameter(torch.tensor([1., 0.]))

    def forward(self, x: torch.Tensor, vi: torch.Tensor, x0: torch.Tensor, block_mask: BlockMask) -> torch.Tensor:
        x = self.lambdas[0] * x + self.lambdas[1] * x0
        x = x + self.attn(norm(x), vi, block_mask)
        x = x + self.mlp(norm(x))
        return x

# -----------------------------------------------------------------------------
# The main GPT-2 model

@dataclass
class GPTConfig:
    vocab_size : int = 50304
    n_layer : int = 12
    n_head : int = 6 # head dim 128 suggested by @Grad62304977
    n_embd : int = 768
    lm_head_softcap : int = 30

class GPT(nn.Module):

    def __init__(self, config: GPTConfig):
        super().__init__()
        self.n_layer = config.n_layer
        self.lm_head_softcap = config.lm_head_softcap

        # U-net design by @brendanh0gan
        self.num_encoder_layers = config.n_layer // 2 # Half of the layers for encoder
        self.num_decoder_layers = config.n_layer - self.num_encoder_layers # Remaining for decoder
        # Add learnable skip connection weights for decoder layers
        self.skip_weights = nn.Parameter(torch.ones(self.num_decoder_layers))

        self.transformer = nn.ModuleDict(dict(
            wte = nn.Embedding(config.vocab_size, config.n_embd),
            # token value embeddings by @KoszarskyB - inspired by @Grad62304977's value residual learning
            # U-net structure on token value embeddings by @leloykun
            vte = nn.Embedding(config.vocab_size, config.n_embd*self.num_encoder_layers),
            h = nn.ModuleList([Block(config) for _ in range(config.n_layer)]),
        ))
        self.lm_head = CastedLinear(config.n_embd, config.vocab_size)
        self.lm_head.weight.data.zero_() # @Grad62304977

    def forward(self, idx: torch.Tensor, target: torch.Tensor, sliding_window: torch.Tensor) -> torch.Tensor:
        BLOCK_SIZE = 128
        assert idx.ndim == 1
        docs = (idx == 50256).cumsum(0)
        docs_low = docs.reshape(-1, BLOCK_SIZE)[:, 0].contiguous()
        docs_high = docs.reshape(-1, BLOCK_SIZE)[:, -1].contiguous()
        def document_sliding_window_causal(b, h, q_idx, kv_idx):
            causal_mask = q_idx >= kv_idx
            document_mask = docs[q_idx] == docs[kv_idx]
            window_mask = q_idx - kv_idx < sliding_window
            return causal_mask & document_mask & window_mask

        S = len(idx)
        def create_sliding_window_causal_mask(S: int, sliding_window: torch.Tensor):
            kv_idx = block_idx = torch.arange(S // BLOCK_SIZE, dtype=torch.int32, device="cuda")
            q_idx = block_idx[:, None]
            causal_mask = q_idx >= kv_idx
            document_mask = (docs_low[q_idx] <= docs_high[kv_idx]) & (docs_low[kv_idx] <= docs_high[q_idx])
            window_mask = q_idx - kv_idx < ((sliding_window + BLOCK_SIZE - 1) // BLOCK_SIZE)
            dense_mask = causal_mask & document_mask & window_mask
            dense_mask = dense_mask.to(torch.int32)
            num_blocks = dense_mask.sum(dim=-1).to(torch.int32)
            indices = torch.argsort(dense_mask, dim=-1, descending=True, stable=True).to(torch.int32)
            num_blocks = num_blocks[None, None, :].contiguous()
            indices = indices[None, None, :].contiguous()
            return BlockMask.from_kv_blocks(num_blocks, indices, BLOCK_SIZE=BLOCK_SIZE, mask_mod=document_sliding_window_causal)
        block_mask = create_sliding_window_causal_mask(S, sliding_window)

        # forward the GPT model itself
        x = self.transformer.wte(idx[None]) # token embeddings of shape (b, t, n_embd)
        x = norm(x) # @Grad62304977
        x0 = x
        vi = self.transformer.vte(idx[None]).chunk(self.num_encoder_layers, dim=-1)

        # Store outputs for U-Net skip connections
        skip_connections = []
        # Encoder pass - process only the first half of the blocks
        for i in range(self.num_encoder_layers):
            x = self.transformer.h[i](x, vi[i], x0, block_mask)
            skip_connections.append(x)
        # Decoder pass - process the remaining blocks with weighted skip connections
        for i in range(self.num_decoder_layers):
            x = x + self.skip_weights[i] * skip_connections.pop()
            # U-net structure on token value embeddings by @leloykun
            x = self.transformer.h[self.num_encoder_layers + i](x, vi[self.num_encoder_layers-1-i], x0, block_mask)

        x = norm(x)
        logits = self.lm_head(x)
        logits = self.lm_head_softcap * torch.tanh(logits / self.lm_head_softcap) # @Grad62304977
        logits = logits.float()
        loss = F.cross_entropy(logits.view(-1, logits.size(-1)), target.view(-1))
        return loss

# -----------------------------------------------------------------------------
# Our own simple Distributed Data Loader

def _peek_data_shard(file: Path):
    # only reads the header, returns header data
    # header is 256 int32
    header = torch.from_file(f"{file}", False, 256, dtype=torch.int32)
    assert header[0] == 20240520, "magic number mismatch in the data .bin file"
    assert header[1] == 1, "unsupported version"
    return int(header[2]) # number of tokens (claimed)

def _load_data_shard(file: Path, ntok: int):
    with file.open("rb") as f:
        tokens = torch.empty(ntok, dtype=torch.uint16, pin_memory=True)
        f.seek(256 * 4)
        nbytes = f.readinto(tokens.numpy())
        assert nbytes == 2 * ntok, "number of tokens read does not match header?"
    return tokens

class DistributedDataLoader:
    def __init__(self, filename_pattern, T, process_rank, num_processes):
        self.process_rank = process_rank
        self.num_processes = num_processes
        self.T = T

        # glob files that match the pattern
        self.files = sorted(Path.cwd().glob(filename_pattern))
        assert len(self.files) > 0, f"did not find any files that match the pattern {filename_pattern}"

        # load and validate all data shards, count number of tokens in total
        self.ntoks = [_peek_data_shard(file) for file in self.files]
        assert min(self.ntoks) >= num_processes * T + 1
        self.ntok_total = sum(self.ntoks)

        self.reset()

    def reset(self):
        self.current_shard = -1
        self.advance()

    def advance(self): # advance to next data shard
        self.current_shard = (self.current_shard + 1) % len(self.files)
        self.current_position = self.process_rank * self.T
        self.tokens = _load_data_shard(self.files[self.current_shard], self.ntoks[self.current_shard])

    def next_batch(self):
        batch_size = self.T * self.num_processes
        buf = self.tokens[self.current_position:self.current_position+self.T+1]
        # host side async is sufficient;
        # no performance improvement was observed when introducing a separate stream.
        x = buf[:-1].to(device="cuda", dtype=torch.int32, non_blocking=True) # inputs
        y = buf[1:].to(device="cuda", dtype=torch.int64, non_blocking=True) # targets
        # advance current position and load next shard if necessary
        self.current_position += batch_size
        if self.current_position + batch_size + 1 >= len(self.tokens):
            self.advance()
        return x, y

# -----------------------------------------------------------------------------
# int main

@dataclass
class Hyperparameters:
    # data hyperparams
    input_bin : str = 'data/fineweb10B/fineweb_train_*.bin' # input .bin to train on
    input_val_bin : str = 'data/fineweb10B/fineweb_val_*.bin' # input .bin to eval validation loss on
    # optimization hyperparams
    batch_size : int = 8 # batch size, in sequences, across all devices
    sequence_length : int = 64*1024 # sequence length, in tokens
    num_iterations : int = 1480 # number of iterations to run
    warmup_iters : int = 0
    cooldown_iters : int = 600 # number of iterations of linear warmup/cooldown for triangular or trapezoidal schedule
    weight_decay : float = 0
    # evaluation and logging hyperparams
    val_loss_every : int = 125 # every how many steps to evaluate val loss? 0 for only at the end
    val_tokens : int = 10485760 # how many tokens of validation data? it's important to keep this fixed for consistent comparisons
    save_every : int = 0 # every how many steps to save the checkpoint? 0 for only at the end
args = Hyperparameters()

# set up DDP (distributed data parallel). torchrun sets this env variable
assert torch.cuda.is_available()
dist.init_process_group(backend='nccl')
ddp_rank = int(os.environ['RANK'])
ddp_local_rank = int(os.environ['LOCAL_RANK'])
ddp_world_size = int(os.environ['WORLD_SIZE'])
device = f'cuda:{ddp_local_rank}'
torch.cuda.set_device(device)
print(f"using device: {device}")
master_process = (ddp_rank == 0) # this process will do logging, checkpointing etc.

# begin logging
logfile = None
if master_process:
    run_id = str(uuid.uuid4())
    logdir = 'logs/%s/' % run_id
    # os.makedirs(logdir, exist_ok=True)
    logfile = 'logs/%s.txt' % run_id
    # create the log file
    with open(logfile, "w") as f:
        # begin the log by printing this file (the Python code)
        f.write(code)
        f.write('='*100 + '\n')
def print0(s, logonly=False):
    if master_process:
        with open(logfile, "a") as f:
            if not logonly:
                print(s)
            f.write(s+'\n')
# log information about the hardware/software environment this is running on
# and print the full `nvidia-smi` to file
print0(f"Running pytorch {torch.version.__version__} compiled for CUDA {torch.version.cuda}\nnvidia-smi:")
import subprocess
result = subprocess.run(['nvidia-smi'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
print0(f'{result.stdout}', logonly=True)
print0('='*100, logonly=True)

# convenience variables
T = args.sequence_length
# calculate the number of steps to take in the val loop.
assert args.val_tokens % (T * ddp_world_size) == 0
val_steps = args.val_tokens // (T * ddp_world_size)
# calculate the steps of gradient accumulation required to attain the desired global batch size.
assert args.batch_size % (ddp_world_size) == 0
train_accumulation_steps = args.batch_size // ddp_world_size
assert train_accumulation_steps == 1

# load tokens
train_loader = DistributedDataLoader(args.input_bin, T, ddp_rank, ddp_world_size)
val_loader = DistributedDataLoader(args.input_val_bin, T, ddp_rank, ddp_world_size)
print0(f"Training DataLoader: total number of tokens: {train_loader.ntok_total} across {len(train_loader.files)} files")
print0(f"Validation DataLoader: total number of tokens: {val_loader.ntok_total} across {len(val_loader.files)} files")
print0('='*100, logonly=True)
x, y = train_loader.next_batch()

# there are only 50257 unique GPT-2 tokens; we extend to nearest multiple of 128 for efficiency. suggested to me by @Grad62304977.
# this originates from Karpathy's experiments.
num_vocab = 50304
model = GPT(GPTConfig(vocab_size=num_vocab, n_layer=12, n_head=6, n_embd=768))
model = model.cuda().bfloat16()
for m in model.modules():
    if isinstance(m, CastedLinear):
        m.float()
if hasattr(config, "coordinate_descent_tuning"):
    config.coordinate_descent_tuning = True # suggested by @Chillee
model = torch.compile(model)
# here we wrap model into DDP container
model = DDP(model, device_ids=[ddp_local_rank])
raw_model = model.module # always contains the "raw" unwrapped model

# init the optimizer(s)
optimizer1 = torch.optim.Adam([raw_model.transformer.wte.weight, raw_model.transformer.vte.weight], lr=0.6, betas=(0.8, 0.95), fused=True)
optimizer2 = torch.optim.Adam([raw_model.lm_head.weight], lr=0.008, betas=(0.8, 0.95), fused=True)
params = list(raw_model.transformer.h.parameters())
matrix_params = [p for p in params if p.ndim == 2]
scalar_params = [p for p in params if p.ndim < 2] + [raw_model.skip_weights]
optimizer3 = Muon(matrix_params, lr=0.05, momentum=0.95)
optimizer4 = torch.optim.Adam(scalar_params, lr=0.04, betas=(0.8, 0.95), fused=True)
optimizers = [optimizer1, optimizer2, optimizer3, optimizer4]
# learning rate decay scheduler (linear warmup and cooldown)
def get_lr(it):
    assert it <= args.num_iterations
    # 1) linear warmup for warmup_iters steps
    if it < args.warmup_iters:
        return (it+1) / args.warmup_iters
    # 2) constant lr for a while
    elif it < args.num_iterations - args.cooldown_iters:
        return 1.0
    # 3) linear cooldown
    else:
        decay_ratio = (args.num_iterations - it) / args.cooldown_iters
        return decay_ratio
schedulers = [torch.optim.lr_scheduler.LambdaLR(opt, get_lr) for opt in optimizers]

sliding_window_size = torch.tensor(64, dtype=torch.int32, device="cuda")
sw_size_prev = 64
# Start training loop
training_time_ms = 0
# start the clock
torch.cuda.synchronize()
t0 = time.perf_counter()
# begin training
for step in range(args.num_iterations + 1):
    last_step = (step == args.num_iterations)
    # This effectively ignores timing first 10 steps, which are slower for weird reasons.
    # Alternately, and slightly more correctly in terms of benchmarking, we could do 10
    # steps with dummy data first, and then re-initialize the model and reset the loader.
    if step == 10:
        training_time_ms = 0
        t0 = time.perf_counter()
    timed_steps = float('nan') if step <= 11 else (step - 10) + 1 # <= 11 to avoid bug in val

    # Set the sliding window size for the current step, in chunks of 64. By @fernbear.bsky.social
    sw_size =  64 * int((64 + (1792 - 64) * step / args.num_iterations) // 64)
    if sw_size != sw_size_prev:
        sliding_window_size.copy_(sw_size, non_blocking=True)
        sw_size_prev = sw_size

    # once in a while evaluate the validation dataset
    if (last_step or (args.val_loss_every > 0 and step % args.val_loss_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # run validation batches
        model.eval()
        val_loader.reset()
        val_loss = 0.0
        for _ in range(val_steps):
            with torch.no_grad():
                x_val, y_val = val_loader.next_batch()
                val_loss += model(x_val, y_val, sliding_window=sliding_window_size)
        dist.all_reduce(val_loss, op=dist.ReduceOp.AVG)
        val_loss /= val_steps
        # log val loss to console and to logfile
        print0(f'step:{step}/{args.num_iterations} val_loss:{val_loss:.4f} train_time:{training_time_ms:.0f}ms step_avg:{training_time_ms/(timed_steps-1):.2f}ms')
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    if master_process and (last_step or (args.save_every > 0 and step % args.save_every == 0)):
        # stop the clock
        torch.cuda.synchronize()
        training_time_ms += 1000 * (time.perf_counter() - t0)
        # save the state of the training process
        log = dict(step=step, code=code, model=raw_model.state_dict(), optimizers=[opt.state_dict() for opt in optimizers])
        # torch.save(log, 'logs/%s/state_step%06d.pt' % (run_id, step))
        # start the clock again
        torch.cuda.synchronize()
        t0 = time.perf_counter()

    # bit confusing: we want to make sure to eval on 0th iteration
    # but also after the very last iteration. so we loop for step <= num_iterations
    # instead of just < num_iterations (one extra due to <=), only to do
    # the validation/sampling one last time, and then we break right here as we're done.
    if last_step:
        break

    # --------------- TRAINING SECTION BEGIN -----------------
    model.train()
    loss = model(x, y, sliding_window=sliding_window_size)
    loss.backward()
    del loss
    # advance the dataset for the next batch
    x, y = train_loader.next_batch()
    # momentum warmup for Muon
    frac = min(step/300, 1)
    for group in optimizer3.param_groups:
        group['momentum'] = (1 - frac) * 0.85 + frac * 0.95
    # step the optimizers and schedulers
    for opt, sched in zip(optimizers, schedulers):
        opt.step()
        sched.step()
    # null the gradients
    model.zero_grad(set_to_none=True)
    # --------------- TRAINING SECTION END -------------------
    # everything that follows now is just diagnostics, prints, logging, etc.
    approx_time = training_time_ms + 1000 * (time.perf_counter() - t0)
    print0(f"step:{step+1}/{args.num_iterations} train_time:{approx_time:.0f}ms step_avg:{approx_time/timed_steps:.2f}ms")

if master_process:
    print(f"peak memory consumption: {torch.cuda.max_memory_allocated() // 1024 // 1024} MiB")

# -------------------------------------------------------------------------
# clean up nice
dist.destroy_process_group()
====================================================================================================
Running pytorch 2.6.0.dev20241203+cu124 compiled for CUDA 12.4
nvidia-smi:
Sun Dec  8 10:10:01 2024       
+---------------------------------------------------------------------------------------+
| NVIDIA-SMI 535.129.03             Driver Version: 535.129.03   CUDA Version: 12.6     |
|-----------------------------------------+----------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |         Memory-Usage | GPU-Util  Compute M. |
|                                         |                      |               MIG M. |
|=========================================+======================+======================|
|   0  NVIDIA H100 80GB HBM3          On  | 00000000:65:02.0 Off |                    0 |
| N/A   37C    P0              74W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   1  NVIDIA H100 80GB HBM3          On  | 00000000:67:02.0 Off |                    0 |
| N/A   44C    P0              78W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   2  NVIDIA H100 80GB HBM3          On  | 00000000:69:02.0 Off |                    0 |
| N/A   45C    P0              75W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   3  NVIDIA H100 80GB HBM3          On  | 00000000:6B:02.0 Off |                    0 |
| N/A   38C    P0              73W / 700W |      7MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   4  NVIDIA H100 80GB HBM3          On  | 00000000:6F:02.0 Off |                    0 |
| N/A   39C    P0             104W / 700W |     27MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   5  NVIDIA H100 80GB HBM3          On  | 00000000:71:02.0 Off |                    0 |
| N/A   45C    P0              98W / 700W |     27MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   6  NVIDIA H100 80GB HBM3          On  | 00000000:73:02.0 Off |                    0 |
| N/A   46C    P0             115W / 700W |    533MiB / 81559MiB |      1%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
|   7  NVIDIA H100 80GB HBM3          On  | 00000000:75:02.0 Off |                    0 |
| N/A   38C    P0              96W / 700W |     27MiB / 81559MiB |      0%      Default |
|                                         |                      |             Disabled |
+-----------------------------------------+----------------------+----------------------+
                                                                                         
+---------------------------------------------------------------------------------------+
| Processes:                                                                            |
|  GPU   GI   CI        PID   Type   Process name                            GPU Memory |
|        ID   ID                                                             Usage      |
|=======================================================================================|
+---------------------------------------------------------------------------------------+

====================================================================================================
Training DataLoader: total number of tokens: 3200000000 across 32 files
Validation DataLoader: total number of tokens: 100000000 across 1 files
====================================================================================================
step:0/1480 val_loss:10.8258 train_time:0ms step_avg:nanms
step:1/1480 train_time:23520ms step_avg:nanms
step:2/1480 train_time:23637ms step_avg:nanms
step:3/1480 train_time:23777ms step_avg:nanms
step:4/1480 train_time:23916ms step_avg:nanms
step:5/1480 train_time:24056ms step_avg:nanms
step:6/1480 train_time:24198ms step_avg:nanms
step:7/1480 train_time:24339ms step_avg:nanms
step:8/1480 train_time:24482ms step_avg:nanms
step:9/1480 train_time:24629ms step_avg:nanms
step:10/1480 train_time:24774ms step_avg:nanms
step:11/1480 train_time:141ms step_avg:nanms
step:12/1480 train_time:281ms step_avg:nanms
step:13/1480 train_time:422ms step_avg:140.82ms
step:14/1480 train_time:563ms step_avg:140.87ms
step:15/1480 train_time:705ms step_avg:141.00ms
step:16/1480 train_time:850ms step_avg:141.71ms
step:17/1480 train_time:995ms step_avg:142.18ms
step:18/1480 train_time:1139ms step_avg:142.42ms
step:19/1480 train_time:1281ms step_avg:142.32ms
step:20/1480 train_time:1425ms step_avg:142.45ms
step:21/1480 train_time:1563ms step_avg:142.07ms
step:22/1480 train_time:1704ms step_avg:142.00ms
step:23/1480 train_time:1846ms step_avg:142.02ms
step:24/1480 train_time:1992ms step_avg:142.31ms
step:25/1480 train_time:2137ms step_avg:142.47ms
step:26/1480 train_time:2279ms step_avg:142.44ms
step:27/1480 train_time:2421ms step_avg:142.42ms
step:28/1480 train_time:2563ms step_avg:142.38ms
step:29/1480 train_time:2703ms step_avg:142.29ms
step:30/1480 train_time:2844ms step_avg:142.22ms
step:31/1480 train_time:2989ms step_avg:142.34ms
step:32/1480 train_time:3135ms step_avg:142.48ms
step:33/1480 train_time:3277ms step_avg:142.48ms
step:34/1480 train_time:3421ms step_avg:142.52ms
step:35/1480 train_time:3562ms step_avg:142.49ms
step:36/1480 train_time:3704ms step_avg:142.44ms
step:37/1480 train_time:3844ms step_avg:142.37ms
step:38/1480 train_time:3988ms step_avg:142.41ms
step:39/1480 train_time:4131ms step_avg:142.46ms
step:40/1480 train_time:4276ms step_avg:142.53ms
step:41/1480 train_time:4418ms step_avg:142.53ms
step:42/1480 train_time:4561ms step_avg:142.54ms
step:43/1480 train_time:4704ms step_avg:142.53ms
step:44/1480 train_time:4846ms step_avg:142.52ms
step:45/1480 train_time:4990ms step_avg:142.56ms
step:46/1480 train_time:5133ms step_avg:142.59ms
step:47/1480 train_time:5277ms step_avg:142.63ms
step:48/1480 train_time:5421ms step_avg:142.65ms
step:49/1480 train_time:5563ms step_avg:142.64ms
step:50/1480 train_time:5705ms step_avg:142.63ms
step:51/1480 train_time:5846ms step_avg:142.59ms
step:52/1480 train_time:5989ms step_avg:142.60ms
step:53/1480 train_time:6133ms step_avg:142.64ms
step:54/1480 train_time:6277ms step_avg:142.66ms
step:55/1480 train_time:6419ms step_avg:142.66ms
step:56/1480 train_time:6562ms step_avg:142.65ms
step:57/1480 train_time:6703ms step_avg:142.63ms
step:58/1480 train_time:6844ms step_avg:142.59ms
step:59/1480 train_time:6988ms step_avg:142.60ms
step:60/1480 train_time:7130ms step_avg:142.60ms
step:61/1480 train_time:7274ms step_avg:142.62ms
step:62/1480 train_time:7417ms step_avg:142.64ms
step:63/1480 train_time:7559ms step_avg:142.62ms
step:64/1480 train_time:7701ms step_avg:142.61ms
step:65/1480 train_time:7842ms step_avg:142.58ms
step:66/1480 train_time:7984ms step_avg:142.56ms
step:67/1480 train_time:8127ms step_avg:142.59ms
step:68/1480 train_time:8272ms step_avg:142.63ms
step:69/1480 train_time:8417ms step_avg:142.66ms
step:70/1480 train_time:8559ms step_avg:142.66ms
step:71/1480 train_time:8701ms step_avg:142.64ms
step:72/1480 train_time:8842ms step_avg:142.61ms
step:73/1480 train_time:8983ms step_avg:142.58ms
step:74/1480 train_time:9125ms step_avg:142.58ms
step:75/1480 train_time:9268ms step_avg:142.59ms
step:76/1480 train_time:9411ms step_avg:142.59ms
step:77/1480 train_time:9554ms step_avg:142.60ms
step:78/1480 train_time:9697ms step_avg:142.60ms
step:79/1480 train_time:9839ms step_avg:142.59ms
step:80/1480 train_time:9980ms step_avg:142.58ms
step:81/1480 train_time:10122ms step_avg:142.57ms
step:82/1480 train_time:10265ms step_avg:142.57ms
step:83/1480 train_time:10408ms step_avg:142.57ms
step:84/1480 train_time:10550ms step_avg:142.56ms
step:85/1480 train_time:10692ms step_avg:142.56ms
step:86/1480 train_time:10835ms step_avg:142.56ms
step:87/1480 train_time:10977ms step_avg:142.55ms
step:88/1480 train_time:11119ms step_avg:142.55ms
step:89/1480 train_time:11261ms step_avg:142.54ms
step:90/1480 train_time:11404ms step_avg:142.55ms
step:91/1480 train_time:11546ms step_avg:142.54ms
step:92/1480 train_time:11689ms step_avg:142.55ms
step:93/1480 train_time:11832ms step_avg:142.55ms
step:94/1480 train_time:11975ms step_avg:142.56ms
step:95/1480 train_time:12118ms step_avg:142.57ms
step:96/1480 train_time:12260ms step_avg:142.56ms
step:97/1480 train_time:12402ms step_avg:142.55ms
step:98/1480 train_time:12543ms step_avg:142.54ms
step:99/1480 train_time:12686ms step_avg:142.54ms
step:100/1480 train_time:12829ms step_avg:142.54ms
step:101/1480 train_time:12971ms step_avg:142.53ms
step:102/1480 train_time:13115ms step_avg:142.55ms
step:103/1480 train_time:13257ms step_avg:142.55ms
step:104/1480 train_time:13399ms step_avg:142.54ms
step:105/1480 train_time:13541ms step_avg:142.53ms
step:106/1480 train_time:13681ms step_avg:142.51ms
step:107/1480 train_time:13823ms step_avg:142.51ms
step:108/1480 train_time:13964ms step_avg:142.49ms
step:109/1480 train_time:14105ms step_avg:142.48ms
step:110/1480 train_time:14247ms step_avg:142.47ms
step:111/1480 train_time:14391ms step_avg:142.49ms
step:112/1480 train_time:14539ms step_avg:142.54ms
step:113/1480 train_time:14685ms step_avg:142.57ms
step:114/1480 train_time:14831ms step_avg:142.61ms
step:115/1480 train_time:14979ms step_avg:142.65ms
step:116/1480 train_time:15124ms step_avg:142.68ms
step:117/1480 train_time:15271ms step_avg:142.72ms
step:118/1480 train_time:15418ms step_avg:142.76ms
step:119/1480 train_time:15564ms step_avg:142.79ms
step:120/1480 train_time:15711ms step_avg:142.83ms
step:121/1480 train_time:15858ms step_avg:142.87ms
step:122/1480 train_time:16005ms step_avg:142.90ms
step:123/1480 train_time:16151ms step_avg:142.93ms
step:124/1480 train_time:16298ms step_avg:142.97ms
step:125/1480 train_time:16444ms step_avg:142.99ms
step:125/1480 val_loss:4.4301 train_time:16501ms step_avg:143.49ms
step:126/1480 train_time:16597ms step_avg:143.08ms
step:127/1480 train_time:16746ms step_avg:143.13ms
step:128/1480 train_time:16894ms step_avg:143.17ms
step:129/1480 train_time:17039ms step_avg:143.19ms
step:130/1480 train_time:17185ms step_avg:143.21ms
step:131/1480 train_time:17331ms step_avg:143.23ms
step:132/1480 train_time:17477ms step_avg:143.25ms
step:133/1480 train_time:17623ms step_avg:143.28ms
step:134/1480 train_time:17772ms step_avg:143.32ms
step:135/1480 train_time:17918ms step_avg:143.34ms
step:136/1480 train_time:18064ms step_avg:143.37ms
step:137/1480 train_time:18210ms step_avg:143.39ms
step:138/1480 train_time:18357ms step_avg:143.41ms
step:139/1480 train_time:18502ms step_avg:143.42ms
step:140/1480 train_time:18649ms step_avg:143.45ms
step:141/1480 train_time:18796ms step_avg:143.48ms
step:142/1480 train_time:18942ms step_avg:143.50ms
step:143/1480 train_time:19089ms step_avg:143.53ms
step:144/1480 train_time:19237ms step_avg:143.56ms
step:145/1480 train_time:19382ms step_avg:143.57ms
step:146/1480 train_time:19530ms step_avg:143.61ms
step:147/1480 train_time:19676ms step_avg:143.62ms
step:148/1480 train_time:19822ms step_avg:143.64ms
step:149/1480 train_time:19970ms step_avg:143.67ms
step:150/1480 train_time:20116ms step_avg:143.69ms
step:151/1480 train_time:20262ms step_avg:143.70ms
step:152/1480 train_time:20409ms step_avg:143.72ms
step:153/1480 train_time:20557ms step_avg:143.75ms
step:154/1480 train_time:20702ms step_avg:143.76ms
step:155/1480 train_time:20849ms step_avg:143.79ms
step:156/1480 train_time:20997ms step_avg:143.81ms
step:157/1480 train_time:21142ms step_avg:143.82ms
step:158/1480 train_time:21288ms step_avg:143.84ms
step:159/1480 train_time:21437ms step_avg:143.87ms
step:160/1480 train_time:21582ms step_avg:143.88ms
step:161/1480 train_time:21731ms step_avg:143.91ms
step:162/1480 train_time:21878ms step_avg:143.93ms
step:163/1480 train_time:22023ms step_avg:143.94ms
step:164/1480 train_time:22172ms step_avg:143.97ms
step:165/1480 train_time:22318ms step_avg:143.98ms
step:166/1480 train_time:22464ms step_avg:144.00ms
step:167/1480 train_time:22612ms step_avg:144.03ms
step:168/1480 train_time:22758ms step_avg:144.04ms
step:169/1480 train_time:22904ms step_avg:144.05ms
step:170/1480 train_time:23053ms step_avg:144.08ms
step:171/1480 train_time:23198ms step_avg:144.09ms
step:172/1480 train_time:23346ms step_avg:144.11ms
step:173/1480 train_time:23493ms step_avg:144.13ms
step:174/1480 train_time:23640ms step_avg:144.15ms
step:175/1480 train_time:23787ms step_avg:144.16ms
step:176/1480 train_time:23935ms step_avg:144.18ms
step:177/1480 train_time:24080ms step_avg:144.19ms
step:178/1480 train_time:24226ms step_avg:144.20ms
step:179/1480 train_time:24374ms step_avg:144.22ms
step:180/1480 train_time:24520ms step_avg:144.24ms
step:181/1480 train_time:24668ms step_avg:144.26ms
step:182/1480 train_time:24815ms step_avg:144.27ms
step:183/1480 train_time:24961ms step_avg:144.28ms
step:184/1480 train_time:25108ms step_avg:144.30ms
step:185/1480 train_time:25255ms step_avg:144.31ms
step:186/1480 train_time:25400ms step_avg:144.32ms
step:187/1480 train_time:25549ms step_avg:144.34ms
step:188/1480 train_time:25696ms step_avg:144.36ms
step:189/1480 train_time:25842ms step_avg:144.37ms
step:190/1480 train_time:25988ms step_avg:144.38ms
step:191/1480 train_time:26135ms step_avg:144.39ms
step:192/1480 train_time:26281ms step_avg:144.40ms
step:193/1480 train_time:26428ms step_avg:144.42ms
step:194/1480 train_time:26576ms step_avg:144.44ms
step:195/1480 train_time:26722ms step_avg:144.44ms
step:196/1480 train_time:26870ms step_avg:144.46ms
step:197/1480 train_time:27016ms step_avg:144.47ms
step:198/1480 train_time:27162ms step_avg:144.48ms
step:199/1480 train_time:27309ms step_avg:144.49ms
step:200/1480 train_time:27457ms step_avg:144.51ms
step:201/1480 train_time:27603ms step_avg:144.52ms
step:202/1480 train_time:27750ms step_avg:144.53ms
step:203/1480 train_time:27897ms step_avg:144.54ms
step:204/1480 train_time:28043ms step_avg:144.55ms
step:205/1480 train_time:28190ms step_avg:144.56ms
step:206/1480 train_time:28337ms step_avg:144.58ms
step:207/1480 train_time:28482ms step_avg:144.58ms
step:208/1480 train_time:28629ms step_avg:144.59ms
step:209/1480 train_time:28777ms step_avg:144.61ms
step:210/1480 train_time:28923ms step_avg:144.61ms
step:211/1480 train_time:29071ms step_avg:144.63ms
step:212/1480 train_time:29217ms step_avg:144.64ms
step:213/1480 train_time:29364ms step_avg:144.65ms
step:214/1480 train_time:29510ms step_avg:144.66ms
step:215/1480 train_time:29657ms step_avg:144.67ms
step:216/1480 train_time:29803ms step_avg:144.67ms
step:217/1480 train_time:29951ms step_avg:144.69ms
step:218/1480 train_time:30097ms step_avg:144.70ms
step:219/1480 train_time:30243ms step_avg:144.70ms
step:220/1480 train_time:30391ms step_avg:144.72ms
step:221/1480 train_time:30539ms step_avg:144.74ms
step:222/1480 train_time:30690ms step_avg:144.76ms
step:223/1480 train_time:30840ms step_avg:144.79ms
step:224/1480 train_time:30991ms step_avg:144.82ms
step:225/1480 train_time:31142ms step_avg:144.84ms
step:226/1480 train_time:31293ms step_avg:144.87ms
step:227/1480 train_time:31442ms step_avg:144.90ms
step:228/1480 train_time:31592ms step_avg:144.92ms
step:229/1480 train_time:31741ms step_avg:144.94ms
step:230/1480 train_time:31892ms step_avg:144.96ms
step:231/1480 train_time:32042ms step_avg:144.99ms
step:232/1480 train_time:32193ms step_avg:145.01ms
step:233/1480 train_time:32343ms step_avg:145.04ms
step:234/1480 train_time:32493ms step_avg:145.06ms
step:235/1480 train_time:32643ms step_avg:145.08ms
step:236/1480 train_time:32794ms step_avg:145.11ms
step:237/1480 train_time:32944ms step_avg:145.13ms
step:238/1480 train_time:33095ms step_avg:145.15ms
step:239/1480 train_time:33246ms step_avg:145.18ms
step:240/1480 train_time:33397ms step_avg:145.20ms
step:241/1480 train_time:33547ms step_avg:145.22ms
step:242/1480 train_time:33697ms step_avg:145.25ms
step:243/1480 train_time:33848ms step_avg:145.27ms
step:244/1480 train_time:33998ms step_avg:145.29ms
step:245/1480 train_time:34148ms step_avg:145.31ms
step:246/1480 train_time:34298ms step_avg:145.33ms
step:247/1480 train_time:34449ms step_avg:145.35ms
step:248/1480 train_time:34600ms step_avg:145.38ms
step:249/1480 train_time:34752ms step_avg:145.40ms
step:250/1480 train_time:34901ms step_avg:145.42ms
step:250/1480 val_loss:3.9898 train_time:34960ms step_avg:145.66ms
step:251/1480 train_time:35057ms step_avg:145.46ms
step:252/1480 train_time:35208ms step_avg:145.49ms
step:253/1480 train_time:35358ms step_avg:145.51ms
step:254/1480 train_time:35507ms step_avg:145.52ms
step:255/1480 train_time:35656ms step_avg:145.54ms
step:256/1480 train_time:35804ms step_avg:145.55ms
step:257/1480 train_time:35955ms step_avg:145.57ms
step:258/1480 train_time:36107ms step_avg:145.59ms
step:259/1480 train_time:36258ms step_avg:145.61ms
step:260/1480 train_time:36408ms step_avg:145.63ms
step:261/1480 train_time:36559ms step_avg:145.65ms
step:262/1480 train_time:36708ms step_avg:145.67ms
step:263/1480 train_time:36857ms step_avg:145.68ms
step:264/1480 train_time:37007ms step_avg:145.70ms
step:265/1480 train_time:37158ms step_avg:145.72ms
step:266/1480 train_time:37308ms step_avg:145.73ms
step:267/1480 train_time:37459ms step_avg:145.75ms
step:268/1480 train_time:37611ms step_avg:145.78ms
step:269/1480 train_time:37760ms step_avg:145.79ms
step:270/1480 train_time:37910ms step_avg:145.81ms
step:271/1480 train_time:38060ms step_avg:145.82ms
step:272/1480 train_time:38211ms step_avg:145.84ms
step:273/1480 train_time:38362ms step_avg:145.86ms
step:274/1480 train_time:38512ms step_avg:145.88ms
step:275/1480 train_time:38663ms step_avg:145.90ms
step:276/1480 train_time:38813ms step_avg:145.91ms
step:277/1480 train_time:38963ms step_avg:145.93ms
step:278/1480 train_time:39114ms step_avg:145.95ms
step:279/1480 train_time:39265ms step_avg:145.97ms
step:280/1480 train_time:39415ms step_avg:145.98ms
step:281/1480 train_time:39566ms step_avg:146.00ms
step:282/1480 train_time:39717ms step_avg:146.02ms
step:283/1480 train_time:39867ms step_avg:146.03ms
step:284/1480 train_time:40016ms step_avg:146.05ms
step:285/1480 train_time:40167ms step_avg:146.06ms
step:286/1480 train_time:40318ms step_avg:146.08ms
step:287/1480 train_time:40469ms step_avg:146.10ms
step:288/1480 train_time:40619ms step_avg:146.11ms
step:289/1480 train_time:40771ms step_avg:146.13ms
step:290/1480 train_time:40920ms step_avg:146.14ms
step:291/1480 train_time:41071ms step_avg:146.16ms
step:292/1480 train_time:41220ms step_avg:146.17ms
step:293/1480 train_time:41371ms step_avg:146.19ms
step:294/1480 train_time:41520ms step_avg:146.20ms
step:295/1480 train_time:41671ms step_avg:146.22ms
step:296/1480 train_time:41821ms step_avg:146.23ms
step:297/1480 train_time:41972ms step_avg:146.24ms
step:298/1480 train_time:42121ms step_avg:146.25ms
step:299/1480 train_time:42272ms step_avg:146.27ms
step:300/1480 train_time:42422ms step_avg:146.28ms
step:301/1480 train_time:42572ms step_avg:146.30ms
step:302/1480 train_time:42722ms step_avg:146.31ms
step:303/1480 train_time:42872ms step_avg:146.32ms
step:304/1480 train_time:43022ms step_avg:146.33ms
step:305/1480 train_time:43173ms step_avg:146.35ms
step:306/1480 train_time:43324ms step_avg:146.36ms
step:307/1480 train_time:43475ms step_avg:146.38ms
step:308/1480 train_time:43624ms step_avg:146.39ms
step:309/1480 train_time:43774ms step_avg:146.40ms
step:310/1480 train_time:43924ms step_avg:146.41ms
step:311/1480 train_time:44075ms step_avg:146.43ms
step:312/1480 train_time:44226ms step_avg:146.44ms
step:313/1480 train_time:44377ms step_avg:146.46ms
step:314/1480 train_time:44527ms step_avg:146.47ms
step:315/1480 train_time:44677ms step_avg:146.48ms
step:316/1480 train_time:44827ms step_avg:146.49ms
step:317/1480 train_time:44978ms step_avg:146.51ms
step:318/1480 train_time:45128ms step_avg:146.52ms
step:319/1480 train_time:45282ms step_avg:146.54ms
step:320/1480 train_time:45429ms step_avg:146.55ms
step:321/1480 train_time:45580ms step_avg:146.56ms
step:322/1480 train_time:45732ms step_avg:146.58ms
step:323/1480 train_time:45883ms step_avg:146.59ms
step:324/1480 train_time:46033ms step_avg:146.60ms
step:325/1480 train_time:46183ms step_avg:146.61ms
step:326/1480 train_time:46333ms step_avg:146.62ms
step:327/1480 train_time:46486ms step_avg:146.64ms
step:328/1480 train_time:46635ms step_avg:146.65ms
step:329/1480 train_time:46786ms step_avg:146.66ms
step:330/1480 train_time:46938ms step_avg:146.68ms
step:331/1480 train_time:47094ms step_avg:146.71ms
step:332/1480 train_time:47249ms step_avg:146.74ms
step:333/1480 train_time:47401ms step_avg:146.75ms
step:334/1480 train_time:47555ms step_avg:146.78ms
step:335/1480 train_time:47709ms step_avg:146.80ms
step:336/1480 train_time:47862ms step_avg:146.82ms
step:337/1480 train_time:48016ms step_avg:146.84ms
step:338/1480 train_time:48171ms step_avg:146.86ms
step:339/1480 train_time:48325ms step_avg:146.88ms
step:340/1480 train_time:48478ms step_avg:146.90ms
step:341/1480 train_time:48630ms step_avg:146.92ms
step:342/1480 train_time:48787ms step_avg:146.95ms
step:343/1480 train_time:48940ms step_avg:146.97ms
step:344/1480 train_time:49094ms step_avg:146.99ms
step:345/1480 train_time:49247ms step_avg:147.01ms
step:346/1480 train_time:49401ms step_avg:147.03ms
step:347/1480 train_time:49555ms step_avg:147.05ms
step:348/1480 train_time:49708ms step_avg:147.07ms
step:349/1480 train_time:49861ms step_avg:147.08ms
step:350/1480 train_time:50015ms step_avg:147.10ms
step:351/1480 train_time:50170ms step_avg:147.13ms
step:352/1480 train_time:50325ms step_avg:147.15ms
step:353/1480 train_time:50479ms step_avg:147.17ms
step:354/1480 train_time:50632ms step_avg:147.18ms
step:355/1480 train_time:50787ms step_avg:147.21ms
step:356/1480 train_time:50941ms step_avg:147.23ms
step:357/1480 train_time:51095ms step_avg:147.25ms
step:358/1480 train_time:51249ms step_avg:147.27ms
step:359/1480 train_time:51403ms step_avg:147.29ms
step:360/1480 train_time:51558ms step_avg:147.31ms
step:361/1480 train_time:51711ms step_avg:147.33ms
step:362/1480 train_time:51865ms step_avg:147.34ms
step:363/1480 train_time:52018ms step_avg:147.36ms
step:364/1480 train_time:52173ms step_avg:147.38ms
step:365/1480 train_time:52328ms step_avg:147.40ms
step:366/1480 train_time:52482ms step_avg:147.42ms
step:367/1480 train_time:52635ms step_avg:147.44ms
step:368/1480 train_time:52789ms step_avg:147.45ms
step:369/1480 train_time:52942ms step_avg:147.47ms
step:370/1480 train_time:53096ms step_avg:147.49ms
step:371/1480 train_time:53249ms step_avg:147.50ms
step:372/1480 train_time:53403ms step_avg:147.52ms
step:373/1480 train_time:53557ms step_avg:147.54ms
step:374/1480 train_time:53709ms step_avg:147.55ms
step:375/1480 train_time:53862ms step_avg:147.57ms
step:375/1480 val_loss:3.8079 train_time:53922ms step_avg:147.73ms
step:376/1480 train_time:54019ms step_avg:147.59ms
step:377/1480 train_time:54173ms step_avg:147.61ms
step:378/1480 train_time:54326ms step_avg:147.63ms
step:379/1480 train_time:54479ms step_avg:147.64ms
step:380/1480 train_time:54631ms step_avg:147.65ms
step:381/1480 train_time:54783ms step_avg:147.66ms
step:382/1480 train_time:54937ms step_avg:147.68ms
step:383/1480 train_time:55095ms step_avg:147.71ms
step:384/1480 train_time:55250ms step_avg:147.73ms
step:385/1480 train_time:55402ms step_avg:147.74ms
step:386/1480 train_time:55555ms step_avg:147.75ms
step:387/1480 train_time:55709ms step_avg:147.77ms
step:388/1480 train_time:55862ms step_avg:147.78ms
step:389/1480 train_time:56015ms step_avg:147.80ms
step:390/1480 train_time:56171ms step_avg:147.82ms
step:391/1480 train_time:56324ms step_avg:147.83ms
step:392/1480 train_time:56478ms step_avg:147.85ms
step:393/1480 train_time:56632ms step_avg:147.86ms
step:394/1480 train_time:56785ms step_avg:147.88ms
step:395/1480 train_time:56938ms step_avg:147.89ms
step:396/1480 train_time:57093ms step_avg:147.91ms
step:397/1480 train_time:57246ms step_avg:147.92ms
step:398/1480 train_time:57399ms step_avg:147.94ms
step:399/1480 train_time:57553ms step_avg:147.95ms
step:400/1480 train_time:57707ms step_avg:147.97ms
step:401/1480 train_time:57860ms step_avg:147.98ms
step:402/1480 train_time:58013ms step_avg:147.99ms
step:403/1480 train_time:58168ms step_avg:148.01ms
step:404/1480 train_time:58322ms step_avg:148.02ms
step:405/1480 train_time:58475ms step_avg:148.04ms
step:406/1480 train_time:58630ms step_avg:148.05ms
step:407/1480 train_time:58784ms step_avg:148.07ms
step:408/1480 train_time:58938ms step_avg:148.09ms
step:409/1480 train_time:59094ms step_avg:148.10ms
step:410/1480 train_time:59248ms step_avg:148.12ms
step:411/1480 train_time:59402ms step_avg:148.13ms
step:412/1480 train_time:59555ms step_avg:148.15ms
step:413/1480 train_time:59708ms step_avg:148.16ms
step:414/1480 train_time:59861ms step_avg:148.17ms
step:415/1480 train_time:60015ms step_avg:148.19ms
step:416/1480 train_time:60170ms step_avg:148.20ms
step:417/1480 train_time:60324ms step_avg:148.22ms
step:418/1480 train_time:60477ms step_avg:148.23ms
step:419/1480 train_time:60630ms step_avg:148.24ms
step:420/1480 train_time:60784ms step_avg:148.25ms
step:421/1480 train_time:60937ms step_avg:148.26ms
step:422/1480 train_time:61091ms step_avg:148.28ms
step:423/1480 train_time:61244ms step_avg:148.29ms
step:424/1480 train_time:61399ms step_avg:148.31ms
step:425/1480 train_time:61553ms step_avg:148.32ms
step:426/1480 train_time:61708ms step_avg:148.34ms
step:427/1480 train_time:61861ms step_avg:148.35ms
step:428/1480 train_time:62015ms step_avg:148.36ms
step:429/1480 train_time:62170ms step_avg:148.38ms
step:430/1480 train_time:62323ms step_avg:148.39ms
step:431/1480 train_time:62477ms step_avg:148.40ms
step:432/1480 train_time:62632ms step_avg:148.42ms
step:433/1480 train_time:62786ms step_avg:148.43ms
step:434/1480 train_time:62939ms step_avg:148.44ms
step:435/1480 train_time:63095ms step_avg:148.46ms
step:436/1480 train_time:63249ms step_avg:148.47ms
step:437/1480 train_time:63401ms step_avg:148.48ms
step:438/1480 train_time:63555ms step_avg:148.49ms
step:439/1480 train_time:63709ms step_avg:148.51ms
step:440/1480 train_time:63864ms step_avg:148.52ms
step:441/1480 train_time:64020ms step_avg:148.54ms
step:442/1480 train_time:64176ms step_avg:148.56ms
step:443/1480 train_time:64333ms step_avg:148.58ms
step:444/1480 train_time:64491ms step_avg:148.60ms
step:445/1480 train_time:64647ms step_avg:148.61ms
step:446/1480 train_time:64802ms step_avg:148.63ms
step:447/1480 train_time:64958ms step_avg:148.65ms
step:448/1480 train_time:65115ms step_avg:148.66ms
step:449/1480 train_time:65274ms step_avg:148.69ms
step:450/1480 train_time:65433ms step_avg:148.71ms
step:451/1480 train_time:65592ms step_avg:148.74ms
step:452/1480 train_time:65749ms step_avg:148.75ms
step:453/1480 train_time:65905ms step_avg:148.77ms
step:454/1480 train_time:66061ms step_avg:148.79ms
step:455/1480 train_time:66217ms step_avg:148.80ms
step:456/1480 train_time:66373ms step_avg:148.82ms
step:457/1480 train_time:66530ms step_avg:148.84ms
step:458/1480 train_time:66687ms step_avg:148.86ms
step:459/1480 train_time:66845ms step_avg:148.87ms
step:460/1480 train_time:67001ms step_avg:148.89ms
step:461/1480 train_time:67158ms step_avg:148.91ms
step:462/1480 train_time:67315ms step_avg:148.93ms
step:463/1480 train_time:67473ms step_avg:148.95ms
step:464/1480 train_time:67630ms step_avg:148.97ms
step:465/1480 train_time:67787ms step_avg:148.98ms
step:466/1480 train_time:67945ms step_avg:149.00ms
step:467/1480 train_time:68101ms step_avg:149.02ms
step:468/1480 train_time:68257ms step_avg:149.03ms
step:469/1480 train_time:68413ms step_avg:149.05ms
step:470/1480 train_time:68571ms step_avg:149.07ms
step:471/1480 train_time:68729ms step_avg:149.09ms
step:472/1480 train_time:68885ms step_avg:149.10ms
step:473/1480 train_time:69040ms step_avg:149.11ms
step:474/1480 train_time:69197ms step_avg:149.13ms
step:475/1480 train_time:69355ms step_avg:149.15ms
step:476/1480 train_time:69513ms step_avg:149.17ms
step:477/1480 train_time:69672ms step_avg:149.19ms
step:478/1480 train_time:69830ms step_avg:149.21ms
step:479/1480 train_time:69988ms step_avg:149.23ms
step:480/1480 train_time:70145ms step_avg:149.24ms
step:481/1480 train_time:70300ms step_avg:149.26ms
step:482/1480 train_time:70457ms step_avg:149.27ms
step:483/1480 train_time:70614ms step_avg:149.29ms
step:484/1480 train_time:70772ms step_avg:149.31ms
step:485/1480 train_time:70931ms step_avg:149.33ms
step:486/1480 train_time:71089ms step_avg:149.35ms
step:487/1480 train_time:71247ms step_avg:149.36ms
step:488/1480 train_time:71404ms step_avg:149.38ms
step:489/1480 train_time:71559ms step_avg:149.39ms
step:490/1480 train_time:71715ms step_avg:149.41ms
step:491/1480 train_time:71874ms step_avg:149.43ms
step:492/1480 train_time:72032ms step_avg:149.44ms
step:493/1480 train_time:72190ms step_avg:149.46ms
step:494/1480 train_time:72347ms step_avg:149.48ms
step:495/1480 train_time:72504ms step_avg:149.49ms
step:496/1480 train_time:72661ms step_avg:149.51ms
step:497/1480 train_time:72817ms step_avg:149.52ms
step:498/1480 train_time:72975ms step_avg:149.54ms
step:499/1480 train_time:73132ms step_avg:149.55ms
step:500/1480 train_time:73290ms step_avg:149.57ms
step:500/1480 val_loss:3.6899 train_time:73352ms step_avg:149.70ms
step:501/1480 train_time:73451ms step_avg:149.59ms
step:502/1480 train_time:73608ms step_avg:149.61ms
step:503/1480 train_time:73764ms step_avg:149.62ms
step:504/1480 train_time:73918ms step_avg:149.63ms
step:505/1480 train_time:74074ms step_avg:149.64ms
step:506/1480 train_time:74232ms step_avg:149.66ms
step:507/1480 train_time:74388ms step_avg:149.67ms
step:508/1480 train_time:74547ms step_avg:149.69ms
step:509/1480 train_time:74705ms step_avg:149.71ms
step:510/1480 train_time:74861ms step_avg:149.72ms
step:511/1480 train_time:75016ms step_avg:149.73ms
step:512/1480 train_time:75174ms step_avg:149.75ms
step:513/1480 train_time:75332ms step_avg:149.77ms
step:514/1480 train_time:75489ms step_avg:149.78ms
step:515/1480 train_time:75646ms step_avg:149.79ms
step:516/1480 train_time:75804ms step_avg:149.81ms
step:517/1480 train_time:75960ms step_avg:149.82ms
step:518/1480 train_time:76116ms step_avg:149.84ms
step:519/1480 train_time:76274ms step_avg:149.85ms
step:520/1480 train_time:76432ms step_avg:149.87ms
step:521/1480 train_time:76589ms step_avg:149.88ms
step:522/1480 train_time:76745ms step_avg:149.89ms
step:523/1480 train_time:76903ms step_avg:149.91ms
step:524/1480 train_time:77059ms step_avg:149.92ms
step:525/1480 train_time:77215ms step_avg:149.93ms
step:526/1480 train_time:77373ms step_avg:149.95ms
step:527/1480 train_time:77530ms step_avg:149.96ms
step:528/1480 train_time:77687ms step_avg:149.97ms
step:529/1480 train_time:77843ms step_avg:149.99ms
step:530/1480 train_time:78000ms step_avg:150.00ms
step:531/1480 train_time:78157ms step_avg:150.01ms
step:532/1480 train_time:78313ms step_avg:150.03ms
step:533/1480 train_time:78472ms step_avg:150.04ms
step:534/1480 train_time:78628ms step_avg:150.05ms
step:535/1480 train_time:78785ms step_avg:150.07ms
step:536/1480 train_time:78943ms step_avg:150.08ms
step:537/1480 train_time:79099ms step_avg:150.09ms
step:538/1480 train_time:79256ms step_avg:150.11ms
step:539/1480 train_time:79416ms step_avg:150.12ms
step:540/1480 train_time:79573ms step_avg:150.14ms
step:541/1480 train_time:79730ms step_avg:150.15ms
step:542/1480 train_time:79886ms step_avg:150.16ms
step:543/1480 train_time:80043ms step_avg:150.17ms
step:544/1480 train_time:80198ms step_avg:150.18ms
step:545/1480 train_time:80355ms step_avg:150.20ms
step:546/1480 train_time:80512ms step_avg:150.21ms
step:547/1480 train_time:80669ms step_avg:150.22ms
step:548/1480 train_time:80827ms step_avg:150.24ms
step:549/1480 train_time:80982ms step_avg:150.25ms
step:550/1480 train_time:81141ms step_avg:150.26ms
step:551/1480 train_time:81299ms step_avg:150.28ms
step:552/1480 train_time:81458ms step_avg:150.29ms
step:553/1480 train_time:81617ms step_avg:150.31ms
step:554/1480 train_time:81777ms step_avg:150.33ms
step:555/1480 train_time:81936ms step_avg:150.34ms
step:556/1480 train_time:82095ms step_avg:150.36ms
step:557/1480 train_time:82256ms step_avg:150.38ms
step:558/1480 train_time:82416ms step_avg:150.39ms
step:559/1480 train_time:82575ms step_avg:150.41ms
step:560/1480 train_time:82736ms step_avg:150.43ms
step:561/1480 train_time:82895ms step_avg:150.44ms
step:562/1480 train_time:83055ms step_avg:150.46ms
step:563/1480 train_time:83213ms step_avg:150.48ms
step:564/1480 train_time:83374ms step_avg:150.49ms
step:565/1480 train_time:83534ms step_avg:150.51ms
step:566/1480 train_time:83694ms step_avg:150.53ms
step:567/1480 train_time:83853ms step_avg:150.54ms
step:568/1480 train_time:84012ms step_avg:150.56ms
step:569/1480 train_time:84172ms step_avg:150.58ms
step:570/1480 train_time:84332ms step_avg:150.59ms
step:571/1480 train_time:84492ms step_avg:150.61ms
step:572/1480 train_time:84652ms step_avg:150.63ms
step:573/1480 train_time:84812ms step_avg:150.64ms
step:574/1480 train_time:84976ms step_avg:150.67ms
step:575/1480 train_time:85136ms step_avg:150.68ms
step:576/1480 train_time:85295ms step_avg:150.70ms
step:577/1480 train_time:85455ms step_avg:150.71ms
step:578/1480 train_time:85614ms step_avg:150.73ms
step:579/1480 train_time:85775ms step_avg:150.75ms
step:580/1480 train_time:85934ms step_avg:150.76ms
step:581/1480 train_time:86095ms step_avg:150.78ms
step:582/1480 train_time:86256ms step_avg:150.80ms
step:583/1480 train_time:86415ms step_avg:150.81ms
step:584/1480 train_time:86575ms step_avg:150.83ms
step:585/1480 train_time:86735ms step_avg:150.84ms
step:586/1480 train_time:86894ms step_avg:150.86ms
step:587/1480 train_time:87054ms step_avg:150.87ms
step:588/1480 train_time:87214ms step_avg:150.89ms
step:589/1480 train_time:87375ms step_avg:150.91ms
step:590/1480 train_time:87536ms step_avg:150.92ms
step:591/1480 train_time:87694ms step_avg:150.94ms
step:592/1480 train_time:87854ms step_avg:150.95ms
step:593/1480 train_time:88015ms step_avg:150.97ms
step:594/1480 train_time:88176ms step_avg:150.99ms
step:595/1480 train_time:88337ms step_avg:151.00ms
step:596/1480 train_time:88498ms step_avg:151.02ms
step:597/1480 train_time:88657ms step_avg:151.03ms
step:598/1480 train_time:88815ms step_avg:151.05ms
step:599/1480 train_time:88975ms step_avg:151.06ms
step:600/1480 train_time:89136ms step_avg:151.08ms
step:601/1480 train_time:89295ms step_avg:151.09ms
step:602/1480 train_time:89454ms step_avg:151.11ms
step:603/1480 train_time:89615ms step_avg:151.12ms
step:604/1480 train_time:89773ms step_avg:151.13ms
step:605/1480 train_time:89933ms step_avg:151.15ms
step:606/1480 train_time:90095ms step_avg:151.17ms
step:607/1480 train_time:90258ms step_avg:151.19ms
step:608/1480 train_time:90417ms step_avg:151.20ms
step:609/1480 train_time:90578ms step_avg:151.21ms
step:610/1480 train_time:90736ms step_avg:151.23ms
step:611/1480 train_time:90895ms step_avg:151.24ms
step:612/1480 train_time:91055ms step_avg:151.25ms
step:613/1480 train_time:91215ms step_avg:151.27ms
step:614/1480 train_time:91376ms step_avg:151.29ms
step:615/1480 train_time:91535ms step_avg:151.30ms
step:616/1480 train_time:91695ms step_avg:151.31ms
step:617/1480 train_time:91855ms step_avg:151.33ms
step:618/1480 train_time:92014ms step_avg:151.34ms
step:619/1480 train_time:92174ms step_avg:151.35ms
step:620/1480 train_time:92334ms step_avg:151.37ms
step:621/1480 train_time:92494ms step_avg:151.38ms
step:622/1480 train_time:92656ms step_avg:151.40ms
step:623/1480 train_time:92816ms step_avg:151.41ms
step:624/1480 train_time:92975ms step_avg:151.43ms
step:625/1480 train_time:93135ms step_avg:151.44ms
step:625/1480 val_loss:3.6077 train_time:93198ms step_avg:151.54ms
step:626/1480 train_time:93298ms step_avg:151.46ms
step:627/1480 train_time:93458ms step_avg:151.47ms
step:628/1480 train_time:93615ms step_avg:151.48ms
step:629/1480 train_time:93773ms step_avg:151.49ms
step:630/1480 train_time:93931ms step_avg:151.50ms
step:631/1480 train_time:94088ms step_avg:151.51ms
step:632/1480 train_time:94248ms step_avg:151.52ms
step:633/1480 train_time:94408ms step_avg:151.54ms
step:634/1480 train_time:94567ms step_avg:151.55ms
step:635/1480 train_time:94727ms step_avg:151.56ms
step:636/1480 train_time:94886ms step_avg:151.57ms
step:637/1480 train_time:95046ms step_avg:151.59ms
step:638/1480 train_time:95206ms step_avg:151.60ms
step:639/1480 train_time:95365ms step_avg:151.61ms
step:640/1480 train_time:95526ms step_avg:151.63ms
step:641/1480 train_time:95686ms step_avg:151.64ms
step:642/1480 train_time:95847ms step_avg:151.66ms
step:643/1480 train_time:96007ms step_avg:151.67ms
step:644/1480 train_time:96166ms step_avg:151.68ms
step:645/1480 train_time:96326ms step_avg:151.69ms
step:646/1480 train_time:96485ms step_avg:151.71ms
step:647/1480 train_time:96645ms step_avg:151.72ms
step:648/1480 train_time:96806ms step_avg:151.73ms
step:649/1480 train_time:96966ms step_avg:151.75ms
step:650/1480 train_time:97126ms step_avg:151.76ms
step:651/1480 train_time:97287ms step_avg:151.77ms
step:652/1480 train_time:97447ms step_avg:151.79ms
step:653/1480 train_time:97606ms step_avg:151.80ms
step:654/1480 train_time:97766ms step_avg:151.81ms
step:655/1480 train_time:97927ms step_avg:151.82ms
step:656/1480 train_time:98086ms step_avg:151.84ms
step:657/1480 train_time:98247ms step_avg:151.85ms
step:658/1480 train_time:98407ms step_avg:151.86ms
step:659/1480 train_time:98569ms step_avg:151.88ms
step:660/1480 train_time:98731ms step_avg:151.89ms
step:661/1480 train_time:98894ms step_avg:151.91ms
step:662/1480 train_time:99054ms step_avg:151.92ms
step:663/1480 train_time:99213ms step_avg:151.93ms
step:664/1480 train_time:99374ms step_avg:151.95ms
step:665/1480 train_time:99535ms step_avg:151.96ms
step:666/1480 train_time:99695ms step_avg:151.97ms
step:667/1480 train_time:99857ms step_avg:151.99ms
step:668/1480 train_time:100019ms step_avg:152.00ms
step:669/1480 train_time:100181ms step_avg:152.02ms
step:670/1480 train_time:100342ms step_avg:152.03ms
step:671/1480 train_time:100502ms step_avg:152.05ms
step:672/1480 train_time:100666ms step_avg:152.06ms
step:673/1480 train_time:100830ms step_avg:152.08ms
step:674/1480 train_time:100991ms step_avg:152.09ms
step:675/1480 train_time:101152ms step_avg:152.11ms
step:676/1480 train_time:101313ms step_avg:152.12ms
step:677/1480 train_time:101474ms step_avg:152.13ms
step:678/1480 train_time:101633ms step_avg:152.15ms
step:679/1480 train_time:101793ms step_avg:152.16ms
step:680/1480 train_time:101956ms step_avg:152.17ms
step:681/1480 train_time:102116ms step_avg:152.19ms
step:682/1480 train_time:102278ms step_avg:152.20ms
step:683/1480 train_time:102439ms step_avg:152.21ms
step:684/1480 train_time:102602ms step_avg:152.23ms
step:685/1480 train_time:102766ms step_avg:152.25ms
step:686/1480 train_time:102929ms step_avg:152.26ms
step:687/1480 train_time:103089ms step_avg:152.27ms
step:688/1480 train_time:103253ms step_avg:152.29ms
step:689/1480 train_time:103416ms step_avg:152.31ms
step:690/1480 train_time:103579ms step_avg:152.32ms
step:691/1480 train_time:103742ms step_avg:152.34ms
step:692/1480 train_time:103903ms step_avg:152.35ms
step:693/1480 train_time:104066ms step_avg:152.37ms
step:694/1480 train_time:104229ms step_avg:152.38ms
step:695/1480 train_time:104388ms step_avg:152.39ms
step:696/1480 train_time:104549ms step_avg:152.40ms
step:697/1480 train_time:104711ms step_avg:152.42ms
step:698/1480 train_time:104871ms step_avg:152.43ms
step:699/1480 train_time:105033ms step_avg:152.44ms
step:700/1480 train_time:105195ms step_avg:152.46ms
step:701/1480 train_time:105354ms step_avg:152.47ms
step:702/1480 train_time:105515ms step_avg:152.48ms
step:703/1480 train_time:105675ms step_avg:152.49ms
step:704/1480 train_time:105835ms step_avg:152.50ms
step:705/1480 train_time:105999ms step_avg:152.52ms
step:706/1480 train_time:106162ms step_avg:152.53ms
step:707/1480 train_time:106323ms step_avg:152.54ms
step:708/1480 train_time:106485ms step_avg:152.56ms
step:709/1480 train_time:106648ms step_avg:152.57ms
step:710/1480 train_time:106809ms step_avg:152.58ms
step:711/1480 train_time:106970ms step_avg:152.60ms
step:712/1480 train_time:107134ms step_avg:152.61ms
step:713/1480 train_time:107295ms step_avg:152.62ms
step:714/1480 train_time:107455ms step_avg:152.63ms
step:715/1480 train_time:107616ms step_avg:152.65ms
step:716/1480 train_time:107774ms step_avg:152.65ms
step:717/1480 train_time:107935ms step_avg:152.67ms
step:718/1480 train_time:108094ms step_avg:152.68ms
step:719/1480 train_time:108253ms step_avg:152.68ms
step:720/1480 train_time:108419ms step_avg:152.70ms
step:721/1480 train_time:108582ms step_avg:152.72ms
step:722/1480 train_time:108745ms step_avg:152.73ms
step:723/1480 train_time:108907ms step_avg:152.74ms
step:724/1480 train_time:109069ms step_avg:152.76ms
step:725/1480 train_time:109232ms step_avg:152.77ms
step:726/1480 train_time:109394ms step_avg:152.78ms
step:727/1480 train_time:109557ms step_avg:152.80ms
step:728/1480 train_time:109717ms step_avg:152.81ms
step:729/1480 train_time:109877ms step_avg:152.82ms
step:730/1480 train_time:110042ms step_avg:152.84ms
step:731/1480 train_time:110204ms step_avg:152.85ms
step:732/1480 train_time:110365ms step_avg:152.86ms
step:733/1480 train_time:110527ms step_avg:152.87ms
step:734/1480 train_time:110689ms step_avg:152.88ms
step:735/1480 train_time:110851ms step_avg:152.90ms
step:736/1480 train_time:111012ms step_avg:152.91ms
step:737/1480 train_time:111173ms step_avg:152.92ms
step:738/1480 train_time:111333ms step_avg:152.93ms
step:739/1480 train_time:111493ms step_avg:152.94ms
step:740/1480 train_time:111657ms step_avg:152.95ms
step:741/1480 train_time:111820ms step_avg:152.97ms
step:742/1480 train_time:111982ms step_avg:152.98ms
step:743/1480 train_time:112145ms step_avg:153.00ms
step:744/1480 train_time:112310ms step_avg:153.01ms
step:745/1480 train_time:112474ms step_avg:153.03ms
step:746/1480 train_time:112632ms step_avg:153.03ms
step:747/1480 train_time:112792ms step_avg:153.04ms
step:748/1480 train_time:112958ms step_avg:153.06ms
step:749/1480 train_time:113122ms step_avg:153.07ms
step:750/1480 train_time:113282ms step_avg:153.08ms
step:750/1480 val_loss:3.5528 train_time:113347ms step_avg:153.17ms
step:751/1480 train_time:113450ms step_avg:153.10ms
step:752/1480 train_time:113612ms step_avg:153.12ms
step:753/1480 train_time:113772ms step_avg:153.13ms
step:754/1480 train_time:113932ms step_avg:153.13ms
step:755/1480 train_time:114093ms step_avg:153.14ms
step:756/1480 train_time:114253ms step_avg:153.15ms
step:757/1480 train_time:114418ms step_avg:153.17ms
step:758/1480 train_time:114581ms step_avg:153.18ms
step:759/1480 train_time:114744ms step_avg:153.20ms
step:760/1480 train_time:114907ms step_avg:153.21ms
step:761/1480 train_time:115070ms step_avg:153.22ms
step:762/1480 train_time:115230ms step_avg:153.23ms
step:763/1480 train_time:115392ms step_avg:153.24ms
step:764/1480 train_time:115552ms step_avg:153.25ms
step:765/1480 train_time:115713ms step_avg:153.26ms
step:766/1480 train_time:115875ms step_avg:153.27ms
step:767/1480 train_time:116036ms step_avg:153.28ms
step:768/1480 train_time:116198ms step_avg:153.30ms
step:769/1480 train_time:116361ms step_avg:153.31ms
step:770/1480 train_time:116525ms step_avg:153.32ms
step:771/1480 train_time:116689ms step_avg:153.34ms
step:772/1480 train_time:116850ms step_avg:153.35ms
step:773/1480 train_time:117013ms step_avg:153.36ms
step:774/1480 train_time:117175ms step_avg:153.37ms
step:775/1480 train_time:117337ms step_avg:153.38ms
step:776/1480 train_time:117501ms step_avg:153.40ms
step:777/1480 train_time:117668ms step_avg:153.41ms
step:778/1480 train_time:117831ms step_avg:153.43ms
step:779/1480 train_time:117993ms step_avg:153.44ms
step:780/1480 train_time:118156ms step_avg:153.45ms
step:781/1480 train_time:118317ms step_avg:153.46ms
step:782/1480 train_time:118482ms step_avg:153.47ms
step:783/1480 train_time:118645ms step_avg:153.49ms
step:784/1480 train_time:118809ms step_avg:153.50ms
step:785/1480 train_time:118971ms step_avg:153.51ms
step:786/1480 train_time:119135ms step_avg:153.52ms
step:787/1480 train_time:119298ms step_avg:153.54ms
step:788/1480 train_time:119463ms step_avg:153.55ms
step:789/1480 train_time:119626ms step_avg:153.56ms
step:790/1480 train_time:119791ms step_avg:153.58ms
step:791/1480 train_time:119957ms step_avg:153.59ms
step:792/1480 train_time:120120ms step_avg:153.61ms
step:793/1480 train_time:120283ms step_avg:153.62ms
step:794/1480 train_time:120447ms step_avg:153.63ms
step:795/1480 train_time:120612ms step_avg:153.65ms
step:796/1480 train_time:120778ms step_avg:153.66ms
step:797/1480 train_time:120943ms step_avg:153.68ms
step:798/1480 train_time:121108ms step_avg:153.69ms
step:799/1480 train_time:121274ms step_avg:153.71ms
step:800/1480 train_time:121436ms step_avg:153.72ms
step:801/1480 train_time:121599ms step_avg:153.73ms
step:802/1480 train_time:121766ms step_avg:153.75ms
step:803/1480 train_time:121930ms step_avg:153.76ms
step:804/1480 train_time:122092ms step_avg:153.77ms
step:805/1480 train_time:122257ms step_avg:153.78ms
step:806/1480 train_time:122418ms step_avg:153.79ms
step:807/1480 train_time:122582ms step_avg:153.80ms
step:808/1480 train_time:122746ms step_avg:153.82ms
step:809/1480 train_time:122910ms step_avg:153.83ms
step:810/1480 train_time:123072ms step_avg:153.84ms
step:811/1480 train_time:123233ms step_avg:153.85ms
step:812/1480 train_time:123395ms step_avg:153.86ms
step:813/1480 train_time:123554ms step_avg:153.87ms
step:814/1480 train_time:123717ms step_avg:153.88ms
step:815/1480 train_time:123882ms step_avg:153.89ms
step:816/1480 train_time:124047ms step_avg:153.90ms
step:817/1480 train_time:124210ms step_avg:153.92ms
step:818/1480 train_time:124372ms step_avg:153.93ms
step:819/1480 train_time:124535ms step_avg:153.94ms
step:820/1480 train_time:124698ms step_avg:153.95ms
step:821/1480 train_time:124860ms step_avg:153.96ms
step:822/1480 train_time:125025ms step_avg:153.97ms
step:823/1480 train_time:125188ms step_avg:153.98ms
step:824/1480 train_time:125351ms step_avg:153.99ms
step:825/1480 train_time:125517ms step_avg:154.01ms
step:826/1480 train_time:125686ms step_avg:154.03ms
step:827/1480 train_time:125851ms step_avg:154.04ms
step:828/1480 train_time:126014ms step_avg:154.05ms
step:829/1480 train_time:126177ms step_avg:154.06ms
step:830/1480 train_time:126341ms step_avg:154.07ms
step:831/1480 train_time:126508ms step_avg:154.09ms
step:832/1480 train_time:126671ms step_avg:154.10ms
step:833/1480 train_time:126836ms step_avg:154.11ms
step:834/1480 train_time:127002ms step_avg:154.13ms
step:835/1480 train_time:127166ms step_avg:154.14ms
step:836/1480 train_time:127330ms step_avg:154.15ms
step:837/1480 train_time:127492ms step_avg:154.16ms
step:838/1480 train_time:127654ms step_avg:154.17ms
step:839/1480 train_time:127815ms step_avg:154.18ms
step:840/1480 train_time:127974ms step_avg:154.19ms
step:841/1480 train_time:128136ms step_avg:154.19ms
step:842/1480 train_time:128302ms step_avg:154.21ms
step:843/1480 train_time:128465ms step_avg:154.22ms
step:844/1480 train_time:128627ms step_avg:154.23ms
step:845/1480 train_time:128790ms step_avg:154.24ms
step:846/1480 train_time:128954ms step_avg:154.25ms
step:847/1480 train_time:129117ms step_avg:154.26ms
step:848/1480 train_time:129280ms step_avg:154.27ms
step:849/1480 train_time:129443ms step_avg:154.28ms
step:850/1480 train_time:129606ms step_avg:154.29ms
step:851/1480 train_time:129770ms step_avg:154.30ms
step:852/1480 train_time:129932ms step_avg:154.31ms
step:853/1480 train_time:130093ms step_avg:154.32ms
step:854/1480 train_time:130256ms step_avg:154.33ms
step:855/1480 train_time:130421ms step_avg:154.34ms
step:856/1480 train_time:130584ms step_avg:154.35ms
step:857/1480 train_time:130749ms step_avg:154.37ms
step:858/1480 train_time:130915ms step_avg:154.38ms
step:859/1480 train_time:131077ms step_avg:154.39ms
step:860/1480 train_time:131239ms step_avg:154.40ms
step:861/1480 train_time:131406ms step_avg:154.41ms
step:862/1480 train_time:131573ms step_avg:154.43ms
step:863/1480 train_time:131741ms step_avg:154.44ms
step:864/1480 train_time:131907ms step_avg:154.46ms
step:865/1480 train_time:132068ms step_avg:154.47ms
step:866/1480 train_time:132235ms step_avg:154.48ms
step:867/1480 train_time:132397ms step_avg:154.49ms
step:868/1480 train_time:132558ms step_avg:154.50ms
step:869/1480 train_time:132720ms step_avg:154.51ms
step:870/1480 train_time:132885ms step_avg:154.52ms
step:871/1480 train_time:133048ms step_avg:154.53ms
step:872/1480 train_time:133211ms step_avg:154.54ms
step:873/1480 train_time:133373ms step_avg:154.55ms
step:874/1480 train_time:133538ms step_avg:154.56ms
step:875/1480 train_time:133703ms step_avg:154.57ms
step:875/1480 val_loss:3.5072 train_time:133770ms step_avg:154.65ms
step:876/1480 train_time:133870ms step_avg:154.58ms
step:877/1480 train_time:134034ms step_avg:154.60ms
step:878/1480 train_time:134197ms step_avg:154.60ms
step:879/1480 train_time:134362ms step_avg:154.62ms
step:880/1480 train_time:134525ms step_avg:154.63ms
step:881/1480 train_time:134687ms step_avg:154.64ms
step:882/1480 train_time:134852ms step_avg:154.65ms
step:883/1480 train_time:135018ms step_avg:154.66ms
step:884/1480 train_time:135185ms step_avg:154.67ms
step:885/1480 train_time:135349ms step_avg:154.68ms
step:886/1480 train_time:135516ms step_avg:154.70ms
step:887/1480 train_time:135684ms step_avg:154.71ms
step:888/1480 train_time:135859ms step_avg:154.74ms
step:889/1480 train_time:136027ms step_avg:154.75ms
step:890/1480 train_time:136188ms step_avg:154.76ms
step:891/1480 train_time:136353ms step_avg:154.77ms
step:892/1480 train_time:136518ms step_avg:154.78ms
step:893/1480 train_time:136681ms step_avg:154.79ms
step:894/1480 train_time:136848ms step_avg:154.81ms
step:895/1480 train_time:137015ms step_avg:154.82ms
step:896/1480 train_time:137181ms step_avg:154.83ms
step:897/1480 train_time:137347ms step_avg:154.84ms
step:898/1480 train_time:137514ms step_avg:154.86ms
step:899/1480 train_time:137680ms step_avg:154.87ms
step:900/1480 train_time:137845ms step_avg:154.88ms
step:901/1480 train_time:138009ms step_avg:154.89ms
step:902/1480 train_time:138171ms step_avg:154.90ms
step:903/1480 train_time:138344ms step_avg:154.92ms
step:904/1480 train_time:138510ms step_avg:154.93ms
step:905/1480 train_time:138670ms step_avg:154.94ms
step:906/1480 train_time:138838ms step_avg:154.95ms
step:907/1480 train_time:139005ms step_avg:154.97ms
step:908/1480 train_time:139167ms step_avg:154.97ms
step:909/1480 train_time:139332ms step_avg:154.99ms
step:910/1480 train_time:139502ms step_avg:155.00ms
step:911/1480 train_time:139667ms step_avg:155.01ms
step:912/1480 train_time:139834ms step_avg:155.03ms
step:913/1480 train_time:140002ms step_avg:155.04ms
step:914/1480 train_time:140169ms step_avg:155.05ms
step:915/1480 train_time:140339ms step_avg:155.07ms
step:916/1480 train_time:140502ms step_avg:155.08ms
step:917/1480 train_time:140666ms step_avg:155.09ms
step:918/1480 train_time:140835ms step_avg:155.10ms
step:919/1480 train_time:141004ms step_avg:155.12ms
step:920/1480 train_time:141169ms step_avg:155.13ms
step:921/1480 train_time:141336ms step_avg:155.14ms
step:922/1480 train_time:141502ms step_avg:155.16ms
step:923/1480 train_time:141665ms step_avg:155.16ms
step:924/1480 train_time:141830ms step_avg:155.18ms
step:925/1480 train_time:141997ms step_avg:155.19ms
step:926/1480 train_time:142162ms step_avg:155.20ms
step:927/1480 train_time:142327ms step_avg:155.21ms
step:928/1480 train_time:142492ms step_avg:155.22ms
step:929/1480 train_time:142658ms step_avg:155.23ms
step:930/1480 train_time:142824ms step_avg:155.24ms
step:931/1480 train_time:142987ms step_avg:155.25ms
step:932/1480 train_time:143152ms step_avg:155.26ms
step:933/1480 train_time:143321ms step_avg:155.28ms
step:934/1480 train_time:143486ms step_avg:155.29ms
step:935/1480 train_time:143657ms step_avg:155.30ms
step:936/1480 train_time:143825ms step_avg:155.32ms
step:937/1480 train_time:143994ms step_avg:155.33ms
step:938/1480 train_time:144157ms step_avg:155.34ms
step:939/1480 train_time:144326ms step_avg:155.36ms
step:940/1480 train_time:144492ms step_avg:155.37ms
step:941/1480 train_time:144655ms step_avg:155.38ms
step:942/1480 train_time:144821ms step_avg:155.39ms
step:943/1480 train_time:144991ms step_avg:155.40ms
step:944/1480 train_time:145163ms step_avg:155.42ms
step:945/1480 train_time:145327ms step_avg:155.43ms
step:946/1480 train_time:145495ms step_avg:155.44ms
step:947/1480 train_time:145663ms step_avg:155.46ms
step:948/1480 train_time:145828ms step_avg:155.47ms
step:949/1480 train_time:145993ms step_avg:155.48ms
step:950/1480 train_time:146156ms step_avg:155.49ms
step:951/1480 train_time:146324ms step_avg:155.50ms
step:952/1480 train_time:146489ms step_avg:155.51ms
step:953/1480 train_time:146658ms step_avg:155.52ms
step:954/1480 train_time:146826ms step_avg:155.54ms
step:955/1480 train_time:146989ms step_avg:155.54ms
step:956/1480 train_time:147156ms step_avg:155.56ms
step:957/1480 train_time:147324ms step_avg:155.57ms
step:958/1480 train_time:147493ms step_avg:155.58ms
step:959/1480 train_time:147657ms step_avg:155.59ms
step:960/1480 train_time:147825ms step_avg:155.60ms
step:961/1480 train_time:147989ms step_avg:155.61ms
step:962/1480 train_time:148152ms step_avg:155.62ms
step:963/1480 train_time:148318ms step_avg:155.63ms
step:964/1480 train_time:148486ms step_avg:155.65ms
step:965/1480 train_time:148649ms step_avg:155.65ms
step:966/1480 train_time:148814ms step_avg:155.66ms
step:967/1480 train_time:148977ms step_avg:155.67ms
step:968/1480 train_time:149143ms step_avg:155.68ms
step:969/1480 train_time:149307ms step_avg:155.69ms
step:970/1480 train_time:149471ms step_avg:155.70ms
step:971/1480 train_time:149637ms step_avg:155.71ms
step:972/1480 train_time:149801ms step_avg:155.72ms
step:973/1480 train_time:149965ms step_avg:155.73ms
step:974/1480 train_time:150132ms step_avg:155.74ms
step:975/1480 train_time:150297ms step_avg:155.75ms
step:976/1480 train_time:150463ms step_avg:155.76ms
step:977/1480 train_time:150627ms step_avg:155.77ms
step:978/1480 train_time:150793ms step_avg:155.78ms
step:979/1480 train_time:150959ms step_avg:155.79ms
step:980/1480 train_time:151124ms step_avg:155.80ms
step:981/1480 train_time:151292ms step_avg:155.81ms
step:982/1480 train_time:151456ms step_avg:155.82ms
step:983/1480 train_time:151622ms step_avg:155.83ms
step:984/1480 train_time:151786ms step_avg:155.84ms
step:985/1480 train_time:151951ms step_avg:155.85ms
step:986/1480 train_time:152117ms step_avg:155.86ms
step:987/1480 train_time:152282ms step_avg:155.87ms
step:988/1480 train_time:152448ms step_avg:155.88ms
step:989/1480 train_time:152613ms step_avg:155.89ms
step:990/1480 train_time:152783ms step_avg:155.90ms
step:991/1480 train_time:152950ms step_avg:155.91ms
step:992/1480 train_time:153125ms step_avg:155.93ms
step:993/1480 train_time:153302ms step_avg:155.95ms
step:994/1480 train_time:153467ms step_avg:155.96ms
step:995/1480 train_time:153631ms step_avg:155.97ms
step:996/1480 train_time:153794ms step_avg:155.98ms
step:997/1480 train_time:153960ms step_avg:155.99ms
step:998/1480 train_time:154123ms step_avg:156.00ms
step:999/1480 train_time:154289ms step_avg:156.00ms
step:1000/1480 train_time:154457ms step_avg:156.02ms
step:1000/1480 val_loss:3.4438 train_time:154524ms step_avg:156.08ms
step:1001/1480 train_time:154624ms step_avg:156.03ms
step:1002/1480 train_time:154791ms step_avg:156.04ms
step:1003/1480 train_time:154963ms step_avg:156.06ms
step:1004/1480 train_time:155132ms step_avg:156.07ms
step:1005/1480 train_time:155300ms step_avg:156.08ms
step:1006/1480 train_time:155466ms step_avg:156.09ms
step:1007/1480 train_time:155631ms step_avg:156.10ms
step:1008/1480 train_time:155798ms step_avg:156.11ms
step:1009/1480 train_time:155970ms step_avg:156.13ms
step:1010/1480 train_time:156135ms step_avg:156.14ms
step:1011/1480 train_time:156301ms step_avg:156.14ms
step:1012/1480 train_time:156466ms step_avg:156.15ms
step:1013/1480 train_time:156635ms step_avg:156.17ms
step:1014/1480 train_time:156803ms step_avg:156.18ms
step:1015/1480 train_time:156970ms step_avg:156.19ms
step:1016/1480 train_time:157139ms step_avg:156.20ms
step:1017/1480 train_time:157310ms step_avg:156.22ms
step:1018/1480 train_time:157479ms step_avg:156.23ms
step:1019/1480 train_time:157647ms step_avg:156.24ms
step:1020/1480 train_time:157815ms step_avg:156.25ms
step:1021/1480 train_time:157981ms step_avg:156.26ms
step:1022/1480 train_time:158148ms step_avg:156.27ms
step:1023/1480 train_time:158316ms step_avg:156.28ms
step:1024/1480 train_time:158484ms step_avg:156.30ms
step:1025/1480 train_time:158653ms step_avg:156.31ms
step:1026/1480 train_time:158820ms step_avg:156.32ms
step:1027/1480 train_time:158986ms step_avg:156.33ms
step:1028/1480 train_time:159159ms step_avg:156.35ms
step:1029/1480 train_time:159335ms step_avg:156.36ms
step:1030/1480 train_time:159502ms step_avg:156.37ms
step:1031/1480 train_time:159665ms step_avg:156.38ms
step:1032/1480 train_time:159836ms step_avg:156.40ms
step:1033/1480 train_time:160003ms step_avg:156.41ms
step:1034/1480 train_time:160170ms step_avg:156.42ms
step:1035/1480 train_time:160338ms step_avg:156.43ms
step:1036/1480 train_time:160503ms step_avg:156.44ms
step:1037/1480 train_time:160671ms step_avg:156.45ms
step:1038/1480 train_time:160840ms step_avg:156.46ms
step:1039/1480 train_time:161008ms step_avg:156.47ms
step:1040/1480 train_time:161176ms step_avg:156.48ms
step:1041/1480 train_time:161343ms step_avg:156.49ms
step:1042/1480 train_time:161506ms step_avg:156.50ms
step:1043/1480 train_time:161671ms step_avg:156.51ms
step:1044/1480 train_time:161837ms step_avg:156.52ms
step:1045/1480 train_time:162006ms step_avg:156.53ms
step:1046/1480 train_time:162174ms step_avg:156.54ms
step:1047/1480 train_time:162341ms step_avg:156.55ms
step:1048/1480 train_time:162507ms step_avg:156.56ms
step:1049/1480 train_time:162672ms step_avg:156.57ms
step:1050/1480 train_time:162841ms step_avg:156.58ms
step:1051/1480 train_time:163010ms step_avg:156.59ms
step:1052/1480 train_time:163179ms step_avg:156.60ms
step:1053/1480 train_time:163345ms step_avg:156.61ms
step:1054/1480 train_time:163512ms step_avg:156.62ms
step:1055/1480 train_time:163677ms step_avg:156.63ms
step:1056/1480 train_time:163842ms step_avg:156.64ms
step:1057/1480 train_time:164008ms step_avg:156.65ms
step:1058/1480 train_time:164181ms step_avg:156.66ms
step:1059/1480 train_time:164352ms step_avg:156.67ms
step:1060/1480 train_time:164521ms step_avg:156.69ms
step:1061/1480 train_time:164685ms step_avg:156.69ms
step:1062/1480 train_time:164850ms step_avg:156.70ms
step:1063/1480 train_time:165016ms step_avg:156.71ms
step:1064/1480 train_time:165180ms step_avg:156.72ms
step:1065/1480 train_time:165345ms step_avg:156.73ms
step:1066/1480 train_time:165513ms step_avg:156.74ms
step:1067/1480 train_time:165684ms step_avg:156.75ms
step:1068/1480 train_time:165849ms step_avg:156.76ms
step:1069/1480 train_time:166019ms step_avg:156.77ms
step:1070/1480 train_time:166185ms step_avg:156.78ms
step:1071/1480 train_time:166360ms step_avg:156.80ms
step:1072/1480 train_time:166526ms step_avg:156.80ms
step:1073/1480 train_time:166689ms step_avg:156.81ms
step:1074/1480 train_time:166856ms step_avg:156.82ms
step:1075/1480 train_time:167027ms step_avg:156.83ms
step:1076/1480 train_time:167195ms step_avg:156.84ms
step:1077/1480 train_time:167362ms step_avg:156.85ms
step:1078/1480 train_time:167535ms step_avg:156.87ms
step:1079/1480 train_time:167707ms step_avg:156.88ms
step:1080/1480 train_time:167876ms step_avg:156.89ms
step:1081/1480 train_time:168042ms step_avg:156.90ms
step:1082/1480 train_time:168208ms step_avg:156.91ms
step:1083/1480 train_time:168374ms step_avg:156.92ms
step:1084/1480 train_time:168542ms step_avg:156.93ms
step:1085/1480 train_time:168711ms step_avg:156.94ms
step:1086/1480 train_time:168881ms step_avg:156.95ms
step:1087/1480 train_time:169046ms step_avg:156.96ms
step:1088/1480 train_time:169216ms step_avg:156.97ms
step:1089/1480 train_time:169387ms step_avg:156.99ms
step:1090/1480 train_time:169560ms step_avg:157.00ms
step:1091/1480 train_time:169727ms step_avg:157.01ms
step:1092/1480 train_time:169895ms step_avg:157.02ms
step:1093/1480 train_time:170063ms step_avg:157.03ms
step:1094/1480 train_time:170228ms step_avg:157.04ms
step:1095/1480 train_time:170392ms step_avg:157.04ms
step:1096/1480 train_time:170561ms step_avg:157.05ms
step:1097/1480 train_time:170730ms step_avg:157.07ms
step:1098/1480 train_time:170902ms step_avg:157.08ms
step:1099/1480 train_time:171072ms step_avg:157.09ms
step:1100/1480 train_time:171244ms step_avg:157.10ms
step:1101/1480 train_time:171413ms step_avg:157.12ms
step:1102/1480 train_time:171585ms step_avg:157.13ms
step:1103/1480 train_time:171761ms step_avg:157.15ms
step:1104/1480 train_time:171929ms step_avg:157.16ms
step:1105/1480 train_time:172101ms step_avg:157.17ms
step:1106/1480 train_time:172270ms step_avg:157.18ms
step:1107/1480 train_time:172437ms step_avg:157.19ms
step:1108/1480 train_time:172603ms step_avg:157.20ms
step:1109/1480 train_time:172769ms step_avg:157.21ms
step:1110/1480 train_time:172935ms step_avg:157.21ms
step:1111/1480 train_time:173101ms step_avg:157.22ms
step:1112/1480 train_time:173270ms step_avg:157.23ms
step:1113/1480 train_time:173452ms step_avg:157.25ms
step:1114/1480 train_time:173625ms step_avg:157.27ms
step:1115/1480 train_time:173799ms step_avg:157.28ms
step:1116/1480 train_time:173965ms step_avg:157.29ms
step:1117/1480 train_time:174137ms step_avg:157.31ms
step:1118/1480 train_time:174312ms step_avg:157.32ms
step:1119/1480 train_time:174478ms step_avg:157.33ms
step:1120/1480 train_time:174647ms step_avg:157.34ms
step:1121/1480 train_time:174816ms step_avg:157.35ms
step:1122/1480 train_time:174983ms step_avg:157.36ms
step:1123/1480 train_time:175150ms step_avg:157.37ms
step:1124/1480 train_time:175319ms step_avg:157.38ms
step:1125/1480 train_time:175487ms step_avg:157.39ms
step:1125/1480 val_loss:3.3885 train_time:175554ms step_avg:157.45ms
step:1126/1480 train_time:175655ms step_avg:157.40ms
step:1127/1480 train_time:175828ms step_avg:157.41ms
step:1128/1480 train_time:176000ms step_avg:157.42ms
step:1129/1480 train_time:176173ms step_avg:157.44ms
step:1130/1480 train_time:176343ms step_avg:157.45ms
step:1131/1480 train_time:176519ms step_avg:157.47ms
step:1132/1480 train_time:176686ms step_avg:157.47ms
step:1133/1480 train_time:176858ms step_avg:157.49ms
step:1134/1480 train_time:177029ms step_avg:157.50ms
step:1135/1480 train_time:177196ms step_avg:157.51ms
step:1136/1480 train_time:177367ms step_avg:157.52ms
step:1137/1480 train_time:177536ms step_avg:157.53ms
step:1138/1480 train_time:177708ms step_avg:157.54ms
step:1139/1480 train_time:177875ms step_avg:157.55ms
step:1140/1480 train_time:178044ms step_avg:157.56ms
step:1141/1480 train_time:178215ms step_avg:157.57ms
step:1142/1480 train_time:178383ms step_avg:157.58ms
step:1143/1480 train_time:178552ms step_avg:157.59ms
step:1144/1480 train_time:178721ms step_avg:157.60ms
step:1145/1480 train_time:178886ms step_avg:157.61ms
step:1146/1480 train_time:179057ms step_avg:157.62ms
step:1147/1480 train_time:179226ms step_avg:157.63ms
step:1148/1480 train_time:179393ms step_avg:157.64ms
step:1149/1480 train_time:179564ms step_avg:157.65ms
step:1150/1480 train_time:179734ms step_avg:157.66ms
step:1151/1480 train_time:179907ms step_avg:157.68ms
step:1152/1480 train_time:180078ms step_avg:157.69ms
step:1153/1480 train_time:180252ms step_avg:157.70ms
step:1154/1480 train_time:180419ms step_avg:157.71ms
step:1155/1480 train_time:180591ms step_avg:157.72ms
step:1156/1480 train_time:180768ms step_avg:157.74ms
step:1157/1480 train_time:180938ms step_avg:157.75ms
step:1158/1480 train_time:181105ms step_avg:157.76ms
step:1159/1480 train_time:181272ms step_avg:157.76ms
step:1160/1480 train_time:181436ms step_avg:157.77ms
step:1161/1480 train_time:181609ms step_avg:157.78ms
step:1162/1480 train_time:181781ms step_avg:157.80ms
step:1163/1480 train_time:181950ms step_avg:157.81ms
step:1164/1480 train_time:182119ms step_avg:157.82ms
step:1165/1480 train_time:182286ms step_avg:157.82ms
step:1166/1480 train_time:182454ms step_avg:157.83ms
step:1167/1480 train_time:182623ms step_avg:157.84ms
step:1168/1480 train_time:182789ms step_avg:157.85ms
step:1169/1480 train_time:182957ms step_avg:157.86ms
step:1170/1480 train_time:183127ms step_avg:157.87ms
step:1171/1480 train_time:183293ms step_avg:157.88ms
step:1172/1480 train_time:183460ms step_avg:157.88ms
step:1173/1480 train_time:183631ms step_avg:157.89ms
step:1174/1480 train_time:183812ms step_avg:157.91ms
step:1175/1480 train_time:183983ms step_avg:157.92ms
step:1176/1480 train_time:184153ms step_avg:157.94ms
step:1177/1480 train_time:184330ms step_avg:157.95ms
step:1178/1480 train_time:184497ms step_avg:157.96ms
step:1179/1480 train_time:184663ms step_avg:157.97ms
step:1180/1480 train_time:184843ms step_avg:157.99ms
step:1181/1480 train_time:185013ms step_avg:158.00ms
step:1182/1480 train_time:185181ms step_avg:158.00ms
step:1183/1480 train_time:185351ms step_avg:158.01ms
step:1184/1480 train_time:185520ms step_avg:158.02ms
step:1185/1480 train_time:185693ms step_avg:158.04ms
step:1186/1480 train_time:185864ms step_avg:158.05ms
step:1187/1480 train_time:186046ms step_avg:158.07ms
step:1188/1480 train_time:186214ms step_avg:158.08ms
step:1189/1480 train_time:186386ms step_avg:158.09ms
step:1190/1480 train_time:186552ms step_avg:158.10ms
step:1191/1480 train_time:186727ms step_avg:158.11ms
step:1192/1480 train_time:186893ms step_avg:158.12ms
step:1193/1480 train_time:187060ms step_avg:158.12ms
step:1194/1480 train_time:187229ms step_avg:158.13ms
step:1195/1480 train_time:187402ms step_avg:158.15ms
step:1196/1480 train_time:187586ms step_avg:158.17ms
step:1197/1480 train_time:187756ms step_avg:158.18ms
step:1198/1480 train_time:187937ms step_avg:158.20ms
step:1199/1480 train_time:188107ms step_avg:158.21ms
step:1200/1480 train_time:188275ms step_avg:158.21ms
step:1201/1480 train_time:188443ms step_avg:158.22ms
step:1202/1480 train_time:188627ms step_avg:158.24ms
step:1203/1480 train_time:188803ms step_avg:158.26ms
step:1204/1480 train_time:188978ms step_avg:158.27ms
step:1205/1480 train_time:189146ms step_avg:158.28ms
step:1206/1480 train_time:189314ms step_avg:158.29ms
step:1207/1480 train_time:189484ms step_avg:158.30ms
step:1208/1480 train_time:189651ms step_avg:158.31ms
step:1209/1480 train_time:189826ms step_avg:158.32ms
step:1210/1480 train_time:190001ms step_avg:158.33ms
step:1211/1480 train_time:190173ms step_avg:158.35ms
step:1212/1480 train_time:190344ms step_avg:158.36ms
step:1213/1480 train_time:190517ms step_avg:158.37ms
step:1214/1480 train_time:190694ms step_avg:158.38ms
step:1215/1480 train_time:190867ms step_avg:158.40ms
step:1216/1480 train_time:191035ms step_avg:158.40ms
step:1217/1480 train_time:191208ms step_avg:158.42ms
step:1218/1480 train_time:191377ms step_avg:158.42ms
step:1219/1480 train_time:191557ms step_avg:158.44ms
step:1220/1480 train_time:191728ms step_avg:158.45ms
step:1221/1480 train_time:191896ms step_avg:158.46ms
step:1222/1480 train_time:192063ms step_avg:158.47ms
step:1223/1480 train_time:192232ms step_avg:158.48ms
step:1224/1480 train_time:192410ms step_avg:158.49ms
step:1225/1480 train_time:192582ms step_avg:158.50ms
step:1226/1480 train_time:192756ms step_avg:158.52ms
step:1227/1480 train_time:192930ms step_avg:158.53ms
step:1228/1480 train_time:193100ms step_avg:158.54ms
step:1229/1480 train_time:193273ms step_avg:158.55ms
step:1230/1480 train_time:193453ms step_avg:158.57ms
step:1231/1480 train_time:193629ms step_avg:158.58ms
step:1232/1480 train_time:193803ms step_avg:158.60ms
step:1233/1480 train_time:193972ms step_avg:158.60ms
step:1234/1480 train_time:194141ms step_avg:158.61ms
step:1235/1480 train_time:194316ms step_avg:158.63ms
step:1236/1480 train_time:194487ms step_avg:158.64ms
step:1237/1480 train_time:194657ms step_avg:158.64ms
step:1238/1480 train_time:194843ms step_avg:158.67ms
step:1239/1480 train_time:195014ms step_avg:158.68ms
step:1240/1480 train_time:195185ms step_avg:158.69ms
step:1241/1480 train_time:195357ms step_avg:158.70ms
step:1242/1480 train_time:195527ms step_avg:158.71ms
step:1243/1480 train_time:195701ms step_avg:158.72ms
step:1244/1480 train_time:195867ms step_avg:158.73ms
step:1245/1480 train_time:196035ms step_avg:158.73ms
step:1246/1480 train_time:196207ms step_avg:158.74ms
step:1247/1480 train_time:196375ms step_avg:158.75ms
step:1248/1480 train_time:196544ms step_avg:158.76ms
step:1249/1480 train_time:196711ms step_avg:158.77ms
step:1250/1480 train_time:196879ms step_avg:158.77ms
step:1250/1480 val_loss:3.3381 train_time:196951ms step_avg:158.83ms
step:1251/1480 train_time:197057ms step_avg:158.79ms
step:1252/1480 train_time:197226ms step_avg:158.80ms
step:1253/1480 train_time:197394ms step_avg:158.80ms
step:1254/1480 train_time:197567ms step_avg:158.82ms
step:1255/1480 train_time:197754ms step_avg:158.84ms
step:1256/1480 train_time:197928ms step_avg:158.85ms
step:1257/1480 train_time:198097ms step_avg:158.86ms
step:1258/1480 train_time:198272ms step_avg:158.87ms
step:1259/1480 train_time:198443ms step_avg:158.88ms
step:1260/1480 train_time:198610ms step_avg:158.89ms
step:1261/1480 train_time:198782ms step_avg:158.90ms
step:1262/1480 train_time:198956ms step_avg:158.91ms
step:1263/1480 train_time:199130ms step_avg:158.92ms
step:1264/1480 train_time:199297ms step_avg:158.93ms
step:1265/1480 train_time:199464ms step_avg:158.94ms
step:1266/1480 train_time:199636ms step_avg:158.95ms
step:1267/1480 train_time:199807ms step_avg:158.96ms
step:1268/1480 train_time:199976ms step_avg:158.96ms
step:1269/1480 train_time:200152ms step_avg:158.98ms
step:1270/1480 train_time:200321ms step_avg:158.99ms
step:1271/1480 train_time:200490ms step_avg:158.99ms
step:1272/1480 train_time:200655ms step_avg:159.00ms
step:1273/1480 train_time:200828ms step_avg:159.01ms
step:1274/1480 train_time:200999ms step_avg:159.02ms
step:1275/1480 train_time:201167ms step_avg:159.03ms
step:1276/1480 train_time:201332ms step_avg:159.03ms
step:1277/1480 train_time:201505ms step_avg:159.04ms
step:1278/1480 train_time:201672ms step_avg:159.05ms
step:1279/1480 train_time:201844ms step_avg:159.06ms
step:1280/1480 train_time:202024ms step_avg:159.07ms
step:1281/1480 train_time:202193ms step_avg:159.08ms
step:1282/1480 train_time:202358ms step_avg:159.09ms
step:1283/1480 train_time:202529ms step_avg:159.10ms
step:1284/1480 train_time:202699ms step_avg:159.10ms
step:1285/1480 train_time:202867ms step_avg:159.11ms
step:1286/1480 train_time:203036ms step_avg:159.12ms
step:1287/1480 train_time:203208ms step_avg:159.13ms
step:1288/1480 train_time:203378ms step_avg:159.14ms
step:1289/1480 train_time:203561ms step_avg:159.16ms
step:1290/1480 train_time:203740ms step_avg:159.17ms
step:1291/1480 train_time:203914ms step_avg:159.18ms
step:1292/1480 train_time:204088ms step_avg:159.20ms
step:1293/1480 train_time:204261ms step_avg:159.21ms
step:1294/1480 train_time:204431ms step_avg:159.21ms
step:1295/1480 train_time:204602ms step_avg:159.22ms
step:1296/1480 train_time:204775ms step_avg:159.23ms
step:1297/1480 train_time:204947ms step_avg:159.24ms
step:1298/1480 train_time:205116ms step_avg:159.25ms
step:1299/1480 train_time:205287ms step_avg:159.26ms
step:1300/1480 train_time:205454ms step_avg:159.27ms
step:1301/1480 train_time:205623ms step_avg:159.27ms
step:1302/1480 train_time:205797ms step_avg:159.29ms
step:1303/1480 train_time:205975ms step_avg:159.30ms
step:1304/1480 train_time:206150ms step_avg:159.31ms
step:1305/1480 train_time:206318ms step_avg:159.32ms
step:1306/1480 train_time:206492ms step_avg:159.33ms
step:1307/1480 train_time:206660ms step_avg:159.34ms
step:1308/1480 train_time:206829ms step_avg:159.34ms
step:1309/1480 train_time:207001ms step_avg:159.35ms
step:1310/1480 train_time:207170ms step_avg:159.36ms
step:1311/1480 train_time:207338ms step_avg:159.37ms
step:1312/1480 train_time:207511ms step_avg:159.38ms
step:1313/1480 train_time:207679ms step_avg:159.38ms
step:1314/1480 train_time:207851ms step_avg:159.40ms
step:1315/1480 train_time:208022ms step_avg:159.40ms
step:1316/1480 train_time:208190ms step_avg:159.41ms
step:1317/1480 train_time:208360ms step_avg:159.42ms
step:1318/1480 train_time:208540ms step_avg:159.43ms
step:1319/1480 train_time:208715ms step_avg:159.45ms
step:1320/1480 train_time:208892ms step_avg:159.46ms
step:1321/1480 train_time:209065ms step_avg:159.47ms
step:1322/1480 train_time:209247ms step_avg:159.49ms
step:1323/1480 train_time:209417ms step_avg:159.49ms
step:1324/1480 train_time:209591ms step_avg:159.51ms
step:1325/1480 train_time:209772ms step_avg:159.52ms
step:1326/1480 train_time:209950ms step_avg:159.54ms
step:1327/1480 train_time:210119ms step_avg:159.54ms
step:1328/1480 train_time:210290ms step_avg:159.55ms
step:1329/1480 train_time:210485ms step_avg:159.58ms
step:1330/1480 train_time:210665ms step_avg:159.59ms
step:1331/1480 train_time:210835ms step_avg:159.60ms
step:1332/1480 train_time:211010ms step_avg:159.61ms
step:1333/1480 train_time:211185ms step_avg:159.63ms
step:1334/1480 train_time:211355ms step_avg:159.63ms
step:1335/1480 train_time:211524ms step_avg:159.64ms
step:1336/1480 train_time:211709ms step_avg:159.66ms
step:1337/1480 train_time:211883ms step_avg:159.67ms
step:1338/1480 train_time:212055ms step_avg:159.68ms
step:1339/1480 train_time:212231ms step_avg:159.69ms
step:1340/1480 train_time:212403ms step_avg:159.70ms
step:1341/1480 train_time:212572ms step_avg:159.71ms
step:1342/1480 train_time:212747ms step_avg:159.72ms
step:1343/1480 train_time:212917ms step_avg:159.73ms
step:1344/1480 train_time:213090ms step_avg:159.74ms
step:1345/1480 train_time:213268ms step_avg:159.75ms
step:1346/1480 train_time:213436ms step_avg:159.76ms
step:1347/1480 train_time:213607ms step_avg:159.77ms
step:1348/1480 train_time:213776ms step_avg:159.77ms
step:1349/1480 train_time:213948ms step_avg:159.78ms
step:1350/1480 train_time:214121ms step_avg:159.79ms
step:1351/1480 train_time:214291ms step_avg:159.80ms
step:1352/1480 train_time:214462ms step_avg:159.81ms
step:1353/1480 train_time:214639ms step_avg:159.82ms
step:1354/1480 train_time:214810ms step_avg:159.83ms
step:1355/1480 train_time:214977ms step_avg:159.83ms
step:1356/1480 train_time:215150ms step_avg:159.84ms
step:1357/1480 train_time:215323ms step_avg:159.85ms
step:1358/1480 train_time:215494ms step_avg:159.86ms
step:1359/1480 train_time:215666ms step_avg:159.87ms
step:1360/1480 train_time:215841ms step_avg:159.88ms
step:1361/1480 train_time:216018ms step_avg:159.89ms
step:1362/1480 train_time:216192ms step_avg:159.91ms
step:1363/1480 train_time:216373ms step_avg:159.92ms
step:1364/1480 train_time:216541ms step_avg:159.93ms
step:1365/1480 train_time:216708ms step_avg:159.93ms
step:1366/1480 train_time:216879ms step_avg:159.94ms
step:1367/1480 train_time:217051ms step_avg:159.95ms
step:1368/1480 train_time:217223ms step_avg:159.96ms
step:1369/1480 train_time:217405ms step_avg:159.97ms
step:1370/1480 train_time:217584ms step_avg:159.99ms
step:1371/1480 train_time:217756ms step_avg:160.00ms
step:1372/1480 train_time:217932ms step_avg:160.01ms
step:1373/1480 train_time:218100ms step_avg:160.01ms
step:1374/1480 train_time:218275ms step_avg:160.03ms
step:1375/1480 train_time:218447ms step_avg:160.03ms
step:1375/1480 val_loss:3.2988 train_time:218515ms step_avg:160.08ms
step:1376/1480 train_time:218621ms step_avg:160.04ms
step:1377/1480 train_time:218794ms step_avg:160.05ms
step:1378/1480 train_time:218963ms step_avg:160.06ms
step:1379/1480 train_time:219137ms step_avg:160.07ms
step:1380/1480 train_time:219311ms step_avg:160.08ms
step:1381/1480 train_time:219490ms step_avg:160.10ms
step:1382/1480 train_time:219661ms step_avg:160.10ms
step:1383/1480 train_time:219833ms step_avg:160.11ms
step:1384/1480 train_time:220009ms step_avg:160.12ms
step:1385/1480 train_time:220173ms step_avg:160.13ms
step:1386/1480 train_time:220344ms step_avg:160.13ms
step:1387/1480 train_time:220514ms step_avg:160.14ms
step:1388/1480 train_time:220683ms step_avg:160.15ms
step:1389/1480 train_time:220855ms step_avg:160.16ms
step:1390/1480 train_time:221023ms step_avg:160.16ms
step:1391/1480 train_time:221193ms step_avg:160.17ms
step:1392/1480 train_time:221367ms step_avg:160.18ms
step:1393/1480 train_time:221536ms step_avg:160.19ms
step:1394/1480 train_time:221708ms step_avg:160.19ms
step:1395/1480 train_time:221876ms step_avg:160.20ms
step:1396/1480 train_time:222045ms step_avg:160.21ms
step:1397/1480 train_time:222213ms step_avg:160.21ms
step:1398/1480 train_time:222381ms step_avg:160.22ms
step:1399/1480 train_time:222550ms step_avg:160.22ms
step:1400/1480 train_time:222728ms step_avg:160.24ms
step:1401/1480 train_time:222894ms step_avg:160.24ms
step:1402/1480 train_time:223066ms step_avg:160.25ms
step:1403/1480 train_time:223243ms step_avg:160.26ms
step:1404/1480 train_time:223414ms step_avg:160.27ms
step:1405/1480 train_time:223591ms step_avg:160.28ms
step:1406/1480 train_time:223765ms step_avg:160.29ms
step:1407/1480 train_time:223932ms step_avg:160.30ms
step:1408/1480 train_time:224100ms step_avg:160.30ms
step:1409/1480 train_time:224283ms step_avg:160.32ms
step:1410/1480 train_time:224451ms step_avg:160.32ms
step:1411/1480 train_time:224618ms step_avg:160.33ms
step:1412/1480 train_time:224789ms step_avg:160.33ms
step:1413/1480 train_time:224959ms step_avg:160.34ms
step:1414/1480 train_time:225131ms step_avg:160.35ms
step:1415/1480 train_time:225306ms step_avg:160.36ms
step:1416/1480 train_time:225493ms step_avg:160.38ms
step:1417/1480 train_time:225668ms step_avg:160.39ms
step:1418/1480 train_time:225839ms step_avg:160.40ms
step:1419/1480 train_time:226013ms step_avg:160.41ms
step:1420/1480 train_time:226189ms step_avg:160.42ms
step:1421/1480 train_time:226364ms step_avg:160.43ms
step:1422/1480 train_time:226535ms step_avg:160.44ms
step:1423/1480 train_time:226703ms step_avg:160.44ms
step:1424/1480 train_time:226879ms step_avg:160.45ms
step:1425/1480 train_time:227058ms step_avg:160.47ms
step:1426/1480 train_time:227230ms step_avg:160.47ms
step:1427/1480 train_time:227405ms step_avg:160.48ms
step:1428/1480 train_time:227575ms step_avg:160.49ms
step:1429/1480 train_time:227746ms step_avg:160.50ms
step:1430/1480 train_time:227918ms step_avg:160.51ms
step:1431/1480 train_time:228093ms step_avg:160.52ms
step:1432/1480 train_time:228270ms step_avg:160.53ms
step:1433/1480 train_time:228449ms step_avg:160.54ms
step:1434/1480 train_time:228631ms step_avg:160.56ms
step:1435/1480 train_time:228806ms step_avg:160.57ms
step:1436/1480 train_time:228979ms step_avg:160.57ms
step:1437/1480 train_time:229150ms step_avg:160.58ms
step:1438/1480 train_time:229318ms step_avg:160.59ms
step:1439/1480 train_time:229494ms step_avg:160.60ms
step:1440/1480 train_time:229666ms step_avg:160.61ms
step:1441/1480 train_time:229836ms step_avg:160.61ms
step:1442/1480 train_time:230013ms step_avg:160.62ms
step:1443/1480 train_time:230202ms step_avg:160.64ms
step:1444/1480 train_time:230373ms step_avg:160.65ms
step:1445/1480 train_time:230543ms step_avg:160.66ms
step:1446/1480 train_time:230718ms step_avg:160.67ms
step:1447/1480 train_time:230895ms step_avg:160.68ms
step:1448/1480 train_time:231067ms step_avg:160.69ms
step:1449/1480 train_time:231239ms step_avg:160.69ms
step:1450/1480 train_time:231411ms step_avg:160.70ms
step:1451/1480 train_time:231581ms step_avg:160.71ms
step:1452/1480 train_time:231755ms step_avg:160.72ms
step:1453/1480 train_time:231925ms step_avg:160.72ms
step:1454/1480 train_time:232098ms step_avg:160.73ms
step:1455/1480 train_time:232277ms step_avg:160.75ms
step:1456/1480 train_time:232451ms step_avg:160.75ms
step:1457/1480 train_time:232622ms step_avg:160.76ms
step:1458/1480 train_time:232792ms step_avg:160.77ms
step:1459/1480 train_time:232970ms step_avg:160.78ms
step:1460/1480 train_time:233142ms step_avg:160.79ms
step:1461/1480 train_time:233316ms step_avg:160.80ms
step:1462/1480 train_time:233489ms step_avg:160.80ms
step:1463/1480 train_time:233666ms step_avg:160.82ms
step:1464/1480 train_time:233841ms step_avg:160.83ms
step:1465/1480 train_time:234013ms step_avg:160.83ms
step:1466/1480 train_time:234184ms step_avg:160.84ms
step:1467/1480 train_time:234359ms step_avg:160.85ms
step:1468/1480 train_time:234529ms step_avg:160.86ms
step:1469/1480 train_time:234703ms step_avg:160.87ms
step:1470/1480 train_time:234885ms step_avg:160.88ms
step:1471/1480 train_time:235072ms step_avg:160.90ms
step:1472/1480 train_time:235252ms step_avg:160.91ms
step:1473/1480 train_time:235423ms step_avg:160.92ms
step:1474/1480 train_time:235600ms step_avg:160.93ms
step:1475/1480 train_time:235778ms step_avg:160.94ms
step:1476/1480 train_time:235950ms step_avg:160.95ms
step:1477/1480 train_time:236132ms step_avg:160.96ms
step:1478/1480 train_time:236313ms step_avg:160.98ms
step:1479/1480 train_time:236487ms step_avg:160.98ms
step:1480/1480 train_time:236660ms step_avg:160.99ms
step:1480/1480 val_loss:3.2798 train_time:236730ms step_avg:161.04ms
